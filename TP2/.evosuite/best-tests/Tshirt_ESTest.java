/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 10:52:33 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tshirt_ESTest extends Tshirt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long((-1115));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt(" Descri\u00E7\u00E3o: ", ")O2RnFFQ", (-3070.2411072), false, (-1115), 0, long0, long0, tamanho0, padrao0);
      String string0 = tshirt0.toString();
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o:  Descri\u00E7\u00E3o:  Marca: )O2RnFFQ Pre\u00E7o base: -3070.2411072 Novo: false Estado de uso: -1115 N\u00FAmero de utilizadores: 0 Disponivel: true Id da transportadora: -1115 Id do vendedor: -1115 } Tamanho: XL Padr\u00E3o: palmeiras}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long(1819);
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("@", "@", 1906.9879126041812, true, 1819, 1819, long0, long0, tamanho0, padrao0);
      LocalDate localDate0 = MockLocalDate.now();
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals(1906.9879126041812, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long((-1115));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt(" Descri\u00E7\u00E3o: ", ")O2RnFFQ", (-3070.2411072), false, (-1115), 0, long0, long0, tamanho0, padrao0);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals((-1535.1205536), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      tshirt0.getTamanho();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      tshirt0.getPadrao();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(0L);
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("$t2&6", "$t2&6", 0.0, true, 0, 0, long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = tshirt0.clone();
      assertTrue(tshirt1.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1115));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt(" Descri\u00E7\u00E3o: ", ")O2RnFFQ", (-3070.2411072), false, (-1115), 0, long0, long0, tamanho0, padrao0);
      Artigo.setContador(0);
      Tshirt tshirt1 = tshirt0.clone();
      assertEquals("A1", tshirt1.getCodigo_barras());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Artigo.contador = (-1102L);
      Tshirt tshirt1 = tshirt0.clone();
      assertNotSame(tshirt0, tshirt1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        tshirt0.preco_atual(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      // Undeclared exception!
      try { 
        tshirt0.equals(tshirt1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = Long.getLong("");
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = null;
      try {
        tshirt0 = new Tshirt("}", "", 0.0, true, (-1), 0, (Long) null, long0, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tshirt tshirt0 = null;
      try {
        tshirt0 = new Tshirt((Tshirt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(1927);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 0.0, true, 1927, 1927, long0, long0, tamanho0, padrao0);
      Padrao padrao1 = tshirt0.getPadrao();
      assertSame(padrao1, padrao0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long(1927);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 0.0, true, 1927, 1927, long0, long0, tamanho0, padrao0);
      Tamanho tamanho1 = tshirt0.getTamanho();
      assertEquals(Tamanho.M, tamanho1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long(1927);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 0.0, true, 1927, 1927, long0, long0, tamanho0, padrao0);
      double double0 = tshirt0.preco_atual((LocalDate) null);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = MockLocalDate.now();
      Padrao padrao0 = Padrao.riscas;
      tshirt0.setPadrao(padrao0);
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = tshirt0.clone();
      Tamanho tamanho0 = Tamanho.M;
      tshirt1.setTamanho(tamanho0);
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt();
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Object object0 = new Object();
      boolean boolean0 = tshirt0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      boolean boolean0 = tshirt0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = Long.getLong("", (long) 1);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 2299.964448624, true, 1, 1, long0, long0, tamanho0, padrao0);
      boolean boolean0 = tshirt0.equals(tshirt0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Padrao padrao0 = Padrao.palmeiras;
      Tamanho tamanho0 = Tamanho.XL;
      Long long0 = Long.getLong("", (long) 589);
      Tshirt tshirt0 = new Tshirt("", "", 0L, false, 589, 589, long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertTrue(tshirt1.equals((Object)tshirt0));
      
      Padrao padrao1 = Padrao.liso;
      tshirt1.setPadrao(padrao1);
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = Long.getLong("", (long) 1);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 2299.964448624, true, 1, 1, long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = tshirt0.clone();
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertTrue(boolean0);
  }
}
