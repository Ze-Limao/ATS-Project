/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 10:46:59 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sapatilha_ESTest extends Sapatilha_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(4303L);
      assertEquals(4303.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha(":;ksB:S5]cz", ":;ksB:S5]cz", double0, true, 1, 2143052734, long0, long0, 45, false, ":;ksB:S5]cz", 2143052734, false, 45);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(":;ksB:S5]cz", sapatilha0.getCor());
      assertEquals(45, sapatilha0.getTamanho());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(4303.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2143052734, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2143052734, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(1, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(":;ksB:S5]cz", sapatilha0.getMarca());
      assertEquals(45.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getNovo());
      assertEquals(":;ksB:S5]cz", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1602L);
      assertNotNull(localDate0);
      
      double double1 = sapatilha0.preco_atual(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals(4303.0, double1, 0.01);
      assertEquals(":;ksB:S5]cz", sapatilha0.getCor());
      assertEquals(45, sapatilha0.getTamanho());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(4303.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2143052734, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2143052734, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(1, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(":;ksB:S5]cz", sapatilha0.getMarca());
      assertEquals(45.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getNovo());
      assertEquals(":;ksB:S5]cz", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      
      sapatilha0.setPreco_base(1.0);
      assertEquals(2L, Artigo.contador);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      
      String string0 = sapatilha0.mostrar((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 1.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0} Pre\u00E7o atual: 0.90\u20AC \n", string0);
      assertNotNull(string0);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double(528.6);
      assertEquals(528.6, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 0, 0, long0, long0, 0, false, "", 0, false, 528.6);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getMarca());
      
      double double1 = sapatilha0.preco_atual((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getMarca());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.isPremium());
      
      sapatilha1.setDesconto((-3.1305554521775103));
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals((-3.1305554521775103), sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isPremium());
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertFalse(boolean0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals((-3.1305554521775103), sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isPremium());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-2485L));
      assertEquals((-2485L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 10, 10, long0, long0, (-2508), false, "ry9556hxSVnDW5", (-2508), false, (-2508));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(10, sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-2508), sapatilha0.getAnoColecao());
      assertEquals("ry9556hxSVnDW5", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals((-2508.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-2508), sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-2485L), sapatilha0.getIdTransportadora());
      assertEquals((-2485L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(10, sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-2508), sapatilha0.getAnoColecao());
      assertEquals("ry9556hxSVnDW5", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals((-2508.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-2508), sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-2485L), sapatilha0.getIdTransportadora());
      assertEquals((-2485L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals("", sapatilha1.getMarca());
      assertEquals("ry9556hxSVnDW5", sapatilha1.getCor());
      assertEquals((-2508.0), sapatilha1.getDesconto(), 0.01);
      assertEquals((-2508), sapatilha1.getAnoColecao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(10, sapatilha1.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-2485L), sapatilha1.getIdTransportadora());
      assertEquals((-2508), sapatilha1.getTamanho());
      assertEquals((-2485L), sapatilha1.getIdVendedor());
      assertEquals(10, sapatilha1.getEstado_uso());
      assertEquals("", sapatilha1.getDescricao());
      assertEquals("A", sapatilha1.getCodigo());
      assertTrue(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
      
      sapatilha0.setAnoColecao(10);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(10, sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("ry9556hxSVnDW5", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals((-2508.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-2508), sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-2485L), sapatilha0.getIdTransportadora());
      assertEquals((-2485L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(10, sapatilha0.getAnoColecao());
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertFalse(boolean0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(10, sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("ry9556hxSVnDW5", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals((-2508.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-2508), sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-2485L), sapatilha0.getIdTransportadora());
      assertEquals((-2485L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(10, sapatilha0.getAnoColecao());
      assertEquals("", sapatilha1.getMarca());
      assertEquals("ry9556hxSVnDW5", sapatilha1.getCor());
      assertEquals((-2508.0), sapatilha1.getDesconto(), 0.01);
      assertEquals((-2508), sapatilha1.getAnoColecao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(10, sapatilha1.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-2485L), sapatilha1.getIdTransportadora());
      assertEquals((-2508), sapatilha1.getTamanho());
      assertEquals((-2485L), sapatilha1.getIdVendedor());
      assertEquals(10, sapatilha1.getEstado_uso());
      assertEquals("", sapatilha1.getDescricao());
      assertEquals("A", sapatilha1.getCodigo());
      assertTrue(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("", sapatilha1.getCor());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertFalse(sapatilha1.isAtacadores());
      assertFalse(sapatilha1.isPremium());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      
      sapatilha0.setTamanho((-2146822459));
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-2146822459), sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertFalse(boolean0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-2146822459), sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("", sapatilha1.getCor());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertFalse(sapatilha1.isAtacadores());
      assertFalse(sapatilha1.isPremium());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double(74.12);
      assertEquals(74.12, (double)double0, 0.01);
      assertNotNull(double0);
      
      Sapatilha sapatilha0 = new Sapatilha("\"''#ke)", "A", double0, true, 198, 198, (Long) 4L, (Long) 4L, 198, false, "A", 226, true, 74.12);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(198, sapatilha0.getN_utilizadores());
      assertEquals("\"''#ke)", sapatilha0.getDescricao());
      assertEquals(4L, sapatilha0.getIdVendedor());
      assertEquals(226, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(198, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertEquals(74.12, sapatilha0.getPreco_base(), 0.01);
      assertEquals(74.12, sapatilha0.getDesconto(), 0.01);
      assertEquals(198, sapatilha0.getTamanho());
      assertEquals(4L, sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
      
      boolean boolean0 = sapatilha0.isPremium();
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      assertEquals(198, sapatilha0.getN_utilizadores());
      assertEquals("\"''#ke)", sapatilha0.getDescricao());
      assertEquals(4L, sapatilha0.getIdVendedor());
      assertEquals(226, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(198, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertEquals(74.12, sapatilha0.getPreco_base(), 0.01);
      assertEquals(74.12, sapatilha0.getDesconto(), 0.01);
      assertEquals(198, sapatilha0.getTamanho());
      assertEquals(4L, sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      
      boolean boolean0 = sapatilha0.isAtacadores();
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(652);
      assertEquals(652L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("Vg&XA|O--I#KR1", "Vg&XA|O--I#KR1", double0, true, 652, 1562, long0, long0, (-601), true, "Vg&XA|O--I#KR1", 652, true, 280.8488537);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isPremium());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getDescricao());
      assertEquals(280.8488537, sapatilha0.getDesconto(), 0.01);
      assertEquals(1562, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-601), sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getMarca());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getCor());
      assertEquals(652L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(652L, sapatilha0.getIdTransportadora());
      assertEquals(652, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(652, sapatilha0.getAnoColecao());
      
      sapatilha0.setTamanho(766);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha0.getNovo());
      assertEquals(766, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isPremium());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getDescricao());
      assertEquals(280.8488537, sapatilha0.getDesconto(), 0.01);
      assertEquals(1562, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getMarca());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getCor());
      assertEquals(652L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(652L, sapatilha0.getIdTransportadora());
      assertEquals(652, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(652, sapatilha0.getAnoColecao());
      
      int int0 = sapatilha0.getTamanho();
      assertEquals(2L, Artigo.contador);
      assertEquals(766, int0);
      assertTrue(sapatilha0.getNovo());
      assertEquals(766, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isPremium());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getDescricao());
      assertEquals(280.8488537, sapatilha0.getDesconto(), 0.01);
      assertEquals(1562, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getMarca());
      assertEquals("Vg&XA|O--I#KR1", sapatilha0.getCor());
      assertEquals(652L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(652L, sapatilha0.getIdTransportadora());
      assertEquals(652, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(652, sapatilha0.getAnoColecao());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double(5921.396);
      assertEquals(5921.396, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha(".%gk_lPqA", ".%gk_lPqA", double0, false, 0, 0, long0, long0, (-1668), true, ",__u2>n", 0, true, (-1514.48028695588));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1514.48028695588), sapatilha0.getDesconto(), 0.01);
      assertEquals(".%gk_lPqA", sapatilha0.getMarca());
      assertEquals(5921.396, sapatilha0.getPreco_base(), 0.01);
      assertEquals(",__u2>n", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(".%gk_lPqA", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals((-1668), sapatilha0.getTamanho());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isAtacadores());
      
      int int0 = sapatilha0.getTamanho();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1668), int0);
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1514.48028695588), sapatilha0.getDesconto(), 0.01);
      assertEquals(".%gk_lPqA", sapatilha0.getMarca());
      assertEquals(5921.396, sapatilha0.getPreco_base(), 0.01);
      assertEquals(",__u2>n", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(".%gk_lPqA", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals((-1668), sapatilha0.getTamanho());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isAtacadores());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = Long.getLong("pa8cS9(92B@5", (long) 10);
      assertEquals(10L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha((String) null, (String) null, double0, true, 10, 0, long0, long0, 0, false, " Cor: ", 0, false, 10);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(10L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(10.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(" Cor: ", sapatilha0.getCor());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(10L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.getNovo());
      assertNull(sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getTamanho());
      assertNull(sapatilha0.getMarca());
      
      double double1 = sapatilha0.getDesconto();
      assertEquals(2L, Artigo.contador);
      assertEquals(10.0, double1, 0.01);
      assertEquals(10L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(10.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(" Cor: ", sapatilha0.getCor());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(10L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.getNovo());
      assertNull(sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getTamanho());
      assertNull(sapatilha0.getMarca());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      
      sapatilha0.setDesconto((-255.5624));
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-255.5624), sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      
      double double0 = sapatilha0.getDesconto();
      assertEquals(2L, Artigo.contador);
      assertEquals((-255.5624), double0, 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-255.5624), sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getCor());
      
      sapatilha0.setCor((String) null);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertNull(sapatilha0.getCor());
      
      String string0 = sapatilha0.getCor();
      assertEquals(2L, Artigo.contador);
      assertNull(string0);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertNull(sapatilha0.getCor());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(528.6);
      assertEquals(528.6, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 0, 0, long0, long0, 0, false, "", 0, false, 528.6);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      
      String string0 = sapatilha0.getCor();
      assertEquals(2L, Artigo.contador);
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(0.01);
      assertEquals(0.01, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-621L));
      assertEquals((-621L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, true, 0, 1, long0, long0, 1, true, "", 1, true, 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(1, sapatilha0.getAnoColecao());
      assertEquals(0.01, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(1, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-621L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.01, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals((-621L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.getNovo());
      assertEquals(1, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals(2L, Artigo.contador);
      assertEquals(1, int0);
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(1, sapatilha0.getAnoColecao());
      assertEquals(0.01, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(1, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-621L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.01, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals((-621L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.getNovo());
      assertEquals(1, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getDisponivel());
      
      sapatilha0.setAnoColecao((-1364));
      assertEquals(2L, Artigo.contador);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1364), sapatilha0.getAnoColecao());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getDisponivel());
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1364), int0);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1364), sapatilha0.getAnoColecao());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-3266.525));
      assertEquals((-3266.525), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-809));
      assertEquals((-809L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("AteY+H{+!81D1o:C", "Oi{R|-:OWl", double0, false, (-809), 2954, long0, long0, 2954, true, "", (-809), true, (-835L));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-809L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2954, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isPremium());
      assertEquals("Oi{R|-:OWl", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3266.525), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-809L), sapatilha0.getIdTransportadora());
      assertEquals((-835.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(2954, sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals("AteY+H{+!81D1o:C", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-809), sapatilha0.getEstado_uso());
      assertEquals((-809), sapatilha0.getAnoColecao());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertNotNull(sapatilha1);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-809L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2954, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.isPremium());
      assertEquals("Oi{R|-:OWl", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3266.525), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-809L), sapatilha0.getIdTransportadora());
      assertEquals((-835.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(2954, sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals("AteY+H{+!81D1o:C", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-809), sapatilha0.getEstado_uso());
      assertEquals((-809), sapatilha0.getAnoColecao());
      assertTrue(sapatilha1.isPremium());
      assertEquals((-3266.525), sapatilha1.getPreco_base(), 0.01);
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertTrue(sapatilha1.isAtacadores());
      assertTrue(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.getNovo());
      assertEquals((-809L), sapatilha1.getIdTransportadora());
      assertEquals((-835.0), sapatilha1.getDesconto(), 0.01);
      assertEquals((-809L), sapatilha1.getIdVendedor());
      assertEquals((-809), sapatilha1.getEstado_uso());
      assertEquals(2954, sapatilha1.getTamanho());
      assertEquals((-809), sapatilha1.getAnoColecao());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("Oi{R|-:OWl", sapatilha1.getMarca());
      assertEquals("", sapatilha1.getCor());
      assertEquals("AteY+H{+!81D1o:C", sapatilha1.getDescricao());
      assertEquals(2954, sapatilha1.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double(528.6);
      assertEquals(528.6, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 0, 0, long0, long0, 0, false, "", 0, false, 528.6);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertNotNull(sapatilha1);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getN_utilizadores());
      assertEquals(0L, sapatilha1.getIdVendedor());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(0, sapatilha1.getEstado_uso());
      assertEquals(528.6, sapatilha1.getDesconto(), 0.01);
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.isPremium());
      assertFalse(sapatilha1.isAtacadores());
      assertTrue(sapatilha1.getDisponivel());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals("", sapatilha1.getDescricao());
      assertEquals(528.6, sapatilha1.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      
      Artigo.setContador(0L);
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertNotNull(sapatilha1);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      
      Artigo.contador = (-525L);
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals((-525L), Artigo.contador);
      assertEquals((-525L), Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertNotNull(sapatilha1);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-525L), sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.isPremium());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-525L), sapatilha1.getContador());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = new Double(74.12);
      assertEquals(74.12, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(226);
      assertEquals(226L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("\"''#ke)", "\"''#ke)", double0, true, 226, 226, long0, long0, 226, true, "\"''#ke)", 198, false, 2657.4782062717204);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(74.12, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(226, sapatilha0.getN_utilizadores());
      assertEquals(198, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("\"''#ke)", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(226L, sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(226, sapatilha0.getEstado_uso());
      assertEquals("\"''#ke)", sapatilha0.getDescricao());
      assertEquals("\"''#ke)", sapatilha0.getMarca());
      assertEquals(2657.4782062717204, sapatilha0.getDesconto(), 0.01);
      assertEquals(226L, sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getNovo());
      assertEquals(226, sapatilha0.getTamanho());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertNotNull(sapatilha1);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(74.12, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(226, sapatilha0.getN_utilizadores());
      assertEquals(198, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("\"''#ke)", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(226L, sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(226, sapatilha0.getEstado_uso());
      assertEquals("\"''#ke)", sapatilha0.getDescricao());
      assertEquals("\"''#ke)", sapatilha0.getMarca());
      assertEquals(2657.4782062717204, sapatilha0.getDesconto(), 0.01);
      assertEquals(226L, sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getNovo());
      assertEquals(226, sapatilha0.getTamanho());
      assertEquals(2657.4782062717204, sapatilha1.getDesconto(), 0.01);
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.isPremium());
      assertEquals(74.12, sapatilha1.getPreco_base(), 0.01);
      assertTrue(sapatilha1.getDisponivel());
      assertEquals(226, sapatilha1.getN_utilizadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertTrue(sapatilha1.isAtacadores());
      assertEquals(198, sapatilha1.getAnoColecao());
      assertEquals("\"''#ke)", sapatilha1.getCor());
      assertEquals("\"''#ke)", sapatilha1.getDescricao());
      assertEquals(226, sapatilha1.getEstado_uso());
      assertEquals(226L, sapatilha1.getIdTransportadora());
      assertEquals(226L, sapatilha1.getIdVendedor());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("\"''#ke)", sapatilha1.getMarca());
      assertTrue(sapatilha1.getNovo());
      assertEquals(226, sapatilha1.getTamanho());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      
      sapatilha0.setData_venda((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      
      // Undeclared exception!
      try { 
        sapatilha0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      
      sapatilha0.setData_venda((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      sapatilha0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha0.isPremium());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      
      // Undeclared exception!
      try { 
        sapatilha0.preco_atual(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Sapatilha", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Sapatilha sapatilha0 = null;
      try {
        sapatilha0 = new Sapatilha("Artigo invalido", "Artigo invalido", double0, false, 0, 0, (Long) null, (Long) null, (-1), true, " Marca: ", (-1), true, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Sapatilha sapatilha0 = null;
      try {
        sapatilha0 = new Sapatilha((Sapatilha) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double(74.12);
      assertEquals(74.12, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(226);
      assertEquals(226L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("\"''#ke)", "\"''#ke)", double0, true, 226, 226, long0, long0, 226, true, "\"''#ke)", 198, false, 2657.4782062717204);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.getNovo());
      assertEquals(226L, sapatilha0.getIdTransportadora());
      assertEquals(226, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(2657.4782062717204, sapatilha0.getDesconto(), 0.01);
      assertEquals("\"''#ke)", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(226, sapatilha0.getN_utilizadores());
      assertEquals(226L, sapatilha0.getIdVendedor());
      assertEquals(74.12, sapatilha0.getPreco_base(), 0.01);
      assertEquals("\"''#ke)", sapatilha0.getDescricao());
      assertEquals("\"''#ke)", sapatilha0.getMarca());
      assertEquals(226, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isPremium());
      assertEquals(198, sapatilha0.getAnoColecao());
      
      double double1 = sapatilha0.preco_atual((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double1, 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.getNovo());
      assertEquals(226L, sapatilha0.getIdTransportadora());
      assertEquals(226, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(2657.4782062717204, sapatilha0.getDesconto(), 0.01);
      assertEquals("\"''#ke)", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(226, sapatilha0.getN_utilizadores());
      assertEquals(226L, sapatilha0.getIdVendedor());
      assertEquals(74.12, sapatilha0.getPreco_base(), 0.01);
      assertEquals("\"''#ke)", sapatilha0.getDescricao());
      assertEquals("\"''#ke)", sapatilha0.getMarca());
      assertEquals(226, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isPremium());
      assertEquals(198, sapatilha0.getAnoColecao());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-4798));
      assertEquals((-4798L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, (-4798), (-4798), long0, long0, (-4798), false, "d^wBI<", (-4798), false, 852.747021);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-4798), sapatilha0.getN_utilizadores());
      assertEquals((-4798L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(852.747021, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-4798L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-4798), sapatilha0.getEstado_uso());
      assertEquals((-4798), sapatilha0.getAnoColecao());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals("d^wBI<", sapatilha0.getCor());
      assertEquals((-4798), sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      
      String string0 = sapatilha0.toString();
      assertEquals(2L, Artigo.contador);
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o:  Marca:  Pre\u00E7o base: 0.0 Novo: false Estado de uso: -4798 N\u00FAmero de utilizadores: -4798 Disponivel: true Id da transportadora: -4798 Id do vendedor: -4798 } Tamanho: -4798 Atacadores: false Cor: d^wBI< Data da Cole\u00E7\u00E3o: -4798 Premium: false Desconto: 852.747021}", string0);
      assertNotNull(string0);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-4798), sapatilha0.getN_utilizadores());
      assertEquals((-4798L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(852.747021, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-4798L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-4798), sapatilha0.getEstado_uso());
      assertEquals((-4798), sapatilha0.getAnoColecao());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals("d^wBI<", sapatilha0.getCor());
      assertEquals((-4798), sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-3841L));
      assertEquals((-3841L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha(" Cor: ", "f?", double0, true, 0, 10, long0, long0, 0, true, "mA\"d.g32a'W,`VU,", 1695, true, (-3841L));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("f?", sapatilha0.getMarca());
      assertEquals((-3841.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-3841L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-3841L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("mA\"d.g32a'W,`VU,", sapatilha0.getCor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(10, sapatilha0.getN_utilizadores());
      assertEquals(" Cor: ", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(1695, sapatilha0.getAnoColecao());
      
      boolean boolean0 = sapatilha0.isAtacadores();
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      assertEquals("f?", sapatilha0.getMarca());
      assertEquals((-3841.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-3841L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-3841L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("mA\"d.g32a'W,`VU,", sapatilha0.getCor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(10, sapatilha0.getN_utilizadores());
      assertEquals(" Cor: ", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(1695, sapatilha0.getAnoColecao());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(1838);
      assertEquals(1838L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("0.00", "0.00", double0, true, 1838, (-1731), long0, long0, (-1731), true, "0.00", (-1731), false, (-3294.9698));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(1838, sapatilha0.getEstado_uso());
      assertEquals((-3294.9698), sapatilha0.getDesconto(), 0.01);
      assertEquals("0.00", sapatilha0.getMarca());
      assertFalse(sapatilha0.isPremium());
      assertEquals("0.00", sapatilha0.getCor());
      assertEquals(1838L, sapatilha0.getIdVendedor());
      assertEquals((-1731), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(1838L, sapatilha0.getIdTransportadora());
      assertEquals("0.00", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1731), sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1731), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getNovo());
      
      String string0 = sapatilha0.getCor();
      assertEquals(2L, Artigo.contador);
      assertEquals("0.00", string0);
      assertNotNull(string0);
      assertEquals(1838, sapatilha0.getEstado_uso());
      assertEquals((-3294.9698), sapatilha0.getDesconto(), 0.01);
      assertEquals("0.00", sapatilha0.getMarca());
      assertFalse(sapatilha0.isPremium());
      assertEquals("0.00", sapatilha0.getCor());
      assertEquals(1838L, sapatilha0.getIdVendedor());
      assertEquals((-1731), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(1838L, sapatilha0.getIdTransportadora());
      assertEquals("0.00", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1731), sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1731), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getNovo());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Double double0 = new Double(528.6);
      assertEquals(528.6, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 0, 0, long0, long0, 0, false, "", 0, false, 528.6);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
      
      boolean boolean0 = sapatilha0.isPremium();
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(528.6, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(528.6, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = Long.getLong("pa8cS9(92B@5", (long) 10);
      assertEquals(10L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha((String) null, (String) null, double0, true, 10, 0, long0, long0, 0, false, " Cor: ", 0, false, 10);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isPremium());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals(" Cor: ", sapatilha0.getCor());
      assertNull(sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertNull(sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(10.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(10L, sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(10L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      assertFalse(sapatilha0.isPremium());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals(" Cor: ", sapatilha0.getCor());
      assertNull(sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertNull(sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(10.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(10L, sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(10L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      
      double double0 = sapatilha0.getDesconto();
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      
      int int0 = sapatilha0.getTamanho();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Double double0 = new Double(139.75528611943);
      assertEquals(139.75528611943, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = Long.valueOf((long) 1532);
      assertEquals(1532L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("8", "8", double0, true, 0, 1532, long0, long0, 0, true, "U[4&WV.;o1GE:h~G1iz", 0, false, 1532);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(1532, sapatilha0.getN_utilizadores());
      assertEquals(1532L, sapatilha0.getIdVendedor());
      assertEquals(139.75528611943, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals(1532L, sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1532.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("8", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("U[4&WV.;o1GE:h~G1iz", sapatilha0.getCor());
      assertEquals("8", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      
      Period period0 = Period.ofDays(0);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      double double1 = sapatilha0.preco_atual(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals(139.75528611943, double1, 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(1532, sapatilha0.getN_utilizadores());
      assertEquals(1532L, sapatilha0.getIdVendedor());
      assertEquals(139.75528611943, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals(1532L, sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1532.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("8", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("U[4&WV.;o1GE:h~G1iz", sapatilha0.getCor());
      assertEquals("8", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Double double0 = new Double(4865.0);
      assertEquals(4865.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = Long.getLong("A", (long) (-1117));
      assertEquals((-1117L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("A", "A", double0, true, (-1117), (-1117), long0, long0, (-1117), true, "A", (-3304), true, (-3304));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-3304.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(4865.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCor());
      assertEquals((-1117), sapatilha0.getN_utilizadores());
      assertEquals((-1117L), sapatilha0.getIdTransportadora());
      assertEquals((-1117), sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1117), sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
      assertEquals((-3304), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1117L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-3304));
      assertNotNull(localDate0);
      
      sapatilha0.setData_venda(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-3304.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(4865.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCor());
      assertEquals((-1117), sapatilha0.getN_utilizadores());
      assertEquals((-1117L), sapatilha0.getIdTransportadora());
      assertEquals((-1117), sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1117), sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
      assertEquals((-3304), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1117L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      
      double double1 = sapatilha0.preco_atual(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2565801.0, double1, 0.01);
      assertEquals((-3304.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(4865.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCor());
      assertEquals((-1117), sapatilha0.getN_utilizadores());
      assertEquals((-1117L), sapatilha0.getIdTransportadora());
      assertEquals((-1117), sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1117), sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
      assertEquals((-3304), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1117L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Double double0 = new Double(4865.0);
      Long long0 = Long.getLong("A", (long) (-1117));
      Sapatilha sapatilha0 = new Sapatilha("A", "A", double0, true, (-1117), (-1117), long0, long0, (-1117), true, "A", (-3304), true, (-3304));
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-3304));
      double double1 = sapatilha0.preco_atual(localDate0);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1117), sapatilha0.getTamanho());
      assertEquals((-3304.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(2565801.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha0.setDesconto(2L);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertEquals(2.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Double double0 = new Double(4865.0);
      Long long0 = Long.getLong("A", (long) (-1117));
      Sapatilha sapatilha0 = new Sapatilha("A", "A", double0, true, (-1117), (-1117), long0, long0, (-1117), true, "A", (-3304), true, (-3304));
      Sapatilha sapatilha1 = sapatilha0.clone();
      sapatilha0.setPremium(false);
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(sapatilha0.isPremium());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.setAnoColecao(1011248914);
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertEquals(1011248914, sapatilha1.getAnoColecao());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertEquals("", sapatilha1.getCor());
      
      sapatilha1.setCor("A");
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = sapatilha0.clone();
      sapatilha0.setAtacadores(true);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertTrue(sapatilha0.isAtacadores());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha0.setTamanho((-2146822459));
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertEquals((-2146822459), sapatilha0.getTamanho());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      
      LocalDate localDate0 = MockLocalDate.now();
      sapatilha0.setData_venda(localDate0);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      boolean boolean0 = sapatilha0.equals((Object) null);
      assertFalse(sapatilha0.isPremium());
      assertFalse(boolean0);
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      boolean boolean0 = sapatilha0.equals(sapatilha0);
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(boolean0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Double double0 = new Double(74.12);
      Long long0 = new Long(226);
      Sapatilha sapatilha0 = new Sapatilha("\"''#ke)", "\"''#ke)", double0, true, 226, 226, long0, long0, 226, true, "\"''#ke)", 198, false, 2657.4782062717204);
      Object object0 = new Object();
      boolean boolean0 = sapatilha0.equals(object0);
      assertFalse(sapatilha0.isPremium());
      assertEquals(226, sapatilha0.getTamanho());
      assertEquals(198, sapatilha0.getAnoColecao());
      assertEquals("\"''#ke)", sapatilha0.getCor());
      assertTrue(sapatilha0.isAtacadores());
      assertFalse(boolean0);
      assertEquals(2657.4782062717204, sapatilha0.getDesconto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = sapatilha0.clone();
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getTamanho());
      assertTrue(boolean0);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.isAtacadores());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Double double0 = new Double((-2266987.421207078));
      Long long0 = new Long(0L);
      Sapatilha sapatilha0 = new Sapatilha((String) null, (String) null, double0, true, 730, 730, long0, long0, (-1), true, "", (-1), true, (-2266987.421207078));
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      // Undeclared exception!
      try { 
        sapatilha0.equals(sapatilha1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }
}
