/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 10:51:26 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fatura_ESTest extends Fatura_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.atualizaFatura("", 0L, 0L, 0.0);
      fatura0.setCompra(true);
      fatura0.compra = false;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura();
      fatura1.equals(fatura2);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura2.isCompra();
      fatura0.setAlteracaoPreco((-1.9392265649848626));
      fatura0.getPrecoFinal();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura3.setArtigos(linkedHashSet0);
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura2.compra = false;
      fatura3.setIdEncomenda(1621L);
      fatura1.getAlteracaoPreco();
      fatura2.clone();
      fatura2.equals(fatura1);
      fatura0.clone();
      fatura0.toString();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = false;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura();
      fatura1.equals(fatura2);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura2.isCompra();
      fatura2.nifComprador = 226L;
      fatura0.setAlteracaoPreco((-1.9392265649848626));
      fatura0.getPrecoFinal();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura2.compra = false;
      fatura3.setIdEncomenda(1621L);
      fatura1.getAlteracaoPreco();
      fatura2.toString();
      Fatura fatura4 = fatura2.clone();
      fatura2.equals(fatura1);
      fatura4.toString();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = false;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura();
      fatura1.equals(fatura2);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura2.isCompra();
      fatura0.setAlteracaoPreco((-1.9392265649848626));
      fatura0.getPrecoFinal();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura2.compra = true;
      fatura3.setIdEncomenda(1621L);
      fatura1.getAlteracaoPreco();
      fatura2.toString();
      fatura2.clone();
      fatura2.equals(fatura1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setCompra(false);
      fatura0.compra = false;
      fatura0.toString();
      Fatura.setCodigo(1L);
      fatura0.getId();
      Fatura fatura1 = new Fatura();
      fatura0.equals(fatura1);
      Fatura fatura2 = fatura1.clone();
      fatura2.compra = false;
      fatura0.setAlteracaoPreco((-1.9392265649848626));
      fatura0.getPrecoFinal();
      fatura1.setPrecoFinal(0L);
      fatura1.setPrecoFinal((-1.0));
      fatura0.getPrecoFinal();
      fatura2.id = 3L;
      fatura1.getCustoProdutos();
      fatura1.compra = false;
      fatura2.setIdEncomenda(1621L);
      fatura0.getAlteracaoPreco();
      fatura1.toString();
      fatura1.clone();
      fatura1.equals(fatura0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getArtigos();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(fatura0);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      fatura1.alteracaoPreco = (-43.0);
      Fatura.setCodigo(0L);
      fatura1.setAlteracaoPreco((-2291.54));
      fatura1.setId(1618L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setArtigos(set0);
      Fatura.setCodigo(1618L);
      fatura0.atualizaFatura("/", (-2291.54), (-2291.54), 0L);
      fatura2.setCompra(false);
      fatura0.toString();
      fatura2.toString();
      fatura2.setId(9L);
      fatura1.setIdEncomenda(0L);
      fatura2.toString();
      fatura1.precoFinal = (double) 222L;
      fatura2.getId();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura(fatura2);
      fatura1.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = false;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura();
      fatura1.equals(fatura2);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura2.isCompra();
      fatura0.setAlteracaoPreco((-1.9392265649848626));
      fatura0.getPrecoFinal();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura2.compra = false;
      fatura3.setIdEncomenda(1621L);
      fatura1.getAlteracaoPreco();
      fatura2.toString();
      fatura2.clone();
      fatura2.equals(fatura1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getArtigos();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(fatura0);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      fatura1.alteracaoPreco = (-43.0);
      Fatura.setCodigo(0L);
      fatura1.setAlteracaoPreco((-2291.54));
      fatura1.setId(1618L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setArtigos(set0);
      Fatura.setCodigo(1618L);
      fatura0.atualizaFatura("/", (-2291.54), (-2291.54), 0L);
      fatura2.setCompra(false);
      fatura1.setId(1618L);
      fatura0.toString();
      fatura2.toString();
      fatura2.setId(9L);
      fatura1.setIdEncomenda(0L);
      fatura2.toString();
      fatura2.getId();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura();
      fatura1.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = fatura0.compra;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      fatura0.setIdEncomenda(1621L);
      fatura1.equals(fatura1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura0.setArtigos(linkedHashSet0);
      Fatura fatura2 = fatura0.clone();
      fatura2.compra = false;
      fatura0.setId(0L);
      fatura1.isCompra();
      fatura0.setAlteracaoPreco((-1.0));
      fatura0.getPrecoFinal();
      fatura1.setPrecoFinal(1621L);
      fatura0.setPrecoFinal((-1.0));
      fatura1.getPrecoFinal();
      fatura1.getCustoProdutos();
      fatura2.setIdEncomenda(1575L);
      fatura1.getAlteracaoPreco();
      fatura2.equals(fatura1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, (-1984L), (-1984L), set0, 1L, (-3257.0519765), 3112.8637581);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      Fatura.setCodigo((-1984L));
      fatura1.setAlteracaoPreco((-2291.54));
      fatura1.setId(1618L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setArtigos(set0);
      Fatura.setCodigo(1618L);
      fatura0.atualizaFatura("", (-2291.54), (-2291.54), (-1984L));
      fatura2.setCompra(true);
      fatura1.setId(1618L);
      fatura0.toString();
      fatura2.toString();
      fatura2.setId(9L);
      fatura1.setIdEncomenda((-1984L));
      fatura2.toString();
      fatura2.setCustoProdutos((-2291.54));
      fatura2.getId();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura(fatura2);
      fatura1.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.alteracaoPreco = (-1242.899);
      fatura0.custoProdutos = 1212.0;
      fatura0.setNifComprador(0L);
      fatura0.setAlteracaoPreco((-1242.899));
      fatura0.setPrecoFinal((-1242.899));
      fatura0.setCompra(false);
      fatura0.setNifComprador((-3L));
      fatura0.getArtigos();
      Fatura fatura1 = fatura0.clone();
      Fatura fatura2 = fatura1.clone();
      fatura1.id = 1L;
      fatura1.custoProdutos = (-3892.0);
      fatura1.equals(fatura0);
      fatura2.nifComprador = (-1L);
      fatura0.setCustoProdutos(0L);
      fatura0.toString();
      fatura0.getArtigos();
      fatura2.clone();
      fatura2.clone();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = new LinkedHashSet<String>();
      Set<String> set1 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, (-1984L), (-1984L), set1, 1L, (-3257.0519765), 3112.8637581);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      Fatura.setCodigo((-1984L));
      fatura1.setAlteracaoPreco((-2291.54));
      fatura1.setId(1618L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setArtigos(set1);
      Fatura.setCodigo(1618L);
      fatura0.atualizaFatura("", (-2291.54), (-2291.54), (-1984L));
      fatura2.setCompra(true);
      fatura1.setId(1618L);
      fatura0.toString();
      fatura2.toString();
      fatura2.setId(9L);
      fatura1.setIdEncomenda((-1984L));
      fatura2.toString();
      fatura2.getId();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura(fatura2);
      fatura1.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getArtigos();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(fatura0);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      fatura1.alteracaoPreco = (-43.0);
      Fatura.setCodigo(0L);
      fatura1.setAlteracaoPreco((-2291.54));
      fatura1.setId(1618L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setArtigos(set0);
      Fatura.setCodigo(1618L);
      fatura0.atualizaFatura("/", (-2291.54), (-2291.54), 0L);
      fatura2.setCompra(false);
      fatura1.setId(1618L);
      fatura0.toString();
      fatura2.toString();
      fatura2.setId(9L);
      fatura1.setIdEncomenda(0L);
      fatura2.toString();
      fatura2.getId();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura(fatura2);
      fatura1.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.alteracaoPreco = (-1242.899);
      fatura0.custoProdutos = 1212.0;
      fatura0.setNifComprador(0L);
      fatura0.setAlteracaoPreco((-1242.899));
      fatura0.setPrecoFinal((-1242.899));
      fatura0.setCompra(false);
      fatura0.setNifComprador(0L);
      fatura0.getArtigos();
      Fatura fatura1 = fatura0.clone();
      Fatura fatura2 = fatura1.clone();
      fatura1.id = 1L;
      fatura1.custoProdutos = (-3892.0);
      fatura1.equals(fatura0);
      fatura2.nifComprador = (-1L);
      fatura0.setCustoProdutos(0L);
      fatura0.toString();
      fatura0.getArtigos();
      fatura2.clone();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Fatura fatura0 = new Fatura(false, (-1L), (-3739L), (Set<String>) null, (-2516.980591893), (-2193.492809), (-2193.492809));
      fatura0.setId(0L);
      fatura0.setId(1L);
      fatura0.setCompra(true);
      fatura0.equals((Object) null);
      long long0 = 3333L;
      Fatura fatura1 = new Fatura(true, 1669L, 3333L, (Set<String>) null, 1L, (-448.7946), 0.0);
      fatura1.setAlteracaoPreco(0.0);
      Fatura.setCodigo(1L);
      fatura0.equals(fatura1);
      fatura1.id = (-1L);
      // Undeclared exception!
      try { 
        fatura0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fatura fatura0 = new Fatura(false, 2041L, (-1134L), (Set<String>) null, 2041L, 0.0, 1.0);
      // Undeclared exception!
      try { 
        fatura0.getArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.listIterator();
      fatura0.toString();
      fatura0.equals("Fatura 1 - Venda\nNIF do comprador: 0\nArtigos vendidos: java.util.HashSet@0000000002\n\nCusto dos produtos: 0.00\u20AC\nTaxa Vintage: 0.00\u20AC\nPre\u00E7o final: 0.00\u20AC\n");
      Fatura fatura1 = new Fatura(false, 1L, 1L, linkedHashSet0, (-3509.2267253), (-3509.2267253), 98.70325546);
      Fatura fatura2 = new Fatura(fatura1);
      linkedList0.add((Object) fatura2);
      fatura0.setNifComprador((-4430L));
      linkedHashSet0.containsAll(linkedList0);
      linkedHashSet0.stream();
      fatura0.setArtigos(linkedHashSet0);
      fatura0.getPrecoFinal();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setAlteracaoPreco(0.0);
      fatura0.toString();
      fatura0.setArtigos(set0);
      fatura0.setCustoProdutos(0.0);
      fatura0.getId();
      linkedHashSet0.clear();
      Fatura.setCodigo(1L);
      Fatura.setCodigo((-3178L));
      fatura0.getCustoProdutos();
      fatura0.setNifComprador(1L);
      fatura0.toString();
      fatura0.toString();
      Fatura fatura3 = fatura0.clone();
      fatura3.getArtigos();
      fatura2.getId();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getArtigos();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, (-1984L), 222L, set0, 1L, (-3257.0519765), 3112.8637581);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      fatura1.alteracaoPreco = (-43.0);
      Fatura.setCodigo((-1984L));
      fatura1.setAlteracaoPreco((-2291.54));
      fatura1.setId(1618L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setArtigos(set0);
      Fatura.setCodigo(1618L);
      fatura0.atualizaFatura("", (-2291.54), (-2291.54), (-1984L));
      fatura2.setCompra(true);
      fatura1.setId(1618L);
      fatura0.toString();
      fatura2.toString();
      fatura2.setId(9L);
      fatura1.setIdEncomenda(222L);
      fatura2.toString();
      fatura2.getId();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura(fatura2);
      fatura1.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setIdEncomenda((-1L));
      fatura0.getIdEncomenda();
      Fatura.setCodigo(0L);
      fatura0.setNifComprador((-1L));
      fatura0.atualizaFatura("]C", (-1L), (-1L), (-1L));
      fatura0.equals(set0);
      fatura0.setCustoProdutos(0L);
      fatura0.setNifComprador(0L);
      fatura0.setId(3750L);
      fatura0.equals(set0);
      fatura0.setPrecoFinal((-1L));
      fatura0.isCompra();
      fatura0.setPrecoFinal((-1L));
      fatura0.setNifComprador(0L);
      fatura0.toString();
      fatura0.setIdEncomenda(0L);
      Fatura.getCodigo();
      Fatura.setCodigo((-1L));
      fatura0.clone();
      fatura0.getAlteracaoPreco();
      fatura0.setId(0L);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = false;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura();
      fatura2.setIdEncomenda(1621L);
      fatura1.equals(fatura2);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura2.setArtigos(linkedHashSet0);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura0.setId(0L);
      fatura2.isCompra();
      fatura0.setAlteracaoPreco((-1.0));
      fatura0.getPrecoFinal();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura3.setIdEncomenda(1575L);
      fatura1.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = (-517L);
      double double0 = 1925.2679637374054;
      Fatura fatura0 = new Fatura(true, 3521L, (-517L), (Set<String>) null, 3521L, 3521L, 1925.2679637374054);
      // Undeclared exception!
      try { 
        fatura0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long long0 = 0L;
      Set<String> set0 = null;
      double double0 = 1.0;
      Fatura fatura0 = new Fatura(false, 2974L, 0L, (Set<String>) null, 2974L, 0L, 1.0);
      fatura0.compra = false;
      double double1 = 460.585682936;
      // Undeclared exception!
      try { 
        fatura0.atualizaFatura("sxZ.!=O_jn]eS:{_\"+6", 0L, 460.585682936, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Fatura", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, 0L, 0L, set0, 0.0, 1L, 0L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setIdEncomenda((-564L));
      fatura1.setIdEncomenda(0L);
      fatura1.toString();
      fatura0.getId();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.getId();
      fatura1.setAlteracaoPreco(1678.7175974);
      fatura0.alteracaoPreco = 0.0;
      fatura0.toString();
      fatura0.getPrecoFinal();
      fatura0.toString();
      fatura0.clone();
      fatura0.getIdEncomenda();
      fatura1.isCompra();
      Fatura fatura2 = fatura0.clone();
      fatura2.clone();
      fatura0.toString();
      fatura2.setIdEncomenda(0L);
      Set<String> set0 = null;
      // Undeclared exception!
      try { 
        fatura0.setArtigos((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setPrecoFinal(1.0);
      fatura0.id = 234L;
      fatura0.setId(0L);
      fatura0.nifComprador = 0L;
      Fatura.setCodigo(0L);
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      Fatura.getCodigo();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Fatura.setCodigo((-2554L));
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setId(262L);
      fatura1.getArtigos();
      fatura1.id = 0L;
      fatura1.idEncomenda = 0L;
      fatura0.setCustoProdutos(0L);
      fatura0.custoProdutos = 0.0;
      Fatura.criaCodigo();
      fatura1.setIdEncomenda(0L);
      Fatura.getCodigo();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, 634L, 634L, linkedHashSet0, 634L, (-2511.70163309), 634L);
      fatura0.setAlteracaoPreco(313.73);
      fatura0.setNifComprador(634L);
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.equals(fatura0);
      fatura0.setAlteracaoPreco(634L);
      fatura0.getArtigos();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, 0L, 0L, linkedHashSet0, 0L, 0.0, 0L);
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.idEncomenda = 0L;
      fatura1.toString();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("Custo dos produtos: ");
      Fatura fatura0 = new Fatura(false, 0L, 0L, linkedHashSet0, 0.0, 1839.67, 0.0);
      fatura0.setCompra(true);
      Fatura fatura1 = fatura0.clone();
      fatura0.setNifComprador(0L);
      linkedHashSet0.add(":esV|W'7I dwOQ");
      fatura0.setPrecoFinal(0.0);
      fatura0.equals((Object) null);
      fatura0.equals((Object) null);
      fatura0.equals(linkedHashSet0);
      fatura1.setArtigos(linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fatura fatura0 = new Fatura(false, (-2607L), 46L, (Set<String>) null, (-362.75), 46L, (-3320.0));
      fatura0.setNifComprador(539L);
      fatura0.getCustoProdutos();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      long long0 = (-1L);
      Set<String> set0 = null;
      Fatura fatura0 = new Fatura(false, (-1L), (-1L), (Set<String>) null, (-1005.07), (-1L), (-1L));
      Fatura fatura1 = null;
      try {
        fatura1 = new Fatura(fatura0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(false, 0L, 0L, set0, (-2836.037738245735), 0.0, 0.0);
      fatura2.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura0.setArtigos(linkedHashSet0);
      fatura0.setNifComprador(0L);
      fatura0.clone();
      fatura0.compra = false;
      fatura0.setAlteracaoPreco(1.0);
      fatura0.setPrecoFinal(1.0);
      fatura0.getArtigos();
      fatura0.getAlteracaoPreco();
      fatura0.setAlteracaoPreco(1.0);
      fatura0.isCompra();
      fatura0.setCompra(false);
      fatura0.getPrecoFinal();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.nifComprador = (-3128L);
      Fatura fatura1 = new Fatura(false, (-2000L), (-2000L), set0, 0.0, 1L, (-1.0));
      fatura0.toString();
      fatura1.setPrecoFinal(0L);
      fatura1.toString();
      fatura1.setCompra(false);
      Fatura.setCodigo(0L);
      fatura1.getNifComprador();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, 934L, (-1L), linkedHashSet0, 934L, (-1L), (-400.18518359723));
      fatura0.getIdEncomenda();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setCustoProdutos((-1.0));
      fatura0.id = (-780L);
      fatura0.atualizaFatura("", (-1.0), 0.0, 0.0);
      Fatura.setCodigo(0L);
      fatura0.setArtigos(set0);
      fatura0.setAlteracaoPreco(0L);
      fatura0.setArtigos(set0);
      fatura0.setPrecoFinal((-780L));
      fatura0.setPrecoFinal(0.0);
      fatura0.setNifComprador((-780L));
      fatura0.atualizaFatura("", (-780L), (-3935.41838869666), 0.0);
      fatura0.equals("");
      fatura0.setPrecoFinal(0.0);
      fatura0.getArtigos();
      fatura0.setPrecoFinal((-780L));
      fatura0.getId();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.precoFinal = 0.0;
      Fatura.setCodigo(0L);
      fatura0.id = 1462L;
      fatura0.setNifComprador(0L);
      Fatura.criaCodigo();
      fatura0.getCustoProdutos();
      fatura0.getIdEncomenda();
      fatura0.setIdEncomenda(0L);
      fatura0.getCustoProdutos();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.toString();
      fatura0.setPrecoFinal(0.0);
      fatura0.setId((-2318L));
      fatura0.atualizaFatura("Custo do transporte: ", 0.0, 0.0, 0.0);
      fatura0.getArtigos();
      fatura0.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fatura fatura0 = new Fatura(true, 1L, 1L, (Set<String>) null, 1L, 629.381858161, (-2873.0));
      fatura0.compra = true;
      fatura0.alteracaoPreco = (-2873.0);
      fatura0.isCompra();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, (-1L), (-1L), linkedHashSet0, 2753.6300319493, 2753.6300319493, (-1L));
      Fatura.criaCodigo();
      Fatura.setCodigo(2326L);
      Fatura fatura1 = new Fatura(fatura0);
      linkedHashSet0.clear();
      fatura1.getPrecoFinal();
      fatura1.clone();
      Fatura.setCodigo(2326L);
      fatura1.setIdEncomenda((-1L));
      Fatura.getCodigo();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, 3574L, (-1L), linkedHashSet0, 3574L, 0.0, 3574L);
      fatura0.atualizaFatura("0.00", 1016.9916312, 3574L, (-1799.15));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setCompra(true);
      Fatura fatura1 = new Fatura();
      Fatura fatura2 = new Fatura(fatura1);
      fatura0.equals(fatura2);
      Fatura fatura3 = new Fatura(fatura0);
      fatura3.setId(0L);
      fatura0.getArtigos();
      fatura3.setCompra(true);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura0.id = 0L;
      fatura0.setArtigos(linkedHashSet0);
      fatura0.setPrecoFinal((-1.0));
      fatura0.toString();
      fatura0.getId();
      fatura0.getArtigos();
      fatura0.getIdEncomenda();
      fatura0.getNifComprador();
      fatura0.setIdEncomenda(0L);
      fatura0.clone();
      Fatura.setCodigo(0L);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fatura.setCodigo(0L);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(false, 0L, (-1L), linkedHashSet0, (-1720.152483366973), (-713.0442074290627), (-713.0442074290627));
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.clone();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(false, 1353L, 1353L, linkedHashSet0, 1.0, 1353L, 1353L);
      fatura0.toString();
      Fatura fatura1 = fatura0.clone();
      fatura0.setArtigos(linkedHashSet0);
      fatura0.setCompra(false);
      fatura0.getCustoProdutos();
      fatura1.setPrecoFinal(1353L);
      fatura0.atualizaFatura("Fatura 1 - Venda\nNIF do comprador: 1353\nArtigos vendidos: java.util.LinkedHashSet@0000000002\n\nCusto dos produtos: 1.00\u20AC\nTaxa Vintage: 1353.00\u20AC\nPre\u00E7o final: 1353.00\u20AC\n", 0.0, 1353L, 1228.616622669033);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(false, 0L, (-1272L), linkedHashSet0, 0.0, (-1272L), (-1272L));
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.clone();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(false, (-1L), (-1L), set0, 1L, 0L, (-1458.15));
      fatura2.clone();
      fatura1.setArtigos(set0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getCustoProdutos();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getPrecoFinal();
      Integer integer0 = new Integer(0);
      fatura0.equals(integer0);
      fatura0.setId(0L);
      fatura0.getCustoProdutos();
      fatura0.getIdEncomenda();
      fatura0.clone();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Fatura.criaCodigo();
      Fatura fatura0 = new Fatura(true, 1L, 0L, (Set<String>) null, 1051.081777, 0.0, 1L);
      fatura0.setCustoProdutos(1051.081777);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Object object0 = new Object();
      fatura0.equals(object0);
      Object object1 = new Object();
      fatura0.equals(object1);
      fatura0.custoProdutos = 0.0;
      fatura0.setIdEncomenda((-1L));
      fatura0.compra = false;
      fatura0.getIdEncomenda();
      fatura0.setPrecoFinal((-1L));
      fatura0.setAlteracaoPreco((-1376.8));
      fatura0.getNifComprador();
      fatura0.getId();
      fatura0.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getNifComprador();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Fatura fatura0 = new Fatura(false, (-1L), (-1L), (Set<String>) null, 297.31463021, (-1L), (-1L));
      fatura0.getIdEncomenda();
      Fatura.criaCodigo();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.atualizaFatura("6\"S\"v[u", (-4447.0712734), 348.2809, 0.0);
      fatura0.toString();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.nifComprador = 2816L;
      fatura0.toString();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.getNifComprador();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura1.setArtigos(linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Fatura.getCodigo();
      Fatura fatura0 = new Fatura();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura0.setArtigos(linkedHashSet0);
      fatura0.setId(1L);
      Object object0 = new Object();
      fatura0.equals(object0);
      fatura0.clone();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.precoFinal = 627.50093740064;
      fatura0.setCustoProdutos(938.597869574);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.idEncomenda = 0L;
      fatura0.setNifComprador((-2670L));
      fatura0.setAlteracaoPreco(1743.5887);
      fatura0.getPrecoFinal();
      fatura0.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setIdEncomenda(364L);
      fatura0.precoFinal = 1.0;
      fatura0.idEncomenda = 364L;
      fatura0.isCompra();
      fatura0.getPrecoFinal();
      Fatura.criaCodigo();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, (-2401L), (-1101L), linkedHashSet0, (-2401L), (-2401L), (-1101L));
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setNifComprador(0L);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setId(0L);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setCustoProdutos(0.0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura0.setArtigos(linkedHashSet0);
      fatura0.isCompra();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setCompra(true);
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.nifComprador = 2L;
      Fatura.setCodigo(0L);
      fatura1.getNifComprador();
      fatura1.clone();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(false, 468L, 468L, set0, 0L, (-1.0), 1L);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setPrecoFinal((-3898.7));
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura.criaCodigo();
      fatura0.setAlteracaoPreco(0.0);
      fatura0.toString();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setIdEncomenda(0L);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getArtigos();
      fatura0.getId();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura.criaCodigo();
      fatura0.getArtigos();
      fatura0.getArtigos();
      fatura0.getArtigos();
      fatura0.alteracaoPreco = (double) 2L;
      fatura0.setId((-1L));
      fatura0.getArtigos();
      fatura0.getArtigos();
      fatura0.equals((Object) null);
      fatura0.equals(fatura0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = false;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setIdEncomenda(1621L);
      fatura1.equals(fatura2);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura2.setArtigos(linkedHashSet0);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura0.setId(0L);
      fatura2.isCompra();
      fatura0.setAlteracaoPreco((-1.0));
      fatura0.getPrecoFinal();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura3.setIdEncomenda(1575L);
      fatura1.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.setCompra(true);
      fatura0.compra = true;
      fatura1.toString();
      Fatura.setCodigo(2L);
      fatura1.getId();
      Fatura fatura2 = new Fatura();
      fatura1.equals(fatura2);
      Fatura fatura3 = fatura2.clone();
      fatura3.compra = false;
      fatura2.isCompra();
      fatura2.setPrecoFinal(0L);
      fatura2.setPrecoFinal((-1.0));
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      fatura3.setArtigos(linkedHashSet0);
      fatura1.getPrecoFinal();
      fatura2.getCustoProdutos();
      fatura2.compra = false;
      fatura3.setIdEncomenda(1621L);
      fatura2.toString();
      fatura2.clone();
      fatura2.equals(fatura1);
      fatura0.clone();
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, 0L, 0L, linkedHashSet0, 0L, 1030.612491458, 1030.612491458);
      fatura0.clone();
      fatura0.id = 0L;
      linkedHashSet0.parallelStream();
      fatura0.compra = false;
      fatura0.setArtigos(linkedHashSet0);
      fatura0.setIdEncomenda(0L);
      fatura0.setArtigos(linkedHashSet0);
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setId(0L);
      fatura1.setAlteracaoPreco(0.0);
      fatura0.equals(fatura1);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.alteracaoPreco = (-1242.899);
      fatura0.nifComprador = 0L;
      fatura0.setNifComprador(0L);
      fatura0.setAlteracaoPreco((-1242.899));
      fatura0.setPrecoFinal((-1242.899));
      fatura0.setCompra(false);
      Fatura fatura1 = fatura0.clone();
      Fatura fatura2 = fatura1.clone();
      fatura1.id = 1L;
      fatura1.custoProdutos = (-3892.0);
      fatura1.equals(fatura0);
      fatura2.nifComprador = (-1L);
      fatura0.setCustoProdutos(0L);
      fatura0.toString();
      fatura0.getArtigos();
      Fatura fatura3 = new Fatura();
      fatura0.equals("Fatura 1 - Venda\nNIF do comprador: 0\nArtigos vendidos: java.util.HashSet@0000000006\n\nCusto dos produtos: 0.00\u20AC\nTaxa Vintage: -1242.90\u20AC\nPre\u00E7o final: -1242.90\u20AC\n");
      fatura1.setCustoProdutos(1L);
      Fatura fatura4 = new Fatura();
      fatura2.equals(fatura4);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getArtigos();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(fatura0);
      Object object0 = new Object();
      fatura1.custoProdutos = (double) 0L;
      fatura0.equals(object0);
      fatura1.alteracaoPreco = (-43.0);
      fatura1.setId(1L);
      Fatura fatura2 = new Fatura(fatura1);
      Set<String> set1 = fatura1.getArtigos();
      fatura0.setArtigos(set1);
      fatura2.setArtigos(set0);
      Fatura.setCodigo(1L);
      fatura0.atualizaFatura("/", (-43.0), (-43.0), 0L);
      fatura2.setCompra(false);
      fatura0.toString();
      fatura2.toString();
      fatura1.setIdEncomenda(0L);
      fatura2.toString();
      fatura1.getCustoProdutos();
      fatura1.getIdEncomenda();
      fatura2.getAlteracaoPreco();
      fatura1.toString();
      Fatura.getCodigo();
      Fatura fatura3 = new Fatura(true, 0L, (-1984L), set0, (-2291.54), 3112.8637581, 0.0);
      fatura1.equals(fatura3);
      fatura1.equals(fatura0);
      boolean boolean0 = fatura3.equals(set1);
      assertEquals((-43.0), fatura0.alteracaoPreco, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Fatura fatura0 = new Fatura(true, (-675L), (-675L), linkedHashSet0, (-2680.73615), (-675L), 698.3160838642399);
      fatura0.alteracaoPreco = 698.3160838642399;
      Fatura fatura1 = new Fatura(true, 0L, (-675L), linkedHashSet0, 0L, 0L, (-3025.55558));
      fatura0.toString();
      assertEquals(3L, fatura0.getCodigo());
  }
}
