/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 10:44:02 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.HijrahDate;
import java.time.chrono.IsoChronology;
import java.time.format.DateTimeParseException;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Encomenda_ESTest extends Encomenda_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(encomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(1L, encomenda2.getId());
      assertNotNull(encomenda2);
      
      Encomenda encomenda3 = encomenda2.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(1L, encomenda2.getId());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(2, encomenda3.getDiasDevolver());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertEquals(1L, encomenda3.getId());
      assertNotNull(encomenda3);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      Encomenda.setDiasDevolver((-3159));
      Estado estado0 = Estado.Pendente;
      encomenda2.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(1L, encomenda2.getId());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1472), 2);
      assertNotNull(localDate0);
      
      encomenda0.setDataEntrega(localDate0);
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda2.setId((-3159));
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda3.setIdComprador((-3819L));
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals((-3819L), encomenda3.getIdComprador());
      assertEquals(1L, encomenda3.getId());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      boolean boolean0 = encomenda1.equals(encomenda2);
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertFalse(boolean0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      
      Set<String> set0 = encomenda2.removeTudo();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      
      Set<String> set1 = encomenda2.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertTrue(set1.isEmpty());
      assertEquals(0, set1.size());
      assertNotNull(set1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(set1, set0);
      
      System.setCurrentTimeMillis(1L);
      Encomenda encomenda4 = new Encomenda(encomenda0);
      assertEquals(2L, encomenda4.getCodigo());
      assertEquals((-1L), encomenda4.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda4.getDimensao());
      assertEquals((-3159), encomenda4.getDiasDevolver());
      assertEquals(0, encomenda4.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda4.getEstado());
      assertEquals(1L, encomenda4.getId());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertNotNull(encomenda4);
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertTrue(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      
      Estado estado1 = Estado.Finalizada;
      encomenda4.setEstado(estado1);
      assertEquals(2L, encomenda4.getCodigo());
      assertEquals((-1L), encomenda4.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda4.getDimensao());
      assertEquals((-3159), encomenda4.getDiasDevolver());
      assertEquals(0, encomenda4.numeroArtigos());
      assertEquals(1L, encomenda4.getId());
      assertEquals(Estado.Finalizada, encomenda4.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda4));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(estado1.equals((Object)estado0));
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda1);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(estado1, estado0);
      
      boolean boolean1 = encomenda4.equals(encomenda0);
      assertEquals(2L, encomenda4.getCodigo());
      assertEquals((-1L), encomenda4.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda4.getDimensao());
      assertEquals((-3159), encomenda4.getDiasDevolver());
      assertEquals(0, encomenda4.numeroArtigos());
      assertEquals(1L, encomenda4.getId());
      assertEquals(Estado.Finalizada, encomenda4.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertFalse(boolean1);
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda4));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda1);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      
      Set<String> set2 = encomenda2.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertTrue(set2.isEmpty());
      assertEquals(0, set2.size());
      assertNotNull(set2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda4));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda4));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda4));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(set2.equals((Object)set1));
      assertTrue(set2.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda4);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda4);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(set2, set0);
      assertNotSame(set2, set1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Encomenda.setCodigo((-2366L));
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      encomenda0.setData((LocalDate) null);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-2366L), encomenda1.getCodigo());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Expedida;
      Encomenda.setDiasDevolver((-1789569705));
      boolean boolean0 = encomenda0.equals(set0);
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setEstado(estado0);
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-2366L), encomenda1.getCodigo());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals((-1789569705), encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean1 = encomenda1.equals(encomenda0);
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-2366L), encomenda1.getCodigo());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals((-1789569705), encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(boolean1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean2 = encomenda0.equals(encomenda1);
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-2366L), encomenda1.getCodigo());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals((-1789569705), encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(boolean2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda1.toString();
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-2366L), encomenda1.getCodigo());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals((-1789569705), encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      System.setCurrentTimeMillis((-1789569705));
      String string1 = encomenda0.toString();
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      String string2 = encomenda1.adicionaArtigo("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}");
      assertEquals((-1789569705), encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-2366L), encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-2366L), encomenda1.getCodigo());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals((-1789569705), encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(string2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      // Undeclared exception!
      try { 
        encomenda1.podeDevolver((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.temporal.ChronoUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Encomenda.setCodigo((-1824L));
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      Encomenda encomenda0 = new Encomenda(set0, (-1824L), dimensao0, (LocalDate) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(set1, set0);
      
      Encomenda encomenda1 = new Encomenda(set1, 3203L, dimensao0, (LocalDate) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals((-1822L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertEquals((-1822L), encomenda1.getCodigo());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3203L, encomenda1.getIdComprador());
      assertEquals((-1823L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(encomenda1);
      assertTrue(set0.equals((Object)set1));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1822L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda.setCodigo((-1L));
      encomenda1.defineTamanho();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals((-1L), encomenda1.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3203L, encomenda1.getIdComprador());
      assertEquals((-1823L), encomenda1.getId());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set1, set0);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDate localDate0 = encomenda0.getData();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNull(localDate0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      // Undeclared exception!
      try { 
        encomenda1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long long0 = Encomenda.criaCodigo();
      assertEquals(1L, long0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda1);
      
      Dimensao dimensao0 = Dimensao.Grande;
      encomenda1.setDimensao(dimensao0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(boolean0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long1 = encomenda1.getId();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, long1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(long1 == long0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long2 = Encomenda.getCodigo();
      assertEquals(3L, long2);
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      
      String string0 = encomenda1.adicionaArtigo("7:6g}");
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals("7:6g}", string0);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.toString();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setId((-1L));
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setIdComprador((-1L));
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate0 = encomenda1.getDataEntrega();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNull(localDate0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      try { 
        encomenda1.removeArtigo((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo null n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = Encomenda.criaCodigo();
      assertEquals(1L, long0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals(encomenda0);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertTrue(boolean0);
      
      long long1 = encomenda0.getId();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, long1);
      assertFalse(long1 == long0);
      
      long long2 = Encomenda.getCodigo();
      assertEquals(3L, long2);
      assertFalse(long2 == long0);
      assertFalse(long2 == long1);
      
      String string0 = encomenda0.adicionaArtigo("7:6g}");
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals("7:6g}", string0);
      assertNotNull(string0);
      
      String string1 = encomenda0.toString();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      encomenda0.setId((-1L));
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      
      encomenda0.setIdComprador((-1L));
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      
      LocalDate localDate0 = encomenda0.getDataEntrega();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertNull(localDate0);
      
      try { 
        encomenda0.removeArtigo((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo null n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Encomenda.setCodigo((-1824L));
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      Encomenda encomenda0 = new Encomenda(set0, (-1824L), dimensao0, (LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(603, set1.size());
      assertFalse(set1.isEmpty());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(set1, set0);
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      Encomenda.setCodigo((-1L));
      encomenda0.defineTamanho();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      LocalDate localDate0 = encomenda0.getData();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertNull(localDate0);
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      String string0 = encomenda0.adicionaArtigo((String) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertNull(string0);
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      boolean boolean0 = encomenda0.equals((Object) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertFalse(boolean0);
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      encomenda0.setData((LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      LocalDate localDate1 = encomenda0.getDataEntrega();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertNull(localDate1);
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals((-1824L), encomenda1.getId());
      assertEquals((-1L), encomenda1.getCodigo());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1824L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(encomenda1);
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long0 = Encomenda.criaCodigo();
      assertEquals((-1L), long0);
      
      long long1 = Encomenda.getCodigo();
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      Encomenda.setDiasDevolver(2);
      String string1 = encomenda1.removeArtigo((String) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals((-1824L), encomenda1.getId());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1824L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNull(string1);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.defineTamanho();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set2 = encomenda1.getEncomenda();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertTrue(set2.isEmpty());
      assertEquals(0, set2.size());
      assertEquals((-1824L), encomenda1.getId());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1824L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(set2);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(set2.equals((Object)set1));
      assertFalse(set2.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set2, set1);
      assertNotSame(set2, set0);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDate localDate2 = encomenda0.getData();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertNull(localDate2);
      assertFalse(set0.equals((Object)set2));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      
      int int1 = encomenda0.numeroArtigos();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(1, int1);
      assertFalse(set0.equals((Object)set2));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(int1 == int0);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate3 = encomenda0.getData();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertNull(localDate3);
      assertFalse(set0.equals((Object)set2));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setDimensao(dimensao0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertFalse(set0.equals((Object)set2));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      
      long long2 = encomenda0.getIdComprador();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals((-1824L), long2);
      assertFalse(set0.equals((Object)set2));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      
      long long3 = Encomenda.getCodigo();
      assertEquals(0L, long3);
      assertFalse(long3 == long0);
      assertTrue(long3 == long1);
      assertFalse(long3 == long2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.adicionaArtigo("1|!G!H&");
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals("1|!G!H&", string0);
      assertNotNull(string0);
      
      encomenda0.setIdComprador(0L);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      
      Estado estado0 = encomenda0.getEstado();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, estado0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      assertFalse(linkedHashSet0.contains(string0));
      
      encomenda0.defineTamanho();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      
      boolean boolean0 = linkedHashSet0.add("1|!G!H&");
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.isEmpty());
      assertTrue(boolean0);
      assertTrue(linkedHashSet0.contains("1|!G!H&"));
      
      boolean boolean1 = linkedHashSet0.add("1|!G!H&");
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.isEmpty());
      assertFalse(boolean1);
      assertTrue(linkedHashSet0.contains("1|!G!H&"));
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = linkedHashSet0.add("1|!G!H&");
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.isEmpty());
      assertFalse(boolean2);
      assertTrue(linkedHashSet0.contains("1|!G!H&"));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      encomenda0.setEncomenda(linkedHashSet0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.isEmpty());
      assertTrue(linkedHashSet0.contains("1|!G!H&"));
      
      String string1 = encomenda0.removeArtigo("1|!G!H&");
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals("1|!G!H&", string1);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(2L, long0);
      
      LocalDate localDate0 = encomenda0.getData();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getIdComprador());
      assertNotNull(localDate0);
      
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      encomenda0.setDataEntrega(localDate0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getIdComprador());
      
      Encomenda.setCodigo(3715L);
      boolean boolean3 = linkedHashSet0.add("1|!G!H&");
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.isEmpty());
      assertFalse(boolean3);
      assertTrue(linkedHashSet0.contains("1|!G!H&"));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      
      boolean boolean4 = encomenda0.podeDevolver(localDate0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      
      String string2 = encomenda0.toString();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      Dimensao dimensao0 = encomenda0.getDimensao();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, dimensao0);
      
      encomenda0.setEstado(estado0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      
      encomenda0.setEncomenda(linkedHashSet0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(1, linkedHashSet0.size());
      assertFalse(linkedHashSet0.isEmpty());
      assertFalse(linkedHashSet0.contains(string2));
      assertTrue(linkedHashSet0.contains("1|!G!H&"));
      
      encomenda0.setData(localDate0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      
      String string3 = encomenda0.adicionaArtigo("Encomenda:: { Artigos: java.util.HashSet@0000000002 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: 2014-02-14}");
      assertEquals(2, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3715L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getIdComprador());
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string2));
      
      Encomenda.setCodigo(2L);
      encomenda0.defineTamanho();
      assertEquals(2, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      
      String string4 = encomenda0.adicionaArtigo("u&");
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals("u&", string4);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      
      encomenda0.defineTamanho();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals("");
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertFalse(boolean0);
      
      Encomenda.setCodigo((-3368L));
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3368L), encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertFalse(set0.contains(""));
      
      Encomenda.setDiasDevolver(3);
      Encomenda.setCodigo(0L);
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = encomenda0.equals(object0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda0.adicionaArtigo("");
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      encomenda1.setData(localDate0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setId(198L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(198L, encomenda1.getId());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setId(0L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Finalizada;
      encomenda0.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      long long0 = encomenda1.getId();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, long0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean2 = encomenda1.equals((Object) null);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(boolean2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(0L, encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals(0L, encomenda2.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean3 = encomenda2.equals("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: 2014-02-14 Data de entrega: N/A}");
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(0L, encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals(0L, encomenda2.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(boolean3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setIdComprador((-174L));
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-174L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      Dimensao dimensao0 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao0);
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      long long1 = Encomenda.criaCodigo();
      assertEquals(0L, long1);
      assertTrue(long1 == long0);
      
      String string2 = encomenda0.removeArtigo("");
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals("", string2);
      assertNotNull(string2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      Estado estado1 = encomenda1.getEstado();
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(0L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-174L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, estado1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(estado1.equals((Object)estado0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(estado1, estado0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals("");
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertFalse(boolean0);
      
      Encomenda.setCodigo((-3368L));
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3368L), encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertFalse(set0.contains(""));
      
      Encomenda.setDiasDevolver(3);
      Encomenda.setCodigo(0L);
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = encomenda0.equals(object0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda0.adicionaArtigo("");
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      encomenda1.setData(localDate0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setId((-3368L));
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Finalizada;
      encomenda0.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      long long0 = encomenda1.getId();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals((-3368L), long0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean2 = encomenda1.equals((Object) null);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertFalse(boolean2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals(0L, encomenda2.getCodigo());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals((-3368L), encomenda2.getId());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean3 = encomenda2.equals("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: 2014-02-14 Data de entrega: N/A}");
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals(0L, encomenda2.getCodigo());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals((-3368L), encomenda2.getId());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertFalse(boolean3);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setIdComprador((-174L));
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-174L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      long long1 = Encomenda.criaCodigo();
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      Dimensao dimensao0 = encomenda2.getDimensao();
      assertEquals(1L, encomenda0.getId());
      assertEquals(1L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals((-3368L), encomenda2.getId());
      assertEquals(1L, encomenda2.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(1L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-174L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, dimensao0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals("");
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertFalse(boolean0);
      
      Encomenda.setCodigo((-3368L));
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3368L), encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      assertFalse(set0.contains(""));
      
      Encomenda.setDiasDevolver(3);
      Encomenda.setCodigo(0L);
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setId((-3368L));
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = encomenda0.equals(object0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(boolean1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda0.adicionaArtigo("");
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      encomenda1.setData(localDate0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-3368L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setId(198L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(198L, encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setId(0L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Finalizada;
      encomenda0.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      long long0 = encomenda1.getId();
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0L, long0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean2 = encomenda1.equals((Object) null);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(boolean2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(0L, encomenda2.getId());
      assertEquals(0L, encomenda2.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean3 = encomenda2.equals("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: 2014-02-14 Data de entrega: N/A}");
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(0L, encomenda2.getId());
      assertEquals(0L, encomenda2.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(3, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(boolean3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setIdComprador((-174L));
      assertEquals(1L, encomenda0.getId());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-174L), encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      Dimensao dimensao0 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      long long1 = Encomenda.criaCodigo();
      assertEquals(0L, long1);
      assertTrue(long1 == long0);
      
      boolean boolean4 = encomenda0.equals(encomenda1);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(3, encomenda0.getDiasDevolver());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(3, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-174L), encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertFalse(boolean4);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long long0 = Encomenda.criaCodigo();
      assertEquals(1L, long0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda();
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(4L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(4L, encomenda0.getCodigo());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(4L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertFalse(boolean0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long1 = encomenda1.getId();
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(4L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(3L, long1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(long1 == long0);
      assertNotSame(encomenda1, encomenda0);
      
      long long2 = Encomenda.getCodigo();
      assertEquals(4L, long2);
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      
      String string0 = encomenda1.adicionaArtigo("7:6g}");
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(4L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals("7:6g}", string0);
      assertNotNull(string0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.toString();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(4L, encomenda0.getCodigo());
      assertEquals(2L, encomenda0.getId());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setId((-1L));
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(4L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getId());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setIdComprador((-1L));
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(4L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(4L, encomenda0.getCodigo());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getId());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate0 = encomenda1.getDataEntrega();
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(4L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertNull(localDate0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda1, encomenda0);
      
      try { 
        encomenda1.removeArtigo((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo null n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      encomenda0.defineTamanho();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      
      String string0 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(string0);
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertFalse(set0.contains(string0));
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(2L, long0);
      
      Dimensao dimensao0 = encomenda0.getDimensao();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, dimensao0);
      
      Dimensao dimensao1 = Dimensao.Grande;
      encomenda0.setDimensao(dimensao1);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertFalse(dimensao1.equals((Object)dimensao0));
      assertNotSame(dimensao1, dimensao0);
      
      Encomenda.setDiasDevolver((-1308));
      String string1 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      String string2 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      
      int int0 = Encomenda.getDiasDevolver();
      assertEquals((-1308), int0);
      
      LocalDate localDate0 = encomenda0.getData();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(localDate0);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Set<String> set1 = encomenda1.removeTudo();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, set1.size());
      assertTrue(set1.isEmpty());
      assertNotNull(set1);
      assertFalse(set1.contains(string1));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set1, set0);
      
      boolean boolean0 = encomenda0.equals("Encomenda:: { Artigos: java.util.HashSet@0000000002 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}");
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals((-1308), encomenda2.getDiasDevolver());
      assertEquals(1L, encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(3L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      LocalDate localDate1 = encomenda0.getData();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(localDate1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDate1, localDate0);
      
      int int1 = Encomenda.getDiasDevolver();
      assertEquals((-1308), int1);
      assertTrue(int1 == int0);
      
      encomenda2.defineTamanho();
      assertEquals((-1308), encomenda2.getDiasDevolver());
      assertEquals(1L, encomenda2.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(3L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda1.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      int int2 = Encomenda.getDiasDevolver();
      assertEquals((-1308), int2);
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      encomenda1.setIdComprador(0L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      encomenda1.setDataEntrega(localDate1);
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1308), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals((-1308), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDate1, localDate0);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Encomenda.setCodigo((-1824L));
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertNotNull(set0);
      
      Estado estado0 = Estado.Expedida;
      Encomenda.setCodigo((-1L));
      long long0 = Encomenda.getCodigo();
      assertEquals((-1L), long0);
      
      Encomenda.setDiasDevolver(242);
      long long1 = Encomenda.getCodigo();
      assertEquals((-1L), long1);
      assertTrue(long1 == long0);
      
      Dimensao dimensao0 = Dimensao.Medio;
      Encomenda encomenda0 = new Encomenda(set0, 3203L, dimensao0, (LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(242, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(3203L, encomenda0.getIdComprador());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals(estado0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(242, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(3203L, encomenda0.getIdComprador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Encomenda.setCodigo((-1824L));
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      Encomenda encomenda0 = new Encomenda(set0, (-1824L), dimensao0, (LocalDate) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals((-1823L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(set1, set0);
      
      Encomenda encomenda1 = new Encomenda(set1, 3203L, dimensao0, (LocalDate) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals((-1822L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertEquals((-1822L), encomenda1.getCodigo());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(3203L, encomenda1.getIdComprador());
      assertEquals((-1823L), encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda1);
      assertTrue(set0.equals((Object)set1));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1822L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda.setCodigo((-1L));
      encomenda1.defineTamanho();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(3203L, encomenda1.getIdComprador());
      assertEquals((-1823L), encomenda1.getId());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getCodigo());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set1, set0);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDate localDate0 = encomenda0.getData();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNull(localDate0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda1.adicionaArtigo((String) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(3203L, encomenda1.getIdComprador());
      assertEquals((-1823L), encomenda1.getId());
      assertEquals(604, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getCodigo());
      assertNull(string0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set1, set0);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda0.equals((Object) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertFalse(boolean0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setData((LocalDate) null);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate1 = encomenda0.getDataEntrega();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNull(localDate1);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda encomenda2 = encomenda0.clone();
      assertEquals((-1L), encomenda2.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Estado.Expedida, encomenda2.getEstado());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals((-1824L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-1824L), encomenda2.getId());
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1824L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getCodigo());
      assertEquals((-1824L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNotNull(encomenda2);
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      long long0 = Encomenda.criaCodigo();
      assertEquals((-1L), long0);
      
      long long1 = Encomenda.getCodigo();
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      Encomenda.setDiasDevolver(242);
      try { 
        encomenda2.removeArtigo((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo null n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      encomenda0.setId(0L);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(encomenda1);
      
      Set<String> set0 = encomenda1.removeTudo();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertTrue(set1.isEmpty());
      assertEquals(0, set1.size());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set1, set0);
      
      String string0 = encomenda1.toString();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setIdComprador(0L);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set2 = encomenda1.getEncomenda();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set2.isEmpty());
      assertEquals(0, set2.size());
      assertNotNull(set2);
      assertFalse(set2.contains(string0));
      assertTrue(set2.equals((Object)set1));
      assertTrue(set2.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set2, set0);
      assertNotSame(set2, set1);
      
      String string1 = encomenda0.adicionaArtigo("c`H@C9UeL");
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals("c`H@C9UeL", string1);
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setIdComprador(0L);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long0 = encomenda0.getId();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0L, long0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set3 = encomenda0.removeTudo();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0L, encomenda0.getId());
      assertEquals(1, set3.size());
      assertFalse(set3.isEmpty());
      assertNotNull(set3);
      assertFalse(set3.contains(string0));
      assertTrue(set3.contains(string1));
      assertFalse(set3.equals((Object)set0));
      assertFalse(set3.equals((Object)set2));
      assertFalse(set3.equals((Object)set1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set3, set0);
      assertNotSame(set3, set2);
      assertNotSame(set3, set1);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(2007);
      assertNotNull(zoneOffset0);
      
      // Undeclared exception!
      try { 
        MockLocalDate.from(zoneOffset0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Unable to obtain LocalDate from TemporalAccessor: +00:33:27 of type java.time.ZoneOffset
         //
         verifyException("java.time.LocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long long0 = Encomenda.criaCodigo();
      assertEquals(1L, long0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNotNull(encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Estado estado0 = Estado.Pendente;
      encomenda0.setEstado(estado0);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      boolean boolean0 = encomenda0.equals(object0);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertFalse(boolean0);
      
      Set<String> set0 = encomenda0.removeTudo();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      String string0 = encomenda0.adicionaArtigo((String) null);
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNull(string0);
      
      Estado estado1 = encomenda0.getEstado();
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, estado1);
      assertSame(estado1, estado0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      assertNotNull(localDate0);
      
      Dimensao dimensao0 = Dimensao.Grande;
      encomenda0.setDimensao(dimensao0);
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      
      // Undeclared exception!
      try { 
        encomenda0.podeDevolver(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.temporal.ChronoUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = encomenda0.equals(object0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertFalse(boolean0);
      
      Encomenda encomenda1 = new Encomenda();
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getId());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      boolean boolean1 = encomenda0.equals(encomenda1);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getId());
      assertFalse(boolean1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Month month0 = Month.DECEMBER;
      int int0 = 407;
      // Undeclared exception!
      try { 
        MockLocalDate.of(0, month0, 407);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for DayOfMonth (valid values 1 - 28/31): 407
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 2);
      assertNotNull(localDate0);
      
      Encomenda encomenda0 = new Encomenda(set0, 2, dimensao0, localDate0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getIdComprador());
      assertNotNull(encomenda1);
      
      encomenda0.setId(2);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      long long0 = encomenda0.getIdComprador();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2L, long0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set1 = encomenda1.removeTudo();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getIdComprador());
      assertEquals(603, set1.size());
      assertFalse(set1.isEmpty());
      assertNotNull(set1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set1, set0);
      
      Set<String> set2 = encomenda0.removeTudo();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(603, set2.size());
      assertFalse(set2.isEmpty());
      assertNotNull(set2);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set2.equals((Object)set0));
      assertTrue(set2.equals((Object)set1));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set2, set1);
      assertNotSame(set2, set0);
      
      int int1 = Encomenda.getDiasDevolver();
      assertEquals(2, int1);
      assertTrue(int1 == int0);
      
      LocalDate localDate1 = encomenda0.getData();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(localDate1);
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertSame(localDate0, localDate1);
      assertNotSame(encomenda0, encomenda1);
      assertSame(localDate1, localDate0);
      
      Dimensao dimensao1 = Dimensao.Grande;
      encomenda0.setDimensao(dimensao1);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(dimensao1.equals((Object)dimensao0));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertSame(localDate0, localDate1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(dimensao1, dimensao0);
      
      int int2 = Encomenda.getDiasDevolver();
      assertEquals(2, int2);
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      LocalDate localDate2 = encomenda0.getData();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(localDate2);
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertSame(localDate2, localDate1);
      assertSame(localDate2, localDate0);
      
      encomenda0.setIdComprador(2);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setIdComprador(571L);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(571L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda0.toString();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(string0);
      assertFalse(set0.contains(string0));
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate3 = encomenda1.getDataEntrega();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(571L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertNull(localDate3);
      assertFalse(set0.contains(string0));
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long1 = Encomenda.criaCodigo();
      assertEquals(2L, long1);
      assertTrue(long1 == long0);
      
      Dimensao dimensao2 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao2);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertFalse(set0.contains(string0));
      assertTrue(set0.equals((Object)set1));
      assertTrue(set0.equals((Object)set2));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(dimensao0.equals((Object)dimensao2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(dimensao2.equals((Object)dimensao0));
      assertFalse(dimensao2.equals((Object)dimensao1));
      assertNotSame(set0, set2);
      assertNotSame(set0, set1);
      assertNotSame(dimensao0, dimensao1);
      assertNotSame(dimensao0, dimensao2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(dimensao2, dimensao0);
      assertNotSame(dimensao2, dimensao1);
      
      try { 
        encomenda0.removeArtigo("Encomenda:: { Artigos: java.util.HashSet@0000000003 C\u00F3digo: 2 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Encomenda:: { Artigos: java.util.HashSet@0000000003 C\u00F3digo: 2 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A} n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      encomenda0.setIdComprador(1L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      
      String string0 = " Artigos: ";
      String string1 = encomenda0.adicionaArtigo(" Artigos: ");
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(" Artigos: ", string1);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      encomenda0.setId((-2247L));
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-2247L), encomenda0.getId());
      
      String string2 = encomenda0.adicionaArtigo("hMHQkEpFLvN*>qd@=M");
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-2247L), encomenda0.getId());
      assertEquals("hMHQkEpFLvN*>qd@=M", string2);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      Dimensao dimensao0 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao0);
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-2247L), encomenda0.getId());
      
      String string3 = encomenda0.toString();
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-2247L), encomenda0.getId());
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      try { 
        encomenda0.removeArtigo("Z");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Z n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Grande;
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Encomenda encomenda0 = new Encomenda(set0, 1333L, dimensao0, localDate0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(2L, long0);
      
      encomenda0.setEncomenda(set0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      
      encomenda0.defineTamanho();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      
      boolean boolean0 = encomenda0.equals(set0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertFalse(boolean0);
      
      int int0 = encomenda0.numeroArtigos();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(603, int0);
      
      Estado estado0 = Estado.Pendente;
      encomenda0.setEstado(estado0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      
      Period period0 = Period.ZERO;
      assertNotNull(period0);
      
      Period period1 = Period.between(localDate0, localDate0);
      assertNotNull(period1);
      assertSame(period1, period0);
      
      int int1 = period0.getDays();
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertSame(period0, period1);
      
      long long1 = encomenda0.getId();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(1L, long1);
      assertFalse(long1 == long0);
      
      encomenda0.setEncomenda(set0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals(1L, encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      
      encomenda0.setId((-545L));
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals((-545L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      
      int int2 = encomenda0.numeroArtigos();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals((-545L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(603, int2);
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      
      LocalDate localDate1 = encomenda0.getDataEntrega();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals((-545L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertNull(localDate1);
      
      boolean boolean1 = encomenda0.equals(set0);
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals((-545L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Set<String> set1 = encomenda0.getEncomenda();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals((-545L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertFalse(set1.isEmpty());
      assertEquals(603, set1.size());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(set1, set0);
      
      Dimensao dimensao1 = encomenda0.getDimensao();
      assertFalse(set0.isEmpty());
      assertEquals(603, set0.size());
      assertEquals((-545L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1333L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, dimensao1);
      assertTrue(set0.equals((Object)set1));
      assertNotSame(set0, set1);
      assertSame(dimensao0, dimensao1);
      assertSame(dimensao1, dimensao0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Dimensao dimensao0 = Dimensao.Medio;
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Encomenda encomenda0 = null;
      try {
        encomenda0 = new Encomenda((Set<String>) null, 1743L, dimensao0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      Encomenda encomenda0 = new Encomenda(set0, 0L, dimensao0, (LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNotNull(encomenda0);
      
      encomenda0.setDataEntrega((LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      boolean boolean0 = encomenda0.equals(dimensao0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertFalse(boolean0);
      
      int int0 = encomenda0.numeroArtigos();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(603, int0);
      
      long long0 = encomenda0.getIdComprador();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, long0);
      
      encomenda0.setData((LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      encomenda0.setData((LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      LocalDate localDate0 = encomenda0.getDataEntrega();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNull(localDate0);
      
      encomenda0.defineTamanho();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(603, encomenda2.numeroArtigos());
      assertEquals(1L, encomenda2.getId());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Dimensao.Grande, encomenda2.getDimensao());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0L, encomenda2.getIdComprador());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertNotNull(encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      Set<String> set1 = encomenda1.removeTudo();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(1L, encomenda1.getId());
      assertEquals(603, set1.size());
      assertFalse(set1.isEmpty());
      assertNotNull(set1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set1, set0);
      
      encomenda1.setData((LocalDate) null);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda1.getDimensao());
      assertEquals(1L, encomenda1.getId());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      try { 
        encomenda0.removeArtigo("d{yY>KX!u.nuX1HU!~X");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo d{yY>KX!u.nuX1HU!~X n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNotNull(encomenda0);
      
      int int0 = 0;
      // Undeclared exception!
      try { 
        encomenda0.setEncomenda((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Encomenda encomenda0 = null;
      try {
        encomenda0 = new Encomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Encomenda.setCodigo((-1L));
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      encomenda0.setIdComprador((-1024L));
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals((-1024L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals((-1024L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      long long0 = Encomenda.getCodigo();
      assertEquals(0L, long0);
      
      IsoChronology isoChronology0 = null;
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      assertNotNull(zoneOffset0);
      
      // Undeclared exception!
      try { 
        ZoneOffset.ofHoursMinutesSeconds((-1582), 0, 1477);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset hours not in valid range: value -1582 is not in the range -18 to 18
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(encomenda0);
      
      encomenda0.setId(190L);
      assertEquals(190L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      
      encomenda0.defineTamanho();
      assertEquals(190L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(190L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(190L, encomenda1.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setId(0L);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Estado estado0 = encomenda0.getEstado();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, estado0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setIdComprador(1L);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate0 = encomenda0.getDataEntrega();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertNull(localDate0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Estado estado1 = encomenda0.getEstado();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, estado1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertSame(estado1, estado0);
      
      Encomenda encomenda2 = encomenda0.clone();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals(1L, encomenda2.getIdComprador());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0L, encomenda2.getId());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertNotNull(set0);
      
      encomenda2.setEncomenda(set0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals(1L, encomenda2.getIdComprador());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(603, encomenda2.numeroArtigos());
      assertEquals(0L, encomenda2.getId());
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      // Undeclared exception!
      try { 
        encomenda0.podeDevolver((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.temporal.ChronoUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Encomenda.setDiasDevolver((-3819));
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Dimensao dimensao0 = Dimensao.Grande;
      Period period0 = Period.ZERO;
      assertNotNull(period0);
      
      int int0 = period0.getDays();
      assertEquals(0, int0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      encomenda0.setDataEntrega(localDate0);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      
      encomenda0.setDimensao(dimensao0);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      
      encomenda0.setId((-3819));
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(2L, long0);
      
      encomenda0.defineTamanho();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      
      Encomenda.setCodigo(2270L);
      LocalDate localDate1 = encomenda0.getData();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(localDate1);
      assertTrue(localDate1.equals((Object)localDate0));
      assertNotSame(localDate1, localDate0);
      
      String string0 = encomenda0.adicionaArtigo("n]3I");
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals("n]3I", string0);
      assertNotNull(string0);
      
      int int1 = Encomenda.getDiasDevolver();
      assertEquals((-3819), int1);
      assertFalse(int1 == int0);
      
      Estado estado1 = encomenda0.getEstado();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Expedida, estado1);
      assertSame(estado1, estado0);
      
      String string1 = encomenda0.toString();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = encomenda0.podeDevolver(localDate0);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertFalse(boolean0);
      assertTrue(localDate0.equals((Object)localDate1));
      assertNotSame(localDate0, localDate1);
      
      encomenda0.setDataEntrega(localDate0);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertTrue(localDate0.equals((Object)localDate1));
      assertNotSame(localDate0, localDate1);
      
      Dimensao dimensao1 = Dimensao.Pequeno;
      encomenda0.setDimensao(dimensao1);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertFalse(dimensao1.equals((Object)dimensao0));
      assertNotSame(dimensao1, dimensao0);
      
      Estado estado2 = Estado.Pendente;
      encomenda0.setEstado(estado2);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-3819), encomenda0.getDiasDevolver());
      assertEquals((-3819L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2270L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertFalse(estado2.equals((Object)estado0));
      assertFalse(estado2.equals((Object)estado1));
      assertNotSame(estado2, estado0);
      assertNotSame(estado2, estado1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      Clock clock0 = MockClock.systemUTC();
      assertNotNull(clock0);
      
      LocalDate localDate0 = MockLocalDate.now(clock0);
      assertNotNull(localDate0);
      
      Encomenda encomenda0 = new Encomenda(set0, 1L, dimensao0, localDate0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.toString();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(string0);
      assertFalse(set0.contains(string0));
      
      encomenda0.defineTamanho();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertFalse(set0.contains(string0));
      
      Estado estado0 = encomenda0.getEstado();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, estado0);
      assertFalse(set0.contains(string0));
      
      Dimensao dimensao1 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao1);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(603, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertFalse(set0.contains(string0));
      assertFalse(dimensao0.equals((Object)dimensao1));
      assertFalse(dimensao1.equals((Object)dimensao0));
      assertNotSame(dimensao0, dimensao1);
      assertNotSame(dimensao1, dimensao0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      long long0 = Encomenda.criaCodigo();
      assertEquals(1L, long0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertNotNull(encomenda1);
      
      encomenda1.defineTamanho();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.defineTamanho();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getId());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setId(1L);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getId());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda0.adicionaArtigo("");
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getId());
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(2L, long0);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda.setDiasDevolver(0);
      boolean boolean0 = encomenda1.equals(set0);
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertEquals(0, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda1.toString();
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertNotNull(string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda0.clone();
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(3L, encomenda2.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(1L, encomenda2.getId());
      assertNotNull(encomenda2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      try { 
        encomenda2.removeArtigo("Encomenda:: { Artigos: java.util.HashSet@0000000003 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Encomenda:: { Artigos: java.util.HashSet@0000000003 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A} n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNotNull(encomenda0);
      
      Encomenda.setCodigo(2285L);
      encomenda0.setIdComprador(2285L);
      assertEquals(2285L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2285L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      encomenda0.setIdComprador(1413L);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2285L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1413L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      Encomenda.setCodigo(0L);
      encomenda0.setIdComprador((-1425L));
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1425L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      Encomenda.setDiasDevolver(0);
      LocalDate localDate0 = encomenda0.getData();
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1425L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertNotNull(localDate0);
      
      encomenda0.setDataEntrega(localDate0);
      assertEquals(0L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1425L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      Encomenda.setCodigo(0L);
      LocalDate localDate0 = null;
      encomenda0.setData((LocalDate) null);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0L, encomenda0.getCodigo());
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(0L, long0);
      
      encomenda0.setId(0L);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0L, encomenda0.getId());
      assertEquals(1L, encomenda0.getCodigo());
      
      String string0 = "?]SleY~WkGbi7R>F";
      try { 
        encomenda0.removeArtigo("?]SleY~WkGbi7R>F");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo ?]SleY~WkGbi7R>F n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      Dimensao dimensao0 = Dimensao.Grande;
      encomenda0.setDimensao(dimensao0);
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      
      Dimensao dimensao1 = Dimensao.Grande;
      boolean boolean0 = encomenda0.equals(dimensao1);
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertFalse(boolean0);
      assertSame(dimensao1, dimensao0);
      
      encomenda0.setDimensao(dimensao1);
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertSame(dimensao1, dimensao0);
      
      Encomenda.setCodigo((-256L));
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-256L), encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDate localDate0 = encomenda0.getDataEntrega();
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNull(localDate0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda.setCodigo((-256L));
      String string0 = encomenda0.toString();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(string0);
      assertNotSame(encomenda0, encomenda1);
      
      Estado estado0 = encomenda0.getEstado();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, estado0);
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set0 = encomenda0.removeTudo();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertFalse(set0.contains(string0));
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda.setDiasDevolver(1);
      encomenda0.setIdComprador(1);
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setData((LocalDate) null);
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals((-256L), encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda.setCodigo(456L);
      LocalDate localDate1 = encomenda0.getData();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertNull(localDate1);
      assertNotSame(encomenda0, encomenda1);
      
      int int0 = encomenda0.numeroArtigos();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, int0);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setEncomenda(set0);
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertFalse(set0.contains(string0));
      assertNotSame(encomenda0, encomenda1);
      
      int int1 = Encomenda.getDiasDevolver();
      assertEquals(1, int1);
      assertFalse(int1 == int0);
      
      encomenda0.setData((LocalDate) null);
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean1 = encomenda0.equals((Object) null);
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      Estado estado1 = encomenda1.getEstado();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(456L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, estado1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertSame(estado1, estado0);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.defineTamanho();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set1 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set1.size());
      assertTrue(set1.isEmpty());
      assertNotNull(set1);
      assertFalse(set1.contains(string0));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set1, set0);
      
      int int2 = Encomenda.getDiasDevolver();
      assertEquals(1, int2);
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      
      long long0 = encomenda0.getId();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1L, long0);
      assertNotSame(encomenda0, encomenda1);
      
      String string1 = encomenda1.toString();
      assertEquals(1L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(456L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(456L, encomenda1.getCodigo());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(string1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(4223L);
      assertNotNull(localDate0);
      
      Encomenda encomenda1 = new Encomenda(set0, (-988L), dimensao0, localDate0);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-988L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-988L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, encomenda2.getId());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(3L, encomenda2.getCodigo());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-988L), encomenda2.getIdComprador());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      
      LocalDate localDate1 = encomenda2.getDataEntrega();
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-988L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getId());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, encomenda2.getId());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(3L, encomenda2.getCodigo());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-988L), encomenda2.getIdComprador());
      assertNull(localDate1);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      Dimensao dimensao0 = Dimensao.Medio;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1225L);
      assertNotNull(localDate0);
      
      Encomenda encomenda0 = new Encomenda(linkedHashSet0, 1225L, dimensao0, localDate0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1225L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertNotNull(encomenda0);
      
      Estado estado0 = encomenda0.getEstado();
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1225L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, estado0);
      
      boolean boolean0 = encomenda0.equals(localDate0);
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1225L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertFalse(boolean0);
      
      Set<String> set0 = encomenda0.removeTudo();
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1225L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      Set<String> set1 = encomenda0.getEncomenda();
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1225L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(0, set1.size());
      assertTrue(set1.isEmpty());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set1, set0);
      
      int int0 = encomenda0.numeroArtigos();
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(1225L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(0, int0);
      
      Encomenda.setCodigo((-801L));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      String string0 = encomenda0.adicionaArtigo("KK!WwfeqzJ`E13PTW");
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals("KK!WwfeqzJ`E13PTW", string0);
      assertNotNull(string0);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      try { 
        encomenda1.adicionaArtigo("KK!WwfeqzJ`E13PTW");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo KK!WwfeqzJ`E13PTW j\u00E1 existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Finalizada;
      encomenda0.setEstado(estado0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda0.toString();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setData((LocalDate) null);
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertFalse(set0.contains(string0));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setId((-1817L));
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Dimensao dimensao0 = Dimensao.Pequeno;
      encomenda1.setDimensao(dimensao0);
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda.setDiasDevolver(735);
      Estado estado1 = Estado.Pendente;
      encomenda1.setEstado(estado1);
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(735, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(estado1.equals((Object)estado0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(estado1, estado0);
      
      encomenda0.setEstado(estado0);
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(estado0.equals((Object)estado1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(estado0, estado1);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(735, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(1L, encomenda2.getId());
      assertEquals(735, encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      boolean boolean0 = encomenda1.equals("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Finalizada Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}");
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(735, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(boolean0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Dimensao dimensao1 = encomenda0.getDimensao();
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, dimensao1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertSame(dimensao1, dimensao0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertTrue(set1.isEmpty());
      assertEquals(0, set1.size());
      assertNotNull(set1);
      assertFalse(set1.contains("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Finalizada Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}"));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(set1, set0);
      
      Encomenda encomenda3 = encomenda0.clone();
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(735, encomenda3.getDiasDevolver());
      assertEquals((-1817L), encomenda3.getId());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(Estado.Finalizada, encomenda3.getEstado());
      assertEquals(2L, encomenda3.getCodigo());
      assertNotNull(encomenda3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda1);
      
      encomenda3.setEncomenda(set1);
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertTrue(set1.isEmpty());
      assertEquals(0, set1.size());
      assertEquals(735, encomenda3.getDiasDevolver());
      assertEquals((-1817L), encomenda3.getId());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(Estado.Finalizada, encomenda3.getEstado());
      assertEquals(2L, encomenda3.getCodigo());
      assertFalse(set1.contains("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Finalizada Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}"));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(set1, set0);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda1);
      
      encomenda1.setDataEntrega((LocalDate) null);
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(735, encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      LocalDate localDate0 = encomenda0.getData();
      assertEquals(735, encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1817L), encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Estado.Finalizada, encomenda0.getEstado());
      assertNotNull(localDate0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      
      long long0 = Encomenda.getCodigo();
      assertEquals(2L, long0);
      
      // Undeclared exception!
      try { 
        encomenda0.podeDevolver((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.temporal.ChronoUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      LocalDate localDate0 = encomenda0.getData();
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertNotNull(encomenda0);
      
      Dimensao dimensao0 = encomenda0.getDimensao();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, dimensao0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(encomenda0);
      
      encomenda0.defineTamanho();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      
      encomenda0.setIdComprador(1435L);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1435L, encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      
      encomenda0.setId(0L);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1435L, encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      
      Set<String> set0 = encomenda0.getEncomenda();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1435L, encomenda0.getIdComprador());
      assertEquals(0L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      
      Encomenda.setDiasDevolver(2542);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(encomenda1);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      encomenda1.setData(localDate0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Set<String> set0 = encomenda1.removeTudo();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(1L, encomenda0.getId());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(1L, encomenda2.getId());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertNotNull(encomenda2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertNotNull(encomenda1);
      
      long long0 = encomenda1.getIdComprador();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), long0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setId(0L);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getId());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertNotNull(locale0);
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Medio;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      boolean boolean0 = linkedList0.retainAll(set0);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertFalse(boolean0);
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      
      Encomenda encomenda0 = new Encomenda(set0, 0L, dimensao0, (LocalDate) null);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertNotNull(encomenda0);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertTrue(set1.isEmpty());
      assertEquals(0, set1.size());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Medio, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(encomenda1);
      assertTrue(set0.equals((Object)set1));
      
      Encomenda encomenda2 = encomenda0.clone();
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals(0L, encomenda2.getIdComprador());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(1L, encomenda2.getId());
      assertNotNull(encomenda2);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      String string0 = encomenda1.toString();
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(string0);
      assertFalse(set0.contains(string0));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda1.adicionaArtigo("Estado");
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals("Estado", string1);
      assertNotNull(string1);
      assertFalse(set0.contains(string1));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda3 = encomenda1.clone();
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2, encomenda3.getDiasDevolver());
      assertEquals(0L, encomenda3.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(1, encomenda3.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(1L, encomenda3.getId());
      assertNotNull(encomenda3);
      assertFalse(set0.contains(string1));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      encomenda3.setIdComprador(0L);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2, encomenda3.getDiasDevolver());
      assertEquals(0L, encomenda3.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(1, encomenda3.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(1L, encomenda3.getId());
      assertFalse(set0.contains(string1));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      String string2 = locale0.getExtension('x');
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertNull(string2);
      
      int int0 = encomenda3.numeroArtigos();
      assertEquals("zh", locale0.getLanguage());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(0L, encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(2, encomenda3.getDiasDevolver());
      assertEquals(0L, encomenda3.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(1, encomenda3.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(1L, encomenda3.getId());
      assertEquals(1, int0);
      assertFalse(set0.contains(string1));
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      // Undeclared exception!
      try { 
        encomenda3.podeDevolver((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.temporal.ChronoUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = (-1360);
      Encomenda.setDiasDevolver((-1360));
      Encomenda encomenda0 = new Encomenda();
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1360), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1360), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1360), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(encomenda1);
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals((-1360), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1360), encomenda1.getDiasDevolver());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(1L, encomenda2.getId());
      assertEquals((-1360), encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertNotNull(encomenda2);
      
      // Undeclared exception!
      try { 
        encomenda1.equals(encomenda2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Set<String> set0 = encomenda0.removeTudo();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Medio;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(311L);
      assertNotNull(localDate0);
      
      Period period0 = Period.between(localDate0, localDate0);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate1 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate1);
      assertFalse(localDate1.equals((Object)localDate0));
      assertNotSame(localDate0, localDate1);
      assertNotSame(localDate1, localDate0);
      
      Period period1 = period0.plusMonths(1L);
      assertNotNull(period1);
      assertFalse(localDate0.equals((Object)localDate1));
      assertFalse(period1.equals((Object)period0));
      assertNotSame(localDate0, localDate1);
      assertNotSame(period0, period1);
      assertNotSame(period1, period0);
      
      Encomenda encomenda1 = new Encomenda(set0, 0L, dimensao0, localDate1);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Dimensao.Medio, encomenda1.getDimensao());
      assertEquals(0L, encomenda1.getIdComprador());
      assertNotNull(encomenda1);
      assertFalse(localDate0.equals((Object)localDate1));
      assertFalse(period0.equals((Object)period1));
      assertFalse(localDate1.equals((Object)localDate0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      encomenda1.setIdComprador(0L);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(3L, encomenda0.getCodigo());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(3L, encomenda1.getCodigo());
      assertEquals(Dimensao.Medio, encomenda1.getDimensao());
      assertEquals(0L, encomenda1.getIdComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(localDate0.equals((Object)localDate1));
      assertFalse(period0.equals((Object)period1));
      assertFalse(localDate1.equals((Object)localDate0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(localDate0, localDate1);
      assertNotSame(period0, period1);
      assertNotSame(localDate1, localDate0);
      assertNotSame(encomenda1, encomenda0);
      
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Encomenda.setCodigo(311L);
      encomenda0.setId(2);
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(311L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set1 = encomenda1.removeTudo();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(311L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(311L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda1.getDimensao());
      assertEquals(0L, encomenda1.getIdComprador());
      assertTrue(set1.isEmpty());
      assertEquals(0, set1.size());
      assertNotNull(set1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(localDate0.equals((Object)localDate1));
      assertFalse(period0.equals((Object)period1));
      assertFalse(localDate1.equals((Object)localDate0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set0, set1);
      assertNotSame(localDate0, localDate1);
      assertNotSame(period0, period1);
      assertNotSame(localDate1, localDate0);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set1, set0);
      
      encomenda0.setDimensao(dimensao0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(311L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotSame(encomenda0, encomenda1);
      
      int int1 = encomenda0.numeroArtigos();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(311L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertNotSame(encomenda0, encomenda1);
      
      long long0 = Encomenda.criaCodigo();
      assertEquals(311L, long0);
      
      Encomenda.setDiasDevolver(2);
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = encomenda1.equals(object0);
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(312L, encomenda0.getCodigo());
      assertEquals(2L, encomenda0.getId());
      assertEquals(Dimensao.Medio, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(312L, encomenda1.getCodigo());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Medio, encomenda1.getDimensao());
      assertEquals(0L, encomenda1.getIdComprador());
      assertFalse(boolean0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(localDate0.equals((Object)localDate1));
      assertFalse(period0.equals((Object)period1));
      assertFalse(localDate1.equals((Object)localDate0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set0, set1);
      assertNotSame(localDate0, localDate1);
      assertNotSame(period0, period1);
      assertNotSame(localDate1, localDate0);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda0.toString();
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(312L, encomenda0.getCodigo());
      assertEquals(2L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      try { 
        encomenda0.removeArtigo("v");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo v n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.adicionaArtigo("md']Rp}9wN?X[ATE5c/");
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals("md']Rp}9wN?X[ATE5c/", string0);
      assertNotNull(string0);
      
      try { 
        encomenda0.removeArtigo("*Fm|`.7.y");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo *Fm|`.7.y n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      long long0 = Encomenda.getCodigo();
      assertEquals(1L, long0);
      
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("", locale0.getVariant());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("CN", locale0.getCountry());
      assertNotNull(locale0);
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("", locale0.getVariant());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("CN", locale0.getCountry());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Grande;
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(encomenda1);
      
      String string0 = encomenda1.toString();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(1L, encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertNotNull(string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      // Undeclared exception!
      try { 
        MockLocalDate.parse((CharSequence) "Encomenda:: { Artigos: java.util.HashSet@0000000003 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: N/A}");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // Text 'Encomenda:: { Artigos: java.util.HashSet@0000000003 C\u00F3digo: 1 Di...' could not be parsed at index 0
         //
         verifyException("java.time.format.DateTimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = Encomenda.getDiasDevolver();
      assertEquals(2, int0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertNotNull(encomenda0);
      
      int int1 = encomenda0.numeroArtigos();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertNotNull(encomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = encomenda1.equals(object0);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(1L, encomenda2.getId());
      assertNotNull(encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      Set<String> set0 = encomenda0.removeTudo();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      Encomenda.setDiasDevolver((-3159));
      encomenda1.setId((-3159));
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-3159L), encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      encomenda2.setIdComprador((-3819L));
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-3159L), encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals((-3819L), encomenda2.getIdComprador());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(1L, encomenda2.getId());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      boolean boolean1 = encomenda1.equals(encomenda1);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-3159L), encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertTrue(boolean1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(boolean1 == boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Set<String> set1 = encomenda0.removeTudo();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, set1.size());
      assertTrue(set1.isEmpty());
      assertNotNull(set1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(set1, set0);
      
      Set<String> set2 = encomenda0.getEncomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertTrue(set2.isEmpty());
      assertEquals(0, set2.size());
      assertNotNull(set2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set2.equals((Object)set0));
      assertTrue(set2.equals((Object)set1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(set2, set1);
      assertNotSame(set2, set0);
      
      System.setCurrentTimeMillis(1L);
      Encomenda encomenda3 = new Encomenda(encomenda0);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(1L, encomenda3.getId());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertNotNull(encomenda3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda1));
      
      Charset charset0 = Charset.defaultCharset();
      assertEquals("windows-1252", charset0.toString());
      assertEquals("windows-1252", charset0.name());
      assertTrue(charset0.canEncode());
      assertEquals("windows-1252", charset0.displayName());
      assertTrue(charset0.isRegistered());
      assertNotNull(charset0);
      
      Set<String> set3 = encomenda3.getEncomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(1L, encomenda3.getId());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertTrue(set3.isEmpty());
      assertEquals(0, set3.size());
      assertNotNull(set3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertTrue(set3.equals((Object)set1));
      assertTrue(set3.equals((Object)set2));
      assertTrue(set3.equals((Object)set0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(set3, set2);
      assertNotSame(set3, set1);
      assertNotSame(set3, set0);
      
      encomenda3.setEncomenda(set1);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, set1.size());
      assertTrue(set1.isEmpty());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(1L, encomenda3.getId());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(set1.equals((Object)set2));
      assertTrue(set1.equals((Object)set3));
      assertTrue(set1.equals((Object)set0));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(set1, set3);
      assertNotSame(set1, set0);
      assertNotSame(set1, set2);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      Set<String> set4 = charset0.aliases();
      assertEquals(2, set4.size());
      assertFalse(set4.isEmpty());
      assertEquals("windows-1252", charset0.toString());
      assertEquals("windows-1252", charset0.name());
      assertTrue(charset0.canEncode());
      assertEquals("windows-1252", charset0.displayName());
      assertTrue(charset0.isRegistered());
      assertNotNull(set4);
      assertFalse(set4.equals((Object)set1));
      assertFalse(set4.equals((Object)set2));
      assertFalse(set4.equals((Object)set3));
      assertFalse(set4.equals((Object)set0));
      
      encomenda3.setEncomenda(set4);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, set4.size());
      assertFalse(set4.isEmpty());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(2, encomenda3.numeroArtigos());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(1L, encomenda3.getId());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertEquals("windows-1252", charset0.toString());
      assertEquals("windows-1252", charset0.name());
      assertTrue(charset0.canEncode());
      assertEquals("windows-1252", charset0.displayName());
      assertTrue(charset0.isRegistered());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(set4.equals((Object)set1));
      assertFalse(set4.equals((Object)set2));
      assertFalse(set4.equals((Object)set3));
      assertFalse(set4.equals((Object)set0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      String string0 = encomenda3.adicionaArtigo((String) null);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(3, encomenda3.numeroArtigos());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(1L, encomenda3.getId());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      boolean boolean2 = encomenda1.equals(encomenda3);
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-3159L), encomenda1.getId());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(3, encomenda3.numeroArtigos());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(1L, encomenda3.getId());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertFalse(boolean2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      int int0 = encomenda0.numeroArtigos();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, int0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      
      String string1 = encomenda3.toString();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(3, encomenda3.numeroArtigos());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(1L, encomenda3.getId());
      assertEquals(Dimensao.Medio, encomenda3.getDimensao());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      Set<String> set5 = encomenda0.getEncomenda();
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(1L, encomenda0.getId());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(0, set5.size());
      assertTrue(set5.isEmpty());
      assertNotNull(set5);
      assertFalse(set5.contains(string1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertTrue(set5.equals((Object)set3));
      assertFalse(set5.equals((Object)set4));
      assertTrue(set5.equals((Object)set1));
      assertTrue(set5.equals((Object)set0));
      assertTrue(set5.equals((Object)set2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(set5, set0);
      assertNotSame(set5, set2);
      assertNotSame(set5, set1);
      assertNotSame(set5, set3);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertNotNull(set0);
      
      Dimensao dimensao0 = Dimensao.Grande;
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Encomenda encomenda0 = new Encomenda(set0, 2050L, dimensao0, localDate0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      assertNotNull(encomenda0);
      
      encomenda0.defineTamanho();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, encomenda0.numeroArtigos());
      
      Set<String> set1 = encomenda0.removeTudo();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(603, set1.size());
      assertFalse(set1.isEmpty());
      assertNotNull(set1);
      assertTrue(set1.equals((Object)set0));
      assertNotSame(set0, set1);
      assertNotSame(set1, set0);
      
      Encomenda.setDiasDevolver(1);
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(encomenda1);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      long long0 = encomenda0.getId();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(1L, long0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setEncomenda(set0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda1.equals(dimensao0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(boolean0);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setData(localDate0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Set<String> set2 = encomenda0.removeTudo();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertTrue(set2.isEmpty());
      assertEquals(0, set2.size());
      assertNotNull(set2);
      assertTrue(set0.equals((Object)set1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(set2.equals((Object)set0));
      assertFalse(set2.equals((Object)set1));
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set2, set0);
      assertNotSame(set2, set1);
      
      encomenda1.setDataEntrega(localDate0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(603, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Set<String> set3 = encomenda1.removeTudo();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(603, set3.size());
      assertFalse(set3.isEmpty());
      assertNotNull(set3);
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(set3.equals((Object)set0));
      assertFalse(set3.equals((Object)set2));
      assertTrue(set3.equals((Object)set1));
      assertNotSame(set0, set3);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set3, set1);
      assertNotSame(set3, set2);
      assertNotSame(set3, set0);
      
      Encomenda.setCodigo(2050L);
      LocalDate localDate1 = encomenda0.getData();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertNotNull(localDate1);
      assertTrue(set0.equals((Object)set3));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertSame(localDate1, localDate0);
      assertNotSame(set0, set3);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertNotSame(encomenda0, encomenda1);
      
      LocalDate localDate2 = encomenda1.getDataEntrega();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(localDate2);
      assertTrue(set0.equals((Object)set3));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate2, localDate1);
      assertSame(localDate2, localDate0);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Estado estado0 = Estado.Expedida;
      encomenda0.setEstado(estado0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(1L, encomenda0.getId());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertTrue(set0.equals((Object)set3));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set3);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      
      long long1 = Encomenda.getCodigo();
      assertEquals(2050L, long1);
      assertFalse(long1 == long0);
      
      encomenda0.setId(2050L);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertTrue(set0.equals((Object)set3));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set3);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      
      Set<String> set4 = encomenda0.getEncomenda();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(0, set4.size());
      assertTrue(set4.isEmpty());
      assertNotNull(set4);
      assertTrue(set0.equals((Object)set3));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(set4.equals((Object)set3));
      assertFalse(set4.equals((Object)set0));
      assertFalse(set4.equals((Object)set1));
      assertTrue(set4.equals((Object)set2));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set4, set2);
      assertNotSame(set4, set3);
      assertNotSame(set4, set0);
      assertNotSame(set4, set1);
      
      Set<String> set5 = encomenda1.removeTudo();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertTrue(set5.isEmpty());
      assertEquals(0, set5.size());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(1L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertNotNull(set5);
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(set5.equals((Object)set1));
      assertFalse(set5.equals((Object)set0));
      assertTrue(set5.equals((Object)set2));
      assertFalse(set5.equals((Object)set3));
      assertTrue(set5.equals((Object)set4));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set5, set1);
      assertNotSame(set5, set0);
      assertNotSame(set5, set4);
      assertNotSame(set5, set2);
      assertNotSame(set5, set3);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setId(0L);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setDataEntrega(localDate2);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate2, localDate1);
      assertSame(localDate2, localDate0);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setData(localDate2);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate2, localDate1);
      assertSame(localDate2, localDate0);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda0.adicionaArtigo(" Dimens\u00E3o: ");
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(" Dimens\u00E3o: ", string0);
      assertNotNull(string0);
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setDataEntrega(localDate2);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate2, localDate1);
      assertSame(localDate2, localDate0);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setEncomenda(set2);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(set2.isEmpty());
      assertEquals(0, set2.size());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertFalse(set2.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(set2.equals((Object)set0));
      assertFalse(set2.equals((Object)set1));
      assertTrue(set2.equals((Object)set4));
      assertTrue(set2.equals((Object)set5));
      assertFalse(set2.equals((Object)set3));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(set2, set0);
      assertNotSame(set2, set1);
      assertNotSame(set2, set5);
      assertNotSame(set2, set4);
      assertNotSame(set2, set3);
      
      encomenda1.setEstado(estado0);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(1, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setEncomenda(set5);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertTrue(set5.isEmpty());
      assertEquals(0, set5.size());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertFalse(set5.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(set5.equals((Object)set1));
      assertFalse(set5.equals((Object)set0));
      assertTrue(set5.equals((Object)set2));
      assertFalse(set5.equals((Object)set3));
      assertTrue(set5.equals((Object)set4));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(set5, set1);
      assertNotSame(set5, set0);
      assertNotSame(set5, set4);
      assertNotSame(set5, set2);
      assertNotSame(set5, set3);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean1 = encomenda1.podeDevolver(localDate1);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertTrue(boolean1);
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertFalse(boolean1 == boolean0);
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertSame(localDate1, localDate0);
      assertSame(localDate1, localDate2);
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.defineTamanho();
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setIdComprador(2050L);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setData(localDate2);
      assertEquals(603, set0.size());
      assertFalse(set0.isEmpty());
      assertEquals(2050L, encomenda0.getId());
      assertEquals(1, encomenda0.getDiasDevolver());
      assertEquals(2050L, encomenda0.getCodigo());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2050L, encomenda0.getIdComprador());
      assertEquals(Dimensao.Grande, encomenda0.getDimensao());
      assertEquals(Estado.Expedida, encomenda0.getEstado());
      assertEquals(2050L, encomenda1.getCodigo());
      assertEquals(2050L, encomenda1.getIdComprador());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(0L, encomenda1.getId());
      assertEquals(1, encomenda1.getDiasDevolver());
      assertEquals(Estado.Expedida, encomenda1.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertFalse(set0.contains(" Dimens\u00E3o: "));
      assertTrue(set0.equals((Object)set3));
      assertFalse(set0.equals((Object)set4));
      assertFalse(set0.equals((Object)set5));
      assertTrue(set0.equals((Object)set1));
      assertFalse(set0.equals((Object)set2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(set0, set3);
      assertNotSame(set0, set4);
      assertNotSame(set0, set5);
      assertNotSame(set0, set1);
      assertNotSame(set0, set2);
      assertSame(localDate2, localDate1);
      assertSame(localDate2, localDate0);
      assertSame(localDate0, localDate1);
      assertSame(localDate0, localDate2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertNotNull(encomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(1L, encomenda2.getId());
      assertNotNull(encomenda2);
      
      Encomenda encomenda3 = encomenda2.clone();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(2, encomenda0.getDiasDevolver());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals(2, encomenda1.getDiasDevolver());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals(2, encomenda2.getDiasDevolver());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(1L, encomenda2.getId());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals(2, encomenda3.getDiasDevolver());
      assertEquals((-1L), encomenda3.getIdComprador());
      assertEquals(1L, encomenda3.getId());
      assertNotNull(encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      Encomenda.setDiasDevolver((-3159));
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1472), 2);
      assertNotNull(localDate0);
      
      encomenda0.setDataEntrega(localDate0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      
      encomenda2.setId((-3159));
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda3.setIdComprador((-3819L));
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(Estado.Pendente, encomenda3.getEstado());
      assertEquals((-3159), encomenda3.getDiasDevolver());
      assertEquals(0, encomenda3.numeroArtigos());
      assertEquals(2L, encomenda3.getCodigo());
      assertEquals(Dimensao.Pequeno, encomenda3.getDimensao());
      assertEquals((-3819L), encomenda3.getIdComprador());
      assertEquals(1L, encomenda3.getId());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      
      boolean boolean0 = encomenda1.equals(encomenda2);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertFalse(boolean0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda1);
      
      Set<String> set0 = encomenda2.removeTudo();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotNull(set0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda1);
      
      Set<String> set1 = encomenda2.getEncomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertEquals(0, set1.size());
      assertTrue(set1.isEmpty());
      assertNotNull(set1);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(set1.equals((Object)set0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(set1, set0);
      
      System.setCurrentTimeMillis(1L);
      Encomenda encomenda4 = new Encomenda(encomenda0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda4.getCodigo());
      assertEquals((-1L), encomenda4.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda4.getDimensao());
      assertEquals((-3159), encomenda4.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda4.getEstado());
      assertEquals(0, encomenda4.numeroArtigos());
      assertEquals(1L, encomenda4.getId());
      assertNotNull(encomenda4);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda1));
      
      Encomenda encomenda5 = encomenda4.clone();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda4.getCodigo());
      assertEquals((-1L), encomenda4.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda4.getDimensao());
      assertEquals((-3159), encomenda4.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda4.getEstado());
      assertEquals(0, encomenda4.numeroArtigos());
      assertEquals(1L, encomenda4.getId());
      assertEquals((-3159), encomenda5.getDiasDevolver());
      assertEquals(0, encomenda5.numeroArtigos());
      assertEquals(Estado.Pendente, encomenda5.getEstado());
      assertEquals(2L, encomenda5.getCodigo());
      assertEquals((-1L), encomenda5.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda5.getDimensao());
      assertEquals(1L, encomenda5.getId());
      assertNotNull(encomenda5);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertTrue(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertTrue(encomenda5.equals((Object)encomenda4));
      assertFalse(encomenda5.equals((Object)encomenda2));
      assertFalse(encomenda5.equals((Object)encomenda1));
      assertFalse(encomenda5.equals((Object)encomenda3));
      assertTrue(encomenda5.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda5);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda4, encomenda5);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda1);
      assertNotSame(encomenda5, encomenda2);
      assertNotSame(encomenda5, encomenda1);
      assertNotSame(encomenda5, encomenda3);
      assertNotSame(encomenda5, encomenda0);
      assertNotSame(encomenda5, encomenda4);
      
      boolean boolean1 = encomenda4.equals(encomenda0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(2L, encomenda4.getCodigo());
      assertEquals((-1L), encomenda4.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda4.getDimensao());
      assertEquals((-3159), encomenda4.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda4.getEstado());
      assertEquals(0, encomenda4.numeroArtigos());
      assertEquals(1L, encomenda4.getId());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda0.equals((Object)encomenda5));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertTrue(encomenda4.equals((Object)encomenda0));
      assertTrue(encomenda4.equals((Object)encomenda5));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda5);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda4, encomenda5);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda1);
      
      Set<String> set2 = encomenda2.getEncomenda();
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertEquals(0, set2.size());
      assertTrue(set2.isEmpty());
      assertEquals(Dimensao.Pequeno, encomenda1.getDimensao());
      assertEquals((-1L), encomenda1.getIdComprador());
      assertEquals(1L, encomenda1.getId());
      assertEquals((-3159), encomenda1.getDiasDevolver());
      assertEquals(Estado.Pendente, encomenda1.getEstado());
      assertEquals(0, encomenda1.numeroArtigos());
      assertEquals(2L, encomenda1.getCodigo());
      assertEquals((-3159), encomenda2.getDiasDevolver());
      assertEquals(0, encomenda2.numeroArtigos());
      assertEquals(Dimensao.Pequeno, encomenda2.getDimensao());
      assertEquals(2L, encomenda2.getCodigo());
      assertEquals(Estado.Pendente, encomenda2.getEstado());
      assertEquals((-3159L), encomenda2.getId());
      assertEquals((-1L), encomenda2.getIdComprador());
      assertNotNull(set2);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda0.equals((Object)encomenda5));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertTrue(set2.equals((Object)set1));
      assertTrue(set2.equals((Object)set0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda5));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda4));
      assertNotSame(encomenda0, encomenda5);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(set2, set0);
      assertNotSame(set2, set1);
      assertNotSame(encomenda1, encomenda5);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda4);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda5);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda4);
      
      boolean boolean2 = encomenda0.podeDevolver(localDate0);
      assertEquals((-1L), encomenda0.getIdComprador());
      assertEquals(Dimensao.Pequeno, encomenda0.getDimensao());
      assertEquals(1L, encomenda0.getId());
      assertEquals(0, encomenda0.numeroArtigos());
      assertEquals((-3159), encomenda0.getDiasDevolver());
      assertEquals(2L, encomenda0.getCodigo());
      assertEquals(Estado.Pendente, encomenda0.getEstado());
      assertFalse(boolean2);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda0.equals((Object)encomenda5));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(encomenda0, encomenda5);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda3);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      Encomenda encomenda1 = new Encomenda(encomenda0);
      Object object0 = new Object();
      Encomenda encomenda2 = new Encomenda(encomenda1);
      Encomenda encomenda3 = encomenda2.clone();
      Encomenda.setDiasDevolver((-3159));
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1472), 2);
      encomenda0.setDataEntrega(localDate0);
      encomenda2.setId((-3159));
      encomenda3.setIdComprador((-3819L));
      encomenda1.equals(encomenda2);
      encomenda2.removeTudo();
      encomenda2.getEncomenda();
      System.setCurrentTimeMillis(1L);
      Encomenda encomenda4 = new Encomenda(encomenda0);
      encomenda4.equals(encomenda0);
      encomenda2.getEncomenda();
      assertEquals((-3159L), encomenda2.getId());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      String string0 = " Artigos: ";
      encomenda0.adicionaArtigo(" Artigos: ");
      encomenda0.setId((-2247L));
      encomenda0.adicionaArtigo("hMHQkEpFLvN*>qd@=M");
      Dimensao dimensao0 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao0);
      encomenda0.toString();
      try { 
        encomenda0.removeArtigo("Z");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Z n\u00E3o existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Encomenda.criaCodigo();
      Encomenda encomenda0 = new Encomenda();
      Encomenda encomenda1 = new Encomenda(encomenda0);
      // Undeclared exception!
      try { 
        encomenda1.equals(encomenda0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      encomenda0.equals("");
      Encomenda.setCodigo((-3368L));
      encomenda0.getEncomenda();
      Encomenda.setDiasDevolver((-7));
      Encomenda.setCodigo(0L);
      Encomenda encomenda1 = encomenda0.clone();
      encomenda1.setId((-3368L));
      encomenda0.adicionaArtigo("");
      LocalDate localDate0 = MockLocalDate.now();
      encomenda1.setData(localDate0);
      encomenda0.toString();
      encomenda1.setId(198L);
      encomenda1.setId(0L);
      Estado estado0 = Estado.Finalizada;
      encomenda0.setEstado(estado0);
      encomenda1.getId();
      encomenda1.equals((Object) null);
      Encomenda encomenda2 = encomenda1.clone();
      Encomenda.setCodigo(1909L);
      encomenda2.equals("Encomenda:: { Artigos: java.util.HashSet@0000000004 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: 2014-02-14 Data de entrega: N/A}");
      encomenda1.setIdComprador((-174L));
      Dimensao dimensao0 = Dimensao.Medio;
      encomenda0.setDimensao(dimensao0);
      Encomenda.criaCodigo();
      encomenda0.equals(encomenda1);
      assertEquals((-7), encomenda0.getDiasDevolver());
      
      Encomenda encomenda3 = new Encomenda();
      assertEquals(1911L, encomenda3.getCodigo());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      encomenda0.adicionaArtigo("1|!G!H&");
      encomenda0.setIdComprador(0L);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      encomenda0.defineTamanho();
      linkedHashSet0.add("1|!G!H&");
      linkedHashSet0.add("1|!G!H&");
      linkedHashSet0.add("1|!G!H&");
      encomenda0.setEncomenda(linkedHashSet0);
      encomenda0.removeArtigo("1|!G!H&");
      Encomenda.getCodigo();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2L);
      Encomenda.getDiasDevolver();
      encomenda0.setDataEntrega(localDate0);
      Encomenda.setCodigo(3715L);
      encomenda0.podeDevolver(localDate0);
      encomenda0.podeDevolver(localDate0);
      encomenda0.toString();
      encomenda0.getDimensao();
      encomenda0.setEncomenda(linkedHashSet0);
      encomenda0.setData(localDate0);
      encomenda0.adicionaArtigo("Encomenda:: { Artigos: java.util.HashSet@0000000002 C\u00F3digo: 1 Dimens\u00E3o: Pequeno Estado: Pendente Data de cria\u00E7\u00E3o: N/A  Data de entrega: 1970-01-03}");
      Encomenda.setCodigo(2L);
      try { 
        encomenda0.adicionaArtigo("1|!G!H&");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo 1|!G!H& j\u00E1 existe na encomenda
         //
         verifyException("Encomenda", e);
      }
  }
}
