/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 10:37:08 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.FormatStyle;
import java.time.temporal.ChronoUnit;
import java.time.temporal.TemporalQuery;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vintage_ESTest extends Vintage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Period period0 = Period.ofDays(2245);
      period0.plusMonths(2245);
      Long.toUnsignedString((long) 2245);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Artigo.contador = (long) 2245;
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      vintage0.ColocarVenderMala(3773L, localDate0, "", "", 2245, true, 1916, 0, (-2L), 2064, "bf.E#ng?yHqlRuP.cK", 2064, true, 0.0F);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2691, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      SystemInUtil.addInputLine("");
      byteArray0[0] = (byte) (-52);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.vendedorMaior((byte) (-52), localDate0, localDate0);
      vintage0.filtraMalasDimensao((byte) (-52));
      vintage0.salvarEstado();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      HashMap<Long, Encomenda> hashMap4 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap4);
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas1, gestor_Transportadoras1, menu0);
      vintage0.vendedorFacturou();
      Period period0 = Period.ZERO;
      Period period1 = period0.normalized();
      IsoChronology isoChronology0 = period1.getChronology();
      MockIsoChronology.dateNow(isoChronology0);
      Gestor_Transportadoras gestor_Transportadoras2 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras3 = new Gestor_Transportadoras(gestor_Transportadoras2);
      Vintage vintage1 = Vintage.load();
      vintage1.imprime1FaturaCompra(1122L);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      HashMap<Long, Encomenda> hashMap4 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap4);
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas1, gestor_Transportadoras1, menu0);
      vintage0.vendedorFacturou();
      Period period0 = Period.ZERO;
      Period period1 = period0.normalized();
      IsoChronology isoChronology0 = period1.getChronology();
      MockIsoChronology.dateNow(isoChronology0);
      Gestor_Transportadoras gestor_Transportadoras2 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras3 = new Gestor_Transportadoras(gestor_Transportadoras2);
      Long long0 = new Long(3615L);
      Vintage vintage1 = Vintage.load();
      vintage1.imprime1FaturaCompra(1122L);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeFormulasNormais();
      vintage0.povoamento();
      LocalDate localDate0 = MockLocalDate.ofYearDay(36, 3);
      Long long0 = new Long(1419);
      Long.getLong("");
      vintage0.faturas_venda();
      vintage0.getGestor_Trasportadoras();
      vintage0.ColocarvenderSapatilha((-1L), localDate0, "", " Faturou ", 0.0, false, 142, 1419, long0, 0L, 3, false, "", 1419, false, (-2728.4640292));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getUtilizador();
      LocalDate localDate0 = vintage0.getData();
      int int0 = 25;
      vintage0.vendedorMaior(25, localDate0, localDate0);
      vintage0.avancarTempo(localDate0);
      String string0 = "oA@%6";
      try { 
        vintage0.artigoIndisponivel("oA@%6");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo oA@%6 n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.todosArtigos();
      vintage0.existeTranspotadora((-2740L));
      int int0 = 2218;
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      Artigo.contador = (long) 2218;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      vintage0.maiorVendedor(2218, localDate0, localDate0);
      vintage0.imprimeCarrinho();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasVendas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = "m~k ZI0F0C";
      String string1 = "m6E7k|9h30V";
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      vintage0.criaTshirt("5 - Ver faturas", "Mala de ombro pequena", (-595.889994841), false, 1, 3, 3, tamanho0, padrao0);
      vintage0.getGestor_Trasportadoras();
      double double0 = 0.0;
      boolean boolean0 = true;
      int int0 = 2672;
      int int1 = 80;
      Long long0 = null;
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Artigo.contador = (long) 80;
      vintage0.getGestor_Encomendas();
      vintage0.criaSapatilha("m~k ZI0F0C", "m6E7k|9h30V", 0.0, true, 2672, 80, (Long) null, 2672, false, "N\u00E3o h\u00E1 vendedores", 3204, false, 2132.6);
      vintage0.removerTodosArtigosCarrinho();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "m";
      SystemInUtil.addInputLine("m");
      Vintage vintage0 = new Vintage();
      int int0 = (-1161);
      int int1 = (-2262);
      Boolean.valueOf(true);
      Boolean.logicalAnd(true, true);
      Boolean.logicalAnd(false, false);
      Boolean.compare(false, false);
      Boolean.logicalOr(false, true);
      String string1 = vintage0.encomendasEmitidasVendedor((-2262));
      vintage0.getGestor_Utilizadores();
      vintage0.filtraSapatilhasTamanho(int0);
      vintage0.login_utlizador(string1);
      long long0 = 1031L;
      int int2 = (-320);
      vintage0.alteraFormula(long0, int2);
      vintage0.imprimeTransportadoraspremium();
      Menu menu0 = new Menu();
      FormatStyle formatStyle0 = FormatStyle.MEDIUM;
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      vintage0.filtraSapatilhasTamanho(4);
      vintage0.login_utlizador("");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraSapatilhasCor("Dur\u00E1veis");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = (-1575);
      vintage0.filtraSapatilhasTamanho((-1575));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      vintage0.verificaPassword(">Jt*W4pY]i9OO", "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = (-1594);
      String string0 = null;
      Boolean boolean0 = Boolean.valueOf(false);
      vintage0.criaMala("Dur\u00E1veis", "Dur\u00E1veis", 894.01, false, (-1594), (-1594), (-1454L), (-1594), (String) null, (-1594), boolean0, (-1594));
      vintage0.encomendasDevolver(int1);
      vintage0.filtraAMarcaSapatilhas(string0);
      vintage0.tamanhoEncomenda(int1);
      String string1 = "<6`V";
      ZoneOffset zoneOffset0 = ZoneOffset.of(string1);
      ZoneId.getAvailableZoneIds();
      ZoneId zoneId0 = ZoneId.ofOffset(string0, zoneOffset0);
      zoneId0.getId();
      int int2 = (-1179);
      // Undeclared exception!
      try { 
        MockLocalTime.of(int0, int2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, (-1));
      vintage0.meusArtigos();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, (GestorEncomendas) null, gestor_Transportadoras1, menu0, (-65));
      Long long0 = new Long((-65));
      vintage0.criaSapatilha("l$l1[6xZOYDv=^);", "l$l1[6xZOYDv=^);", (-65), true, (-65), 679, long0, 2, false, "5", (-3098), true, 1874.144464037956);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      String string0 = "";
      String string1 = " Artigos: ";
      double double0 = 2005.305;
      boolean boolean0 = true;
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, (-4983));
      Tamanho tamanho0 = Tamanho.XL;
      vintage0.filtraTshirtsTamanho(tamanho0);
      Vintage vintage1 = Vintage.load();
      Vintage vintage2 = new Vintage(vintage1);
      int int0 = 2115;
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("Guess", "Guess", "Guess", 1981L, "Guess");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      vintage0.imprimeFormulas();
      vintage0.vendedorFacturou();
      Vintage vintage1 = new Vintage(vintage0);
      long long0 = (-2589L);
      vintage1.tamanhoEncomenda(long0);
      vintage1.TransportadoraMaiorVolume();
      Menu menu0 = new Menu();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        Artigo.criaCodigo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Vintage.carregarEstado();
      Vintage vintage0 = null;
      try {
        vintage0 = new Vintage((Vintage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Vintage vintage1 = null;
      try {
        vintage1 = new Vintage(vintage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = null;
      try {
        vintage1 = new Vintage(vintage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = Boolean.valueOf("");
      vintage0.filtraSapatilhasNovo(boolean0);
      int int0 = 2343;
      vintage0.alteraFormula((-2166L), 2343);
      vintage0.imprimeFaturasCompras();
      // Undeclared exception!
      try { 
        vintage0.existe_transpotadoraPremium(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Gestor_Artigos.setTaxaNovo(0.0);
      Artigo.setContador(1893L);
      vintage0.verificaPassword((String) null, (String) null);
      Artigo.setContador(123456L);
      vintage0.filtraSapatilhasCor("^6_B#d");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.vendedorFacturou();
      long long0 = 0L;
      vintage0.filtraSapatilhasCor("N\u00E3o h\u00E1 vendedores");
      // Undeclared exception!
      try { 
        vintage0.tamanhoEncomenda(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Vintage vintage0 = Vintage.carregarEstado();
      Long long0 = new Long(0L);
      String string0 = null;
      Month month0 = Month.NOVEMBER;
      LocalDate localDate0 = MockLocalDate.of(1501, month0, 60);
      vintage0.comprarArtigo(long0, string0, localDate0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      long long0 = 1L;
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaCompra(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0);
      vintage0.alteraFormula((-1088L), 0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      gestor_Transportadoras0.formulasDisponiveis();
      Map<Long, Transportadora> map0 = gestor_Transportadoras0.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(map0);
      long long0 = 3849L;
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaCompra(3849L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Map<Long, Encomenda> map0 = gestorEncomendas0.getEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(map0);
      GestorEncomendas gestorEncomendas2 = new GestorEncomendas(gestorEncomendas1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas2, gestor_Transportadoras0, menu0, 771);
      vintage0.finalizarEncomenda();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.todosArtigos();
      Transportadora.setCodigo((-562));
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.maiorComprador((-562), localDate0, localDate0);
      vintage0.getUtilizador();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos((Map<Integer, Artigo>) null);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Map<Long, Encomenda> map0 = gestorEncomendas0.getEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(map0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas1, gestor_Transportadoras0, menu0, 80);
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.maiorComprador(2064, localDate0, localDate0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      vintage0.filtraSapatilhasCor("");
      vintage0.encomendasDevolvidas();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      String string0 = null;
      String string1 = "TC";
      vintage0.faturas_compras();
      long long0 = 0L;
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadorasNormais();
      // Undeclared exception!
      try { 
        vintage0.faturas_compras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      gestor_Transportadoras0.getTransportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      Boolean boolean0 = Boolean.TRUE;
      vintage0.filtraSapatilhasNovo(boolean0);
      Tamanho tamanho0 = Tamanho.M;
      vintage0.filtraTshirtsTamanho(tamanho0);
      long long0 = 1371L;
      LocalDate localDate0 = MockLocalDate.now();
      Period period0 = Period.between(localDate0, localDate0);
      Period period1 = period0.negated();
      period1.getChronology();
      int int0 = 12;
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.alteraQuantiVendida(1371L, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      Map<String, Long> map1 = gestor_Utilizadores1.getIdUtilizadores();
      Gestor_Utilizadores gestor_Utilizadores2 = new Gestor_Utilizadores(hashMap0, map0, map1);
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Map<Long, Transportadora> map2 = gestor_Transportadoras0.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(map2);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores2, gestorEncomendas0, gestor_Transportadoras1, menu0);
      vintage0.setGestor_Artigos(gestor_Artigos0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraAMarcaSapatilhas(":a@Tuj(DLki^zl");
      vintage0.filtraTshirtsMarca("0yT,mm;Gq/+(pH#");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = new Boolean("qm``fWH;XT&.#H'N>'u");
      vintage0.criaMala("qm``fWH;XT&.#H'N>'u", "qm``fWH;XT&.#H'N>'u", 919.39538992, true, 18, 40, 18, 40, "qm``fWH;XT&.#H'N>'u", 40, boolean0, 4870.928F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>(0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, map0, hashMap2);
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      HashMap<Long, Encomenda> hashMap3 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap3);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores1, gestorEncomendas0, gestor_Transportadoras0, menu0, 0);
      vintage0.encomendasRealizadas();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores1, gestorEncomendas1, gestor_Transportadoras1, menu0);
      int int0 = (-568);
      Vintage vintage1 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage1.faturas_venda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.encomendasDevolvidas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      String string0 = "";
      Boolean.valueOf("");
      long long0 = (-5859L);
      // Undeclared exception!
      try { 
        vintage0.faturas_venda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.adicionarArtigoCarrinhoPorID("+Eh07^%gTFQ=!u;", 0L, localDate0);
      String string0 = null;
      try { 
        vintage0.removerArtigosCarrinho(string0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo +Eh07^%gTFQ=!u; n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      HashMap<Long, Transportadora> hashMap2 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap2);
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras1, menu0);
      vintage0.imprimeFormulasNormais();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      vintage0.imprimeFormulasNormais();
      Long long0 = Long.getLong("*~", (-659L));
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.comprarArtigo(long0, "GM`??Y.^%LvO)V", localDate0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Utilizador.setCodigo(268L);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      vintage0.criaTshirt("s!rWb%&Ncw &l3", "d", 3.0, true, 0, 0, 123456L, tamanho0, padrao0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraMalasMarca("");
      vintage0.removerArtigosCarrinho("");
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasCompras();
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // O artigo  n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraTshirtsMarca("S:");
      vintage0.imprimeTransportadorasNormais();
      int int0 = 2643;
      vintage0.adicinonarTransportadora((String) null, 0.0, 0.0, 139.99, 139.99, 0.0, false, 2643);
      vintage0.imprimeFormulasNormais();
      vintage0.getUtilizador();
      Long long0 = new Long((-761L));
      Long.max((-1L), 0L);
      vintage0.comprarArtigo(long0, (String) null, (LocalDate) null);
      vintage0.comprarArtigo((Long) null, "1) (ValorBase * MargemLucroTransportadora * (1 + Imposto)) * 0,9\n2) (ValorBase * (1 + MargemLucroTransportadora + Imposto)) * 0,7", (LocalDate) null);
      vintage0.todosArtigos();
      String string0 = "Digite o tamanho S/M/L/XL:";
      String string1 = null;
      double double0 = 100.0;
      boolean boolean0 = true;
      int int1 = (-3469);
      long long1 = (-1L);
      int int2 = 0;
      boolean boolean1 = true;
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores1, gestorEncomendas0, (Gestor_Transportadoras) null, menu0, 2);
      vintage0.filtraMalasMarca(" htS0~RNRep_>Fj9");
      vintage0.removerArtigosCarrinho("Q7");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      vintage0.setGestor_Encomendas(gestorEncomendas0);
      vintage0.existeEmail("u");
      vintage0.getGestor_Trasportadoras();
      vintage0.existe_transpotadoraNormal(1411L);
      vintage0.imprimeCarrinho();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.meusArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Transportadora.criaCodigo();
      vintage0.VintageFaturou();
      vintage0.existeEmail("");
      vintage0.adicionaUtilizador("Vintage", "", "", (-1521L), "Vintage");
      vintage0.meusArtigos();
      vintage0.alteraFormula((-1521L), (-1532));
      int int0 = (-4002);
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.maiorVendedor(int0, localDate0, localDate0);
      vintage0.getGestor_Artigos();
      String string0 = "liso";
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasCompras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      long long0 = (-32L);
      // Undeclared exception!
      try { 
        vintage0.encomendasEmitidasVendedor((-32L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Map<Long, Encomenda> map1 = gestorEncomendas0.getEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(map1);
      GestorEncomendas gestorEncomendas2 = new GestorEncomendas(gestorEncomendas1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas2, gestor_Transportadoras0, menu0, 1471);
      Long long0 = new Long(1471);
      LocalDate localDate0 = MockLocalDate.now();
      gestor_Transportadoras0.formulasNormais();
      vintage0.finalizarEncomendaPorId(long0, localDate0);
      // Undeclared exception!
      try { 
        hashMap0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.artigoIndisponivel("BNL$DOe66");
      long long0 = 0L;
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.encomendasDevolver(0L);
      Tamanho tamanho0 = Tamanho.M;
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeTransportadoras();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Map<Long, Transportadora> map0 = gestor_Transportadoras1.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras2 = new Gestor_Transportadoras(map0);
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras2, (Menu) null);
      vintage0.salvarEstado();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      Map<Long, Utilizador> map0 = gestor_Utilizadores1.getUtilizadores();
      Map<String, String> map1 = ZoneId.SHORT_IDS;
      Map<String, Long> map2 = gestor_Utilizadores1.getIdUtilizadores();
      Gestor_Utilizadores gestor_Utilizadores2 = new Gestor_Utilizadores(map0, map1, map2);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores2, gestorEncomendas0, gestor_Transportadoras0, menu0);
      vintage0.filtraMalasMarca("5Z<1%]!{,%");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Transportadora> hashMap0 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      vintage0.imprimeTransportadoras();
      gestor_Utilizadores0.removeTodosComprador(2094L);
      vintage0.getGestor_Trasportadoras();
      String string0 = "Q)|sYY[";
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = "$|Y";
      double double0 = 730.678930721199;
      boolean boolean0 = true;
      int int0 = 540;
      int int1 = (-1466);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1436L);
      Long long0 = new Long(0L);
      vintage0.ColocarvenderSapatilha(0L, localDate0, "m${%-", "$|Y", (-1466), true, 540, (-327), long0, 1003L, 575, true, "#j|fl:&r|4%'K", 540, true, 1003L);
      long long1 = (-1171L);
      vintage0.getGestor_Utilizadores();
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.criaTshirt(string0, string0, double0, boolean0, int0, int1, long1, tamanho0, padrao0);
      vintage0.login_utlizador(string0);
      Padrao padrao1 = Padrao.liso;
      vintage0.filtraTshirtsPadrao(padrao1);
      // Undeclared exception!
      try { 
        vintage0.getGestor_Artigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      long long0 = (-1L);
      Utilizador.setCodigo((-1L));
      long long1 = (-1222L);
      vintage0.setUtilizador((-1222L));
      // Undeclared exception!
      try { 
        vintage0.removerTodosArtigosCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existe_transpotadoraNormal(0L);
      vintage0.verificaPassword("ud>tJ2Y`*:>EE7;R`0", " Nif: ");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Map<Long, Encomenda> map0 = gestorEncomendas1.getEncomendas();
      GestorEncomendas gestorEncomendas2 = new GestorEncomendas(map0);
      HashMap<Long, Transportadora> hashMap0 = new HashMap<Long, Transportadora>();
      Set<Long> set0 = gestor_Utilizadores0.chaves();
      gestorEncomendas2.encomendasToArtigos(set0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas2, gestor_Transportadoras0, menu0);
      gestorEncomendas2.encomendasToArtigos(set0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      vintage0.ColocarVenderTshit(1L, (LocalDate) null, "", "", (-1401.3398378496), false, 375, 0, 120L, tamanho0, padrao0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalOr(false, false);
      Boolean.logicalXor(false, false);
      vintage0.filtraTshirtsNovo(boolean0);
      int int0 = 1157;
      Month month0 = Month.OCTOBER;
      int int1 = (-3344);
      Gestor_Artigos.setTaxaUsado(0.0);
      LocalDate localDate0 = MockLocalDate.of(1157, month0, (-3344));
      vintage0.setData(localDate0);
      String string0 = vintage0.imprime1FaturaCompra(int1);
      // Undeclared exception!
      try { 
        vintage0.removerArtigosCarrinho(string0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for DayOfMonth (valid values 1 - 28/31): -3344
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos((Map<Integer, Artigo>) null);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Map<Long, Transportadora> map0 = gestor_Transportadoras0.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(map0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras1, menu0);
      vintage0.TransportadoraMaiorVolume();
      long long0 = 0L;
      // Undeclared exception!
      try { 
        MockLocalDate.now();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = new Boolean(true);
      vintage0.criaMala("", "", 0.0, false, 2485, 2485, 2485, 2485, "SU", 2485, boolean0, 2485);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Vintage vintage1 = Vintage.carregarEstado();
      vintage0.imprimeFormulas();
      long long0 = (-3073L);
      vintage0.login_utlizador("Poli\u00E9ster");
      // Undeclared exception!
      try { 
        vintage1.imprime1FaturaCompra(long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      long long0 = (-2561L);
      // Undeclared exception!
      try { 
        vintage0.getGestor_Artigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, (Gestor_Transportadoras) null, menu0);
      vintage0.existeArtigoId("O");
      Vintage vintage1 = Vintage.load();
      vintage1.filtraSapatilhasTamanho((-2544));
      Vintage vintage2 = Vintage.load();
      vintage2.filtraMalasColecao((-2544));
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras((Gestor_Transportadoras) null);
      Menu menu1 = new Menu();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Map<Long, Transportadora> map0 = gestor_Transportadoras0.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(map0);
      Gestor_Transportadoras gestor_Transportadoras2 = new Gestor_Transportadoras(gestor_Transportadoras1);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras2, menu0, 2389);
      vintage0.vendedorFacturouTempo((LocalDate) null, (LocalDate) null);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      int int0 = 1;
      vintage0.filtraMalasDimensao(1);
      vintage0.existe_transpotadoraNormal(123456L);
      vintage0.faturas_compras();
      String string0 = "66o?";
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Long long0 = new Long(123456L);
      vintage0.imprimeTransportadoraspremium();
      Period period0 = Period.of(39, 0, 0);
      Period period1 = period0.plusMonths(1L);
      IsoChronology isoChronology0 = period1.getChronology();
      Period.of((-1826), 0, 0);
      ZoneOffset zoneOffset0 = ZoneOffset.of("Y7qWT(+V+#BtI5Cj!");
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      vintage0.finalizarEncomendaPorId(long0, localDate0);
      Padrao padrao0 = Padrao.riscas;
      vintage0.filtraTshirtsPadrao(padrao0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Map<Long, Transportadora> map0 = gestor_Transportadoras0.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(map0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras1, menu0, (-1423));
      Boolean boolean0 = Boolean.valueOf(false);
      vintage0.filtraSapatilhasNovo(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      vintage0.povoamento();
      vintage0.faturas_venda();
      int int0 = 10;
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      Map<Long, Utilizador> map0 = gestor_Utilizadores1.getUtilizadores();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Map<String, Long> map1 = gestor_Utilizadores1.getIdUtilizadores();
      Gestor_Utilizadores gestor_Utilizadores2 = new Gestor_Utilizadores(map0, hashMap0, map1);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores2, gestorEncomendas0, gestor_Transportadoras0, menu0);
      vintage0.getData();
      gestor_Utilizadores1.finalizaEncomenda(0L, (LocalDate) null);
      int int0 = 0;
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Map<Long, Utilizador> map0 = gestor_Utilizadores0.getUtilizadores();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Map<String, Long> map1 = gestor_Utilizadores0.getIdUtilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(map0, hashMap0, map1);
      Gestor_Utilizadores gestor_Utilizadores2 = new Gestor_Utilizadores(gestor_Utilizadores1);
      vintage0.setGestor_Utilizadores(gestor_Utilizadores2);
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasVendas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Vintage.load();
      String string0 = "sU}<pQ.jA4e8OT";
      try { 
        vintage0.artigoDisponivel("sU}<pQ.jA4e8OT");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo sU}<pQ.jA4e8OT n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      hashMap1.keySet();
      hashMap0.remove((Object) hashMap1);
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras1, menu0);
      BiFunction<Long, Object, Encomenda> biFunction0 = (BiFunction<Long, Object, Encomenda>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.replaceAll(biFunction0);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0);
      vintage0.maiorVendedor(0, localDate0, localDate0);
      long long0 = 1L;
      int int0 = (-956);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Trasportadoras();
      vintage0.todosArtigos();
      vintage0.filtraAMarcaSapatilhas("");
      vintage0.imprime1FaturaVenda(2821L);
      int int0 = 954;
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Artigo.criaCodigo();
      Vintage.load();
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.criaTshirt("*\"Fj|smX:i_m7/-", "*\"Fj|smX:i_m7/-", (-2534.12721918596), true, 2293, 2023, 2023, tamanho0, padrao0);
      long long0 = 0L;
      vintage0.existe_transpotadoraPremium(long0);
      vintage0.getUtilizador();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionarArtigoCarrinho("+Zjd<^`s-");
      long long0 = 4843L;
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Utilizadores();
      // Undeclared exception!
      try { 
        vintage0.getGestor_Artigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existeIdUtilizador(1L);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existeIdUtilizador(0L);
      vintage0.getGestor_Trasportadoras();
      vintage0.todosArtigos();
      vintage0.filtraAMarcaSapatilhas("");
      vintage0.imprime1FaturaVenda(2821L);
      int int0 = 954;
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getUtilizador();
      LocalDate localDate0 = vintage0.getData();
      int int0 = 25;
      vintage0.vendedorMaior(25, localDate0, localDate0);
      String string0 = "oA@%6";
      try { 
        vintage0.artigoIndisponivel("oA@%6");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo oA@%6 n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = "";
      Padrao padrao0 = Padrao.liso;
      vintage0.filtraTshirtsPadrao(padrao0);
      long long0 = 0L;
      FormatStyle formatStyle0 = FormatStyle.MEDIUM;
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ofLocalizedDateTime(formatStyle0);
      // Undeclared exception!
      try { 
        MockLocalDate.parse((CharSequence) "", dateTimeFormatter0);
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // Text '' could not be parsed at index 0
         //
         verifyException("java.time.format.DateTimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.todosArtigos();
      vintage0.existeTranspotadora((-2740L));
      int int0 = 2218;
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      Artigo.contador = (long) 2218;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      vintage0.maiorVendedor(2218, localDate0, localDate0);
      vintage0.imprimeCarrinho();
      int int1 = 2672;
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getUtilizador();
      LocalDate localDate0 = vintage0.getData();
      int int0 = 0;
      vintage0.vendedorMaior(0, localDate0, localDate0);
      String string0 = "oA@36";
      try { 
        vintage0.artigoIndisponivel("oA@36");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo oA@36 n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadorasNormais();
      Tamanho tamanho0 = Tamanho.M;
      vintage0.filtraTshirtsTamanho(tamanho0);
      Long long0 = new Long((-2508L));
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_INSTANT;
      Long.remainderUnsigned((-2508L), (-2508L));
      TemporalQuery<Integer>[] temporalQueryArray0 = (TemporalQuery<Integer>[]) Array.newInstance(TemporalQuery.class, 9);
      temporalQueryArray0[0] = (TemporalQuery<Integer>) temporalQueryArray0;
      temporalQueryArray0[1] = temporalQueryArray0[0];
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraTshirtsMarca("");
      int int0 = (-2010);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds((-1093), (-1093), (-1093));
      Clock clock0 = MockClock.tickMinutes(zoneOffset0);
      // Undeclared exception!
      try { 
        MockLocalDate.now(clock0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset hours not in valid range: value -1093 is not in the range -18 to 18
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.criaSapatilha("m~k ZI0F0C", "m6E7k|9h30V", 0.0, true, 2672, 80, (Long) null, 2672, false, "N\u00E3o h\u00E1 vendedores", 3204, false, 2132.6);
      vintage0.removerTodosArtigosCarrinho();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Artigo.criaCodigo();
      Vintage.load();
      vintage0.VintageFaturou();
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.criaTshirt("*\"Fj|smX:i_m7/-", "*\"Fj|smX:i_m7/-", (-2534.12721918596), true, 2293, 2023, 2023, tamanho0, padrao0);
      long long0 = 0L;
      vintage0.existe_transpotadoraPremium(long0);
      vintage0.getUtilizador();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2049L);
      vintage0.compradorMaior(0, localDate0, localDate0);
      Vintage.load();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.todosArtigos();
      vintage0.existe_transpotadoraPremium((-2731L));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      int int0 = 2218;
      Long long0 = new Long(0L);
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1), 25);
      vintage0.comprarArtigo(long0, "", localDate0);
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      Artigo.contador = (long) 2218;
      LocalDate localDate1 = MockLocalDate.now((ZoneId) zoneOffset0);
      vintage0.maiorVendedor(2218, localDate1, localDate1);
      vintage0.imprimeCarrinho();
      String string0 = vintage0.imprimeFaturasVendas();
      vintage0.getGestor_Trasportadoras();
      vintage0.filtraAMarcaSapatilhas(string0);
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = false;
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = "+Eh07^%gTFQ=!u;";
      long long0 = 0L;
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.setData(localDate0);
      // Undeclared exception!
      try { 
        vintage0.tamanhoEncomenda(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte) (-29);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5 - Avan\u00E7ar tempo");
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadorasNormais();
      Tamanho tamanho0 = Tamanho.M;
      String string0 = vintage0.filtraTshirtsTamanho(tamanho0);
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_INSTANT;
      Long.remainderUnsigned((-2508L), (-2508L));
      TemporalQuery<Integer>[] temporalQueryArray0 = (TemporalQuery<Integer>[]) Array.newInstance(TemporalQuery.class, 9);
      temporalQueryArray0[1] = temporalQueryArray0[0];
      temporalQueryArray0[2] = temporalQueryArray0[1];
      temporalQueryArray0[3] = temporalQueryArray0[2];
      temporalQueryArray0[4] = temporalQueryArray0[3];
      temporalQueryArray0[5] = temporalQueryArray0[4];
      temporalQueryArray0[6] = temporalQueryArray0[5];
      temporalQueryArray0[7] = temporalQueryArray0[6];
      temporalQueryArray0[8] = temporalQueryArray0[7];
      dateTimeFormatter0.parseBest("", temporalQueryArray0);
      MockLocalDate.parse((CharSequence) string0, dateTimeFormatter0);
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      vintage0.filtraMalasNovo(boolean1);
      int int0 = 7;
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = Vintage.load();
      gestor_Transportadoras0.formulasDisponiveis();
      Boolean boolean0 = new Boolean("T><TE3HM:f");
      vintage0.filtraTshirtsNovo(boolean0);
      Boolean boolean1 = new Boolean(false);
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Map<Long, Encomenda> map0 = gestorEncomendas0.getEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(map0);
      GestorEncomendas gestorEncomendas2 = new GestorEncomendas(gestorEncomendas1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, (Gestor_Utilizadores) null, gestorEncomendas2, gestor_Transportadoras1, menu0, 2023);
      vintage0.artigoIndisponivel("Registo com sucesso!");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = new Vintage();
      vintage0.imprimeFormulasNormais();
      Gestor_Artigos.setTaxaUsado((-2031.192));
      vintage0.artigoID("");
      long long0 = 1163L;
      int int0 = (-142);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      Boolean boolean0 = Boolean.TRUE;
      vintage0.criaMala((String) null, "Azul", 0.9, false, (-1431655764), 1526, (-1431655764), 2021, "Azul", (-1431655764), boolean0, 1526);
      long long0 = 995L;
      vintage0.existe_transpotadoraNormal(long0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Month month0 = Month.JANUARY;
      vintage0.getGestor_Encomendas();
      int int0 = 0;
      LocalDate localDate0 = MockLocalDate.of(73, month0, 0);
      vintage0.setData(localDate0);
      vintage0.VintageFaturou();
      vintage0.imprimeFaturasCompras();
      String string0 = "T-_kC";
      Long long0 = new Long(int0);
      // Undeclared exception!
      try { 
        Long.getLong(string0, long0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for DayOfMonth (valid values 1 - 28/31): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras1, menu0);
      vintage0.adicionaUtilizador((String) null, "Guess", (String) null, 2268L, (String) null);
      Tamanho tamanho0 = Tamanho.S;
      vintage0.filtraTshirtsTamanho(tamanho0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Long long0 = new Long(0L);
      vintage0.criaSapatilha("4 - Padr\u00E3o", "4 - Padr\u00E3o", 1.0, true, 2218, (-1273), long0, (-1273), true, "4 - Padr\u00E3o", 2218, false, (-1273));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Artigo.setCodigo("Email n\u00E3o existe!");
      vintage0.imprimeFormulasNormais();
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      vintage0.ColocarVenderTshit((-1L), (LocalDate) null, "2", "Email n\u00E3o existe!", (-393.86196131), false, 1, 1, 1074L, tamanho0, padrao0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Tamanho tamanho0 = Tamanho.M;
      vintage0.filtraTshirtsTamanho(tamanho0);
      vintage0.existeEmail("");
      Period period0 = Period.ZERO;
      Period period1 = period0.normalized();
      IsoChronology isoChronology0 = period1.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.verificaPassword("Braga", "");
      vintage0.getUtilizador();
      vintage0.setData(localDate0);
      vintage0.TransportadoraMaiorVolume();
      long long0 = 3615L;
      Long long1 = new Long(long0);
      long long2 = 1L;
      // Undeclared exception!
      try { 
        vintage0.tamanhoEncomenda(long2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalOr(false, true);
      Boolean.getBoolean((String) null);
      vintage0.filtraMalasNovo(boolean0);
      Vintage vintage1 = new Vintage(vintage0);
      long long0 = 2279L;
      vintage0.encomendasEmitidasVendedor(long0);
      EvoSuiteFile evoSuiteFile0 = null;
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = "m~k ZI0F0C";
      String string1 = "m6E7k|9h30V";
      double double0 = 0.0;
      boolean boolean0 = true;
      int int0 = 2672;
      int int1 = 80;
      Long long0 = null;
      Month month0 = Month.JUNE;
      LocalDate localDate0 = MockLocalDate.of(0, month0, 3);
      Long long1 = new Long(3);
      vintage0.ColocarvenderSapatilha(80, localDate0, "m6E7k|9h30V", "\"?YCc:RK 0W]_,fC[", 3240.394, true, 2218, 80, long1, (-2L), 25, false, "\"?YCc:RK 0W]_,fC[", 3, false, 0);
      boolean boolean1 = false;
      String string2 = "N\u00E3o h\u00E1 vendedores";
      int int2 = 3204;
      double double1 = 2132.6;
      vintage0.criaSapatilha(string0, string1, double0, boolean0, int0, int1, long0, int0, boolean1, string2, int2, boolean1, double1);
      vintage0.removerTodosArtigosCarrinho();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      mala0.getData_venda();
      vintage0.filtraMalasMaterial("A");
      vintage0.imprimeFaturasCompras();
      // Undeclared exception!
      try { 
        vintage0.povoamento();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      vintage0.imprimeFormulasNormais();
      vintage0.povoamento();
      vintage0.povoamento();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraSapatilhasCor("Transportadoras:");
      vintage0.povoamento();
      vintage0.TransportadoraMaiorVolume();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.verificaPassword("/|(mWgp b|", "/|(mWgp b|");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)53;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      vintage0.filtraTshirtsPadrao(padrao0);
      vintage0.getData();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Leves");
      vintage0.VintageFaturou();
      vintage0.imprimeTransportadoraspremium();
      vintage0.existeTranspotadora((-644L));
      vintage0.filtraMalasMaterial("1");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Map<Long, Transportadora> map0 = gestor_Transportadoras0.getTransportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(map0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas1, gestor_Transportadoras1, menu0, (-4582));
      vintage0.vendedorFacturou();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      mala0.setValorizacao(3.2F);
      LocalDate localDate0 = mala0.getData_venda();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      vintage0.filtraMalasColecao(2022);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.comprarArtigo((Long) 14L, "", localDate0);
      vintage0.imprimeFaturasVendas();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = mala0.getData_venda();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      vintage0.avancarTempo(localDate0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = "m~k ZI0F0C";
      String string1 = "m6E7k|9h30V";
      double double0 = 0.0;
      boolean boolean0 = true;
      int int0 = 2672;
      Tamanho tamanho0 = Tamanho.S;
      vintage0.filtraTshirtsTamanho(tamanho0);
      int int1 = 80;
      Long long0 = null;
      boolean boolean1 = false;
      String string2 = "N\u00E3o h\u00E1 vendedores";
      int int2 = 3204;
      Clock clock0 = MockClock.systemDefaultZone();
      ChronoUnit chronoUnit0 = ChronoUnit.MINUTES;
      Duration duration0 = Duration.of(0L, chronoUnit0);
      Clock clock1 = MockClock.offset(clock0, duration0);
      LocalDate localDate0 = MockLocalDate.now(clock1);
      vintage0.ColocarvenderSapatilha(2672, localDate0, "", "p'H@ESY:+OSjN]", 1481.5550563, true, 4, 4, (Long) null, 0L, 2672, true, "", 80, false, 0.0);
      double double1 = 2132.6;
      vintage0.criaSapatilha(string0, string1, double0, boolean0, int0, int1, long0, int0, boolean1, string2, int2, boolean1, double1);
      vintage0.removerTodosArtigosCarrinho();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeFormulasNormais();
      vintage0.povoamento();
      vintage0.filtraMalasColecao(4246);
      vintage0.imprimeFaturasCompras();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = mala0.getData_venda();
      vintage0.imprimeTransportadorasNormais();
      int int0 = 4098;
      String string0 = "qSQCO@N()%R8";
      vintage0.ColocarVenderMala(3L, localDate0, "A", "", 0.0, true, 4098, 4098, (-209L), 0, "qSQCO@N()%R8", 4098, true, 3L);
      vintage0.povoamento();
      vintage0.avancarTempo(localDate0);
      String string1 = "Puma";
      String string2 = "";
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      HashMap<Long, Encomenda> hashMap4 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap4);
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas1, gestor_Transportadoras1, menu0);
      vintage0.vendedorFacturou();
      Period period0 = Period.ZERO;
      Period period1 = period0.normalized();
      period1.getChronology();
      vintage0.getData();
      Gestor_Transportadoras gestor_Transportadoras2 = new Gestor_Transportadoras(gestor_Transportadoras1);
      Gestor_Transportadoras gestor_Transportadoras3 = new Gestor_Transportadoras(gestor_Transportadoras2);
      Long long0 = new Long(3615L);
      Vintage vintage1 = Vintage.load();
      vintage1.imprime1FaturaCompra(1122L);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Period period0 = Period.ofDays(2245);
      period0.plusMonths(2245);
      Long.toUnsignedString((long) 2245);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Artigo.contador = (long) 2245;
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      vintage0.ColocarVenderMala(3773L, localDate0, "", "", 2245, true, 1916, 0, (-2L), 2064, "bf.E#ng?yHqlRuP.cK", 2064, false, 0.0F);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.todosArtigos();
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = Boolean.TRUE;
      vintage0.imprimeTransportadoraspremium();
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      vintage0.removerTodosArtigosCarrinho();
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.imprimeTransportadoras();
      vintage0.imprimeFormulas();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Period period0 = Period.ofDays(2245);
      period0.plusMonths(2245);
      Long.toUnsignedString((long) 2245);
      IsoChronology isoChronology0 = period0.getChronology();
      MockIsoChronology.dateNow(isoChronology0);
      Artigo.contador = (long) 2245;
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      vintage0.existeTranspotadora(0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.maiorVendedor((byte) (-65), localDate0, localDate0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeFormulasNormais();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.encomendasDevolvidas();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.imprimeCarrinho();
      vintage0.getGestor_Encomendas();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      Boolean boolean0 = Boolean.valueOf("");
      Boolean.logicalAnd(true, false);
      vintage0.criaMala("", "", 0.0, false, 29, (byte) (-65), 0L, 2655, "", (byte) (-65), boolean0, (byte) (-65));
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      vintage0.criaTshirt("", "A", 260.031300601, false, (-1868), 3204, (-2349L), tamanho0, padrao0);
      vintage0.filtraMalasMaterial("0=;W/v)$@8@j\"i?e");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      HashMap<Long, Encomenda> hashMap2 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap2);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Gestor_Transportadoras gestor_Transportadoras1 = new Gestor_Transportadoras(gestor_Transportadoras0);
      Map<Long, Transportadora> map1 = gestor_Transportadoras1.getTransportadoras();
      HashMap<Long, Transportadora> hashMap3 = new HashMap<Long, Transportadora>(map1);
      Gestor_Transportadoras gestor_Transportadoras2 = new Gestor_Transportadoras(hashMap3);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras2, menu0);
      vintage0.existe_transpotadoraNormal((-2L));
      vintage0.getUtilizador();
      vintage0.filtraTshirtsMarca("");
      System.setCurrentTimeMillis(1539L);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      SystemInUtil.addInputLine("");
      byteArray0[0] = (byte) (-52);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.vendedorMaior((byte) (-52), localDate0, localDate0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getUtilizador();
      LocalDate localDate0 = vintage0.getData();
      int int0 = 25;
      vintage0.povoamento();
      vintage0.vendedorMaior(25, localDate0, localDate0);
      vintage0.avancarTempo(localDate0);
      String string0 = "oA@%6";
      try { 
        vintage0.artigoIndisponivel("oA@%6");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo oA@%6 n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.imprimeTransportadorasNormais();
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean("0=;W/v)$@8@j\"i?e");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.faturas_compras();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador(2655, localDate0, localDate0);
      vintage0.maiorVendedor(2655, localDate0, localDate0);
      vintage0.povoamento();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      byte[] byteArray0 = new byte[1];
      SystemInUtil.addInputLine("");
      byteArray0[0] = (byte) (-52);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Boolean boolean0 = new Boolean(";:tOO");
      vintage0.filtraSapatilhasNovo(boolean0);
      vintage0.vendedorFacturouTempo(localDate0, localDate0);
      vintage0.maiorComprador((byte) (-52), localDate0, localDate0);
      vintage0.existe_transpotadoraNormal(1L);
      vintage0.imprimeFaturasVendas();
  }
}
