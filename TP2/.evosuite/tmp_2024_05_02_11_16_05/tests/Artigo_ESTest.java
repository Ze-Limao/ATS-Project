/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 10:48:28 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertNull(tshirt0.getPadrao());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertNull(tshirt0.getPadrao());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertNull(tshirt1.getPadrao());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getTamanho());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt1);
      
      tshirt1.setVendedor(2L);
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertNull(tshirt0.getPadrao());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getTamanho());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertFalse(boolean0);
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertNull(tshirt0.getPadrao());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getTamanho());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      sapatilha1.setN_utilizadores(1436);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(1436, sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(boolean0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(1436, sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      sapatilha1.setEstado_uso(1610612736);
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(1610612736, sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(1610612736, sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = (Sapatilha)sapatilha0.clone();
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha1.getNovo());
      assertEquals("", sapatilha1.getCor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      sapatilha1.setPreco_base((-1.0));
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha1.getNovo());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1.0), sapatilha1.getPreco_base(), 0.01);
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(boolean0);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha1.getNovo());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1.0), sapatilha1.getPreco_base(), 0.01);
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      mala0.setVendedor(1045L);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1045L, mala0.getIdVendedor());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-4053L));
      assertEquals((-4053L), (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt(" Valoriza\u00E7\u00E3o: ", " Valoriza\u00E7\u00E3o: ", 2192.2080874534804, true, 0, 0, long0, long0, tamanho0, padrao0);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(2192.2080874534804, tshirt0.getPreco_base(), 0.01);
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getDescricao());
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals((-4053L), tshirt0.getIdTransportadora());
      assertEquals(2L, tshirt0.getContador());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-4053L), tshirt0.getIdVendedor());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      String string0 = tshirt0.toString();
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o:  Valoriza\u00E7\u00E3o:  Marca:  Valoriza\u00E7\u00E3o:  Pre\u00E7o base: 2192.2080874534804 Novo: true Estado de uso: 0 N\u00FAmero de utilizadores: 0 Disponivel: true Id da transportadora: -4053 Id do vendedor: -4053 } Tamanho: L Padr\u00E3o: riscas}", string0);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(2192.2080874534804, tshirt0.getPreco_base(), 0.01);
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getDescricao());
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals((-4053L), tshirt0.getIdTransportadora());
      assertEquals(2L, tshirt0.getContador());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-4053L), tshirt0.getIdVendedor());
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      double double0 = sapatilha0.preco_atual(localDate0);
      assertEquals(0.01, double0, 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      mala0.setPreco_base(2L);
      assertEquals(2.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      
      double double0 = mala0.getPreco_base();
      assertEquals(2.0, double0, 0.01);
      assertEquals(2.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      mala0.setPreco_base((-1L));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      
      double double0 = mala0.getPreco_base();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      tshirt0.setNovo(true);
      assertTrue(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt0.getNovo();
      assertTrue(boolean0);
      assertTrue(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 587.6183159, false, 0, 3, long0, long0, tamanho0, padrao0);
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals(3, tshirt0.getN_utilizadores());
      assertEquals("", tshirt0.getMarca());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(Tamanho.XL, tshirt0.getTamanho());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(587.6183159, tshirt0.getPreco_base(), 0.01);
      assertEquals("", tshirt0.getDescricao());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      int int0 = tshirt0.getN_utilizadores();
      assertEquals(3, int0);
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals(3, tshirt0.getN_utilizadores());
      assertEquals("", tshirt0.getMarca());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(Tamanho.XL, tshirt0.getTamanho());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(587.6183159, tshirt0.getPreco_base(), 0.01);
      assertEquals("", tshirt0.getDescricao());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      int int0 = sapatilha0.getN_utilizadores();
      assertEquals((-1), int0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      String string0 = mala0.getMarca();
      assertEquals("Artigo invalido", string0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      tshirt0.setVendedor(2L);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getIdVendedor());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      
      long long0 = tshirt0.getIdVendedor();
      assertEquals(2L, long0);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getIdVendedor());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      long long0 = mala0.getIdVendedor();
      assertEquals((-1L), long0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long(235L);
      assertEquals(235L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt(" Cor: ", "[TM[v,=X4", 0.5, false, (-3571), (-3571), long0, long0, tamanho0, padrao0);
      assertEquals("[TM[v,=X4", tshirt0.getMarca());
      assertEquals(235L, tshirt0.getIdTransportadora());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.5, tshirt0.getPreco_base(), 0.01);
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-3571), tshirt0.getEstado_uso());
      assertEquals((-3571), tshirt0.getN_utilizadores());
      assertEquals(235L, tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(" Cor: ", tshirt0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      long long1 = tshirt0.getIdTransportadora();
      assertEquals(235L, long1);
      assertEquals("[TM[v,=X4", tshirt0.getMarca());
      assertEquals(235L, tshirt0.getIdTransportadora());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.5, tshirt0.getPreco_base(), 0.01);
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-3571), tshirt0.getEstado_uso());
      assertEquals((-3571), tshirt0.getN_utilizadores());
      assertEquals(235L, tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(" Cor: ", tshirt0.getDescricao());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      long long0 = sapatilha0.getIdTransportadora();
      assertEquals((-1L), long0);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("gSU2*lo ", "{ogjB?o97&,mOC", 0.0, false, 0, (-731), long0, long0, tamanho0, padrao0);
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-731), tshirt0.getN_utilizadores());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("{ogjB?o97&,mOC", tshirt0.getMarca());
      assertEquals("gSU2*lo ", tshirt0.getDescricao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      int int0 = tshirt0.getEstado_uso();
      assertEquals(0, int0);
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-731), tshirt0.getN_utilizadores());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("{ogjB?o97&,mOC", tshirt0.getMarca());
      assertEquals("gSU2*lo ", tshirt0.getDescricao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      tshirt0.setEstado_uso(2);
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2, tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals(2L, Artigo.contador);
      
      int int0 = tshirt0.getEstado_uso();
      assertEquals(2, int0);
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2, tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double(2L);
      assertEquals(2.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Sapatilha sapatilha0 = new Sapatilha("M", "M", double0, true, (-2638), (-2638), (Long) 0L, (Long) 0L, (-2638), true, "M", 3312, false, 0.0);
      assertFalse(sapatilha0.isPremium());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(3312, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-2638), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-2638), sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-2638), sapatilha0.getTamanho());
      assertEquals(2.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("M", sapatilha0.getCor());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("M", sapatilha0.getDescricao());
      assertEquals("M", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      boolean boolean0 = sapatilha0.getDisponivel();
      assertTrue(boolean0);
      assertFalse(sapatilha0.isPremium());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(3312, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-2638), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-2638), sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-2638), sapatilha0.getTamanho());
      assertEquals(2.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("M", sapatilha0.getCor());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("M", sapatilha0.getDescricao());
      assertEquals("M", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      String string0 = tshirt0.getDescricao();
      assertEquals("Artigo invalido", string0);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      tshirt0.setData_venda((LocalDate) null);
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = tshirt0.getData_venda();
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Artigo.setContador((-283L));
      long long0 = Artigo.getContador();
      assertEquals((-283L), long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      sapatilha0.setPreco_base((-266.79994409817));
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-266.79994409817), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, Artigo.contador);
      
      Sapatilha sapatilha1 = (Sapatilha)sapatilha0.clone();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-266.79994409817), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-266.79994409817), sapatilha1.getPreco_base(), 0.01);
      assertFalse(sapatilha1.isPremium());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("", sapatilha1.getCor());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      mala0.setN_utilizadores(1057);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(1057, mala0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = (Mala)mala0.clone();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(1057, mala0.getN_utilizadores());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(1057, mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("A", "A", 3L, true, (-1637), (-1637), (Long) 3L, long0, tamanho0, padrao0);
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(3L, tshirt0.getIdTransportadora());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getDescricao());
      assertEquals((-1637), tshirt0.getEstado_uso());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getMarca());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1637), tshirt0.getN_utilizadores());
      assertEquals(3.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      Tshirt tshirt1 = (Tshirt)tshirt0.clone();
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(3L, tshirt0.getIdTransportadora());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getDescricao());
      assertEquals((-1637), tshirt0.getEstado_uso());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getMarca());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1637), tshirt0.getN_utilizadores());
      assertEquals(3.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertTrue(tshirt1.getNovo());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(3L, tshirt1.getIdTransportadora());
      assertEquals(Tamanho.L, tshirt1.getTamanho());
      assertEquals(2L, tshirt1.getContador());
      assertTrue(tshirt1.getDisponivel());
      assertEquals(0L, tshirt1.getIdVendedor());
      assertEquals("A", tshirt1.getMarca());
      assertEquals(3.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-1637), tshirt1.getN_utilizadores());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt1.getPadrao());
      assertEquals("A", tshirt1.getDescricao());
      assertEquals((-1637), tshirt1.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(tshirt1.equals((Object)tshirt0));
      assertNotNull(tshirt1);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      tshirt0.setTransportadora(0L);
      assertNull(tshirt0.getTamanho());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = (Tshirt)tshirt0.clone();
      assertNull(tshirt0.getTamanho());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals("A", tshirt1.getCodigo());
      assertNull(tshirt1.getTamanho());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getDisponivel());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertFalse(tshirt1.getNovo());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals(0L, tshirt1.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt1);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("A", "A", 3L, true, (-1637), (-1637), (Long) 3L, (Long) sapatilha0.contador, tamanho0, padrao0);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(3L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getDescricao());
      assertEquals((-1637), tshirt0.getEstado_uso());
      assertTrue(tshirt0.getNovo());
      assertEquals(3.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1637), tshirt0.getN_utilizadores());
      assertEquals(3L, tshirt0.getContador());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(3L, tshirt0.getIdTransportadora());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotNull(tshirt0);
      
      Tshirt tshirt1 = (Tshirt)tshirt0.clone();
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(3L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getDescricao());
      assertEquals((-1637), tshirt0.getEstado_uso());
      assertTrue(tshirt0.getNovo());
      assertEquals(3.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1637), tshirt0.getN_utilizadores());
      assertEquals(3L, tshirt0.getContador());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(3L, tshirt0.getIdTransportadora());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(3L, tshirt1.getIdTransportadora());
      assertEquals(Tamanho.L, tshirt1.getTamanho());
      assertTrue(tshirt1.getNovo());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals((-1637), tshirt1.getN_utilizadores());
      assertEquals("A2", tshirt1.getCodigo_barras());
      assertEquals((-1637), tshirt1.getEstado_uso());
      assertEquals(Padrao.liso, tshirt1.getPadrao());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertEquals("A", tshirt1.getDescricao());
      assertEquals(3.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A", tshirt1.getMarca());
      assertEquals(3L, tshirt1.getContador());
      assertTrue(tshirt1.getDisponivel());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(tshirt1.equals((Object)tshirt0));
      assertNotNull(tshirt1);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      mala0.setEstado_uso(10);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = (Mala)mala0.clone();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Artigo.setContador((-1L));
      Mala mala0 = new Mala();
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A-1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0L, Artigo.contador);
      assertNotNull(mala0);
      
      Mala mala1 = (Mala)mala0.clone();
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A-1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A-1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Long long0 = new Long((-4053L));
      assertEquals((-4053L), (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt(" Valoriza\u00E7\u00E3o: ", " Valoriza\u00E7\u00E3o: ", 2192.2080874534804, true, 0, 0, long0, long0, tamanho0, padrao0);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals((-4053L), tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-4053L), tshirt0.getIdVendedor());
      assertEquals(2192.2080874534804, tshirt0.getPreco_base(), 0.01);
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getDescricao());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getMarca());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      Tshirt tshirt1 = (Tshirt)tshirt0.clone();
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals((-4053L), tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-4053L), tshirt0.getIdVendedor());
      assertEquals(2192.2080874534804, tshirt0.getPreco_base(), 0.01);
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getDescricao());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt0.getMarca());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals(2L, tshirt1.getContador());
      assertEquals(0, tshirt1.getN_utilizadores());
      assertEquals((-4053L), tshirt1.getIdVendedor());
      assertEquals(Padrao.riscas, tshirt1.getPadrao());
      assertEquals(0, tshirt1.getEstado_uso());
      assertEquals(2192.2080874534804, tshirt1.getPreco_base(), 0.01);
      assertEquals(Tamanho.L, tshirt1.getTamanho());
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt1.getMarca());
      assertEquals(" Valoriza\u00E7\u00E3o: ", tshirt1.getDescricao());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertTrue(tshirt1.getNovo());
      assertTrue(tshirt1.getDisponivel());
      assertEquals((-4053L), tshirt1.getIdTransportadora());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(tshirt1.equals((Object)tshirt0));
      assertNotNull(tshirt1);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      Artigo.setContador((-1L));
      Mala mala1 = (Mala)mala0.clone();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getContador());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1L), mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), Artigo.contador);
      assertEquals((-1L), Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Mala mala0 = new Mala();
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      mala0.setData_venda((LocalDate) null);
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      
      // Undeclared exception!
      try { 
        mala0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      Period period0 = Period.of((-587), (-587), (-8323580));
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      // Undeclared exception!
      try { 
        tshirt0.preco_atual(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertNotNull(localDate0);
      
      Tshirt tshirt0 = new Tshirt();
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getTamanho());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertFalse(tshirt0.getNovo());
      assertEquals(3L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(3L, Artigo.contador);
      assertNotNull(tshirt0);
      
      // Undeclared exception!
      try { 
        tshirt0.mostrar(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", 587.6183159, false, 0, 3, long0, long0, tamanho0, padrao0);
      assertEquals("", tshirt0.getDescricao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(Tamanho.XL, tshirt0.getTamanho());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(3, tshirt0.getN_utilizadores());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals("", tshirt0.getMarca());
      assertEquals(587.6183159, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      long long1 = tshirt0.getIdTransportadora();
      assertEquals(0L, long1);
      assertEquals("", tshirt0.getDescricao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(Tamanho.XL, tshirt0.getTamanho());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(3, tshirt0.getN_utilizadores());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals("", tshirt0.getMarca());
      assertEquals(587.6183159, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Double double0 = new Double((-356.9474642889));
      assertEquals((-356.9474642889), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("XL", "XL", double0, true, 0, 0, long0, long0, 0, false, " \u0001", 0, false, (-356.9474642889));
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-356.9474642889), sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals("XL", sapatilha0.getDescricao());
      assertEquals(" \u0001", sapatilha0.getCor());
      assertEquals((-356.9474642889), sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("XL", sapatilha0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      long long1 = sapatilha0.getIdVendedor();
      assertEquals(0L, long1);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-356.9474642889), sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals("XL", sapatilha0.getDescricao());
      assertEquals(" \u0001", sapatilha0.getCor());
      assertEquals((-356.9474642889), sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("XL", sapatilha0.getMarca());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Double double0 = new Double(1450.64557);
      assertEquals(1450.64557, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(1277L);
      assertEquals(1277L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, (-1), (-987), long0, long0, (-1), false, "", (-1), true, 781.816444136);
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(1450.64557, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(781.816444136, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1), sapatilha0.getAnoColecao());
      assertEquals((-987), sapatilha0.getN_utilizadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(1277L, sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(1277L, sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      String string0 = sapatilha0.getMarca();
      assertEquals("", string0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(1450.64557, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(781.816444136, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1), sapatilha0.getAnoColecao());
      assertEquals((-987), sapatilha0.getN_utilizadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getMarca());
      assertEquals(1277L, sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(1277L, sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      String string0 = mala0.getCodigo_barras();
      assertEquals("A1", string0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Double double0 = new Double(1.0);
      assertEquals(1.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-1L));
      assertEquals((-1L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("A", "h#4@", double0, false, (-764), 0, long0, long0, 0, false, " C\u00F3digo de barras: ", (-764), false, (-764));
      assertEquals((-764.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(" C\u00F3digo de barras: ", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-764), sapatilha0.getAnoColecao());
      assertEquals((-764), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("h#4@", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      int int0 = sapatilha0.getN_utilizadores();
      assertEquals(0, int0);
      assertEquals((-764.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(" C\u00F3digo de barras: ", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-764), sapatilha0.getAnoColecao());
      assertEquals((-764), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("h#4@", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      int int0 = tshirt0.getEstado_uso();
      assertEquals((-1), int0);
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala((String) null, " Data de venda: ", double0, false, (-2587), (-3370), long0, long0, (-717), " Data de venda: ", 0, true, (-717));
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(" Data de venda: ", mala0.getMaterial());
      assertEquals((-717), mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(" Data de venda: ", mala0.getMarca());
      assertNull(mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-3370), mala0.getN_utilizadores());
      assertEquals((-2587), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals((-717.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      String string0 = mala0.getDescricao();
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(" Data de venda: ", mala0.getMaterial());
      assertEquals((-717), mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(" Data de venda: ", mala0.getMarca());
      assertNull(mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-3370), mala0.getN_utilizadores());
      assertEquals((-2587), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals((-717.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(tshirt0);
      
      boolean boolean0 = tshirt0.getDisponivel();
      assertFalse(boolean0);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      boolean boolean0 = mala0.getNovo();
      assertFalse(boolean0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      double double0 = mala0.getPreco_base();
      assertEquals(0.0, double0, 0.01);
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotNull(mala0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      mala0.setData_venda(localDate0);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.mostrar(localDate0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 Data de venda: 2014-02-14 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", string0);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      sapatilha0.setDisponivel(true);
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      
      Artigo.contador = 0L;
      String string0 = Artigo.criaCodigo();
      assertEquals("A0", string0);
      assertNotNull(string0);
      
      Sapatilha sapatilha1 = new Sapatilha();
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      sapatilha1.setVendedor(2L);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(2L, sapatilha1.getIdVendedor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(boolean0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(2L, sapatilha1.getIdVendedor());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      sapatilha1.setN_utilizadores(0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      sapatilha1.setEstado_uso(0);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getEstado_uso());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(boolean0);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getEstado_uso());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      
      sapatilha0.setNovo(true);
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertNotSame(sapatilha0, sapatilha1);
      
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertFalse(boolean0);
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setPreco_base(2L);
      boolean boolean0 = mala1.equals(mala0);
      assertEquals(2.0, mala1.getPreco_base(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      assertEquals("Artigo invalido", mala0.getMarca());
      
      mala0.setMarca("A");
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala0.setDescricao("!$l7Y\u0005>r]TH");
      boolean boolean0 = mala1.equals(mala0);
      assertEquals("!$l7Y\u0005>r]TH", mala0.getDescricao());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertTrue(sapatilha0.equals((Object)sapatilha1));
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      assertEquals((-1L), mala0.getIdTransportadora());
      
      mala0.setTransportadora(2L);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      
      sapatilha0.setCodigo_barras("A");
      assertEquals((-1L), sapatilha0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = Artigo.getCodigo();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt1 = new Tshirt("$VALUES", "$VALUES", 3L, true, 2727, 2727, (Long) tshirt0.contador, (Long) 3L, tamanho0, padrao0);
      tshirt0.equals(tshirt1);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setPreco_atual((-2398.7F));
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Artigo.setCodigo("d{ZN|M]O>=9iTp1[\"a");
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      long long0 = Artigo.getContador();
      assertEquals(1L, long0);
  }
}
