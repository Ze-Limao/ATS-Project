/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 18:52:47 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Artigo;
import Model.Sapatilhas;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sapatilhas_ESTest extends Sapatilhas_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "|*", localDate0, sapatilhas_Tipos_Sapatilhas0, "|*", artigo_Estado0, (-1639), artigo_Avaliacao0, "|*", "\n", "Quv*\"_YU4P", (-2988.0), 0, "Model.Sapatilhas");
      LocalDate localDate1 = MockLocalDate.now();
      double double0 = sapatilhas0.precoFinal(localDate1);
      assertEquals((-134460.0), double0, 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("|*", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Period period0 = Period.of(45, 45, 45);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(45, false, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, (-1362), artigo_Avaliacao0, "", "", "", (-273.057205), (-1012.27), "");
      String string0 = sapatilhas0.toString(localDate0);
      assertEquals("ID: 1\nTipo: \nEstado: USADO\nN\u00FAmero de Donos: -1362\nAvaliacao: SATISFATORIO\nDescri\u00E7\u00E3o: \nMarca: \nC\u00F3digo: \nPre\u00E7o Base: -273.057205\nCorre\u00E7\u00E3o do Pre\u00E7o: -1012.27\nTransportadora: \nTamanho Numerico: 45\nAtilhos: false\nCor: \nData de Lancamento: 2014-02-14\nTipo de Sapatilhas: NORMAL\nPreco Final: -689628.927205\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      sapatilhas1.setTamanhoNumerico(1029);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals(1029, sapatilhas1.getTamanhoNumerico());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.getTiposSapatilhas();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Period period0 = Period.ofWeeks(2);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(2, false, (String) null, localDate0, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, (-1674), artigo_Avaliacao0, (String) null, (String) null, (String) null, (-1674), 2, (String) null);
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas((-1812), false, "bnQh&jTFX9u.t_Z@yNP", localDate0, sapatilhas_Tipos_Sapatilhas0, "#", artigo_Estado0, 432, artigo_Avaliacao0, "'t,[:x37JoH(=x", "", "", 2341.1111, 3200.0843332615, "");
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals((-1812), int0);
      assertEquals("bnQh&jTFX9u.t_Z@yNP", sapatilhas0.getCor());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setCor((String) null);
      sapatilhas0.getCor();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setCor("=A#6");
      sapatilhas0.getCor();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertFalse(sapatilhas0.getAtilhos());
      
      sapatilhas0.setAtilhos(true);
      boolean boolean0 = sapatilhas0.getAtilhos();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas((-1812), false, "bnQh&jTFX9u.t_Z@yNP", localDate0, sapatilhas_Tipos_Sapatilhas0, "#", artigo_Estado0, 432, artigo_Avaliacao0, "'t,[:x37JoH(=x", "", "", 2341.1111, 3200.0843332615, "");
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals("bnQh&jTFX9u.t_Z@yNP", sapatilhas1.getCor());
      assertEquals((-1812), sapatilhas0.getTamanhoNumerico());
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      assertEquals((-1812), sapatilhas1.getTamanhoNumerico());
      assertFalse(sapatilhas1.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Period period0 = Period.ofWeeks(2);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(2, false, (String) null, localDate0, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, (-1674), artigo_Avaliacao0, (String) null, (String) null, (String) null, (-1674), 2, (String) null);
      sapatilhas0.setNumeroDonos(2);
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals(2, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setId(0);
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertFalse(sapatilhas1.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "|*", localDate0, sapatilhas_Tipos_Sapatilhas0, "|*", artigo_Estado0, (-1639), artigo_Avaliacao0, "|*", "\n", "Quv*\"_YU4P", (-2988.0), 0, "Model.Sapatilhas");
      sapatilhas0.setId((-1639));
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals("|*", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(0, 1, 1);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, 2396, artigo_Avaliacao0, "`8^.M&>R!EX.{vY:.", "Z|*1,Io+", "", 0, 1, "Z|*1,Io+");
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      assertEquals("", sapatilhas1.getCor());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Period period0 = Period.ofDays(3);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(3, false, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, 3, artigo_Avaliacao0, "", "", "!)9J|8FD(;/F9", 3, (-1.0), "OeJ,");
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals(3, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(3, sapatilhas1.getTamanhoNumerico());
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas1.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      // Undeclared exception!
      try { 
        sapatilhas0.toString((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, 0, artigo_Avaliacao0, "Y!/,{EE5amsOTa", "NOVO", "ayW2_\u0007V[,6UE", 0.0, 0.5, "Y!/,{EE5amsOTa");
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas1 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas1);
      // Undeclared exception!
      try { 
        sapatilhas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.Period", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Period period0 = Period.ofMonths(3);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, (String) null, localDate0, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, 0, artigo_Avaliacao0, (String) null, "Descri\u00E7\u00E3o: ", "Descri\u00E7\u00E3o: ", 0, 0, "q%@2");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      // Undeclared exception!
      try { 
        sapatilhas1.equals(sapatilhas0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sapatilhas sapatilhas0 = null;
      try {
        sapatilhas0 = new Sapatilhas((Sapatilhas) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.getAtilhos();
      assertFalse(boolean0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Period period0 = Period.ofWeeks(2);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(2, false, (String) null, localDate0, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, (-1674), artigo_Avaliacao0, (String) null, (String) null, (String) null, (-1674), 2, (String) null);
      sapatilhas0.getTiposSapatilhas();
      assertEquals(2, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.getCor();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      LocalDate localDate0 = sapatilhas0.getDataLancamento();
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(838, false, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, 838, artigo_Avaliacao0, "", "", "", 838, 838, "");
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(838, sapatilhas0.getTamanhoNumerico());
      assertEquals(838.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      LocalDate localDate0 = MockLocalDate.now();
      sapatilhas1.setDataLancamento(localDate0);
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertTrue(boolean0);
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertFalse(sapatilhas1.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setAtilhos(true);
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      sapatilhas0.setAtilhos(false);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(sapatilhas0.getAtilhos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Object object0 = new Object();
      boolean boolean0 = sapatilhas0.equals(object0);
      assertFalse(sapatilhas0.getAtilhos());
      assertFalse(boolean0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.equals((Object) null);
      assertFalse(sapatilhas0.getAtilhos());
      assertFalse(boolean0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.equals(sapatilhas0);
      assertFalse(sapatilhas0.getAtilhos());
      assertTrue(boolean0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setDataLancamento((LocalDate) null);
      sapatilhas0.getDataLancamento();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      sapatilhas1.setTamanhoNumerico(1029);
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertEquals(1029, sapatilhas1.getTamanhoNumerico());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setCor("N");
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(boolean0);
  }
}
