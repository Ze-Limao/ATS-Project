/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 18:56:03 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Artigo;
import Model.TShirt;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TShirt_ESTest extends TShirt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "S", artigo_Estado0, 1, artigo_Avaliacao0, "u]<dAoR'NIuf67", "]*NFe+n xX,GX@", "Transportadora: ", 0.0, 0.0, "Model.TShirt$Padrao");
      tShirt0.setPrecoBase(531.99687005);
      String string0 = tShirt0.toString((LocalDate) null);
      assertEquals("ID: 1\nTipo: S\nEstado: USADO\nN\u00FAmero de Donos: 1\nAvaliacao: SATISFATORIO\nDescri\u00E7\u00E3o: u]<dAoR'NIuf67\nMarca: ]*NFe+n xX,GX@\nC\u00F3digo: Transportadora: \nPre\u00E7o Base: 531.99687005\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: Model.TShirt$Padrao\nTamanho: L\nPadrao: RISCAS\nPre\u00E7o Final: 265.998435025\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "NfdV)Kw*NT ", artigo_Estado0, (-23), artigo_Avaliacao0, "\n", "\n", "NfdV)Kw*NT ", (-23), (-645.6155076754295), "NfdV)Kw*NT ");
      LocalDate localDate0 = MockLocalDate.now();
      tShirt0.setNumeroDonos((-23));
      double double0 = tShirt0.precoFinal(localDate0);
      assertEquals((-23.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      boolean boolean0 = tShirt0.equals(tShirt0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, (String) null, artigo_Estado0, 3, artigo_Avaliacao0, (String) null, (String) null, "", 1716.7941541004984, 1716.7941541004984, "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(3);
      double double0 = tShirt0.precoFinal(localDate0);
      assertEquals(1716.7941541004984, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      tShirt0.getTamanho();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      tShirt0.getPadrao();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, 1497, artigo_Avaliacao0, "", "BXtrEV8Y3q_a*P9m", "\"ut-HA]&Gs", 1497, 1497, "~3y7WIWDMjx");
      TShirt tShirt1 = tShirt0.clone();
      assertTrue(tShirt1.equals((Object)tShirt0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, (-4334), artigo_Avaliacao0, "G", "Oux=,EyuU$#<", "", (-4334), (-4334), "G");
      TShirt tShirt1 = tShirt0.clone();
      assertTrue(tShirt1.equals((Object)tShirt0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "S", artigo_Estado0, 0, artigo_Avaliacao0, "`DvGMywx:(<Dmc6A\fl", "g0,XMCJP8v-v", "M{3M2QJ9)[-~e}yp}Z", 0.0, 0.0, "Corre\u00E7\u00E3o do Pre\u00E7o: ");
      tShirt0.setId(0);
      TShirt tShirt1 = tShirt0.clone();
      assertTrue(tShirt1.equals((Object)tShirt0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      tShirt0.setId((-531));
      TShirt tShirt1 = tShirt0.clone();
      assertEquals("", tShirt1.getDescricao());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TShirt tShirt0 = null;
      try {
        tShirt0 = new TShirt((TShirt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "S", artigo_Estado0, 1, artigo_Avaliacao0, "u]<dAoR'NIuf67", "]*NFe+n xX,GX@", "Transportadora: ", 0.0, 0.0, "Model.TShirt$Padrao");
      double double0 = tShirt0.precoFinal((LocalDate) null);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "S", artigo_Estado0, 0, artigo_Avaliacao0, "`DvGMywx:(<Dmc6A\fl", "g0,XMCJP8v-v", "M{3M2QJ9)[-~e}yp}Z", 0.0, 0.0, "Corre\u00E7\u00E3o do Pre\u00E7o: ");
      double double0 = tShirt0.precoFinal((LocalDate) null);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "$b0ViUG8:]6", artigo_Estado0, 2, artigo_Avaliacao0, (String) null, (String) null, (String) null, 2, 474.756477, (String) null);
      TShirt.Padrao tShirt_Padrao1 = tShirt0.getPadrao();
      assertSame(tShirt_Padrao1, tShirt_Padrao0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "^V+/{DGn.@\"xZ[rP", artigo_Estado0, 0, artigo_Avaliacao0, "j4|~OT", "j4|~OT", "j4|~OT", 3366.6, 3366.6, "^V+/{DGn.@\"xZ[rP");
      TShirt.Tamanho tShirt_Tamanho1 = tShirt0.getTamanho();
      assertEquals(TShirt.Tamanho.XL, tShirt_Tamanho1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt1 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "n{", artigo_Estado0, 1342, artigo_Avaliacao0, "n{", "n{", "n{", 1342, 1342, "n{");
      boolean boolean0 = tShirt0.equals(tShirt1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "NfdV)Kw*NT ", artigo_Estado0, (-23), artigo_Avaliacao0, "\n", "\n", "NfdV)Kw*NT ", (-23), (-645.6155076754295), "NfdV)Kw*NT ");
      Object object0 = new Object();
      boolean boolean0 = tShirt0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, (-1075), artigo_Avaliacao0, "", "", "", (-1075), (-1075), "");
      boolean boolean0 = tShirt0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      TShirt tShirt1 = new TShirt(tShirt0);
      assertTrue(tShirt1.equals((Object)tShirt0));
      
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      tShirt0.setPadrao(tShirt_Padrao0);
      boolean boolean0 = tShirt1.equals(tShirt0);
      assertFalse(tShirt1.equals((Object)tShirt0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "S", artigo_Estado0, 0, artigo_Avaliacao0, "`DvGMywx:(<Dmc6A\fl", "g0,XMCJP8v-v", "M{3M2QJ9)[-~e}yp}Z", 0.0, 0.0, "Corre\u00E7\u00E3o do Pre\u00E7o: ");
      tShirt0.setTamanho(tShirt_Tamanho0);
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getTransportadora());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      TShirt tShirt1 = new TShirt();
      boolean boolean0 = tShirt1.equals(tShirt0);
      assertTrue(boolean0);
  }
}
