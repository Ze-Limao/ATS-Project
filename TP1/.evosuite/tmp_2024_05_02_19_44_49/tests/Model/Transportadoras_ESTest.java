/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 18:50:52 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Transportadoras;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transportadoras_ESTest extends Transportadoras_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 97.87191086915, 97.87191086915, true, 97.87191086915);
      Double double0 = new Double(97.87191086915);
      transportadoras0.altera(double0, double0, 4);
      Long long0 = new Long(782L);
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(4, transportadoras0.getFormula());
      assertEquals(50.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, (-3196.8), (-1436.0418), true, (-1436.0418));
      Double double0 = new Double((-1436.0418));
      transportadoras0.altera(double0, double0, (-715));
      Long long0 = new Long(0L);
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals((-715), transportadoras0.getFormula());
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("#T%h5igo", (-513.055636714854), 0.0, false, (-513.055636714854));
      Long long0 = new Long(5L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(-0.0, double0, 0.01);
      assertEquals((-513.055636714854), transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras1.setFormula(2146036556);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(2146036556, transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      assertEquals(0.0, transportadoras1.getVolFaturacao(), 0.01);
      
      transportadoras1.setVolFaturacao((-1.0));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Xf`iH^%i}F=#1\"-~/s", 0.0, 212.2221548185777, true, 0.0);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setLucro(5.0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(5.0, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras1.setImposto(4598.585312072122);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(4598.585312072122, transportadoras1.getImposto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", 2250.25, (-1.0), true, (-2283.0));
      boolean boolean0 = transportadoras0.isPremium();
      assertEquals(2250.25, transportadoras0.getImposto(), 0.01);
      assertTrue(boolean0);
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
      assertEquals((-2283.0), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Xf`iH^%i}F=#1\"-~/s", 0.0, 0.0, false, 0.0);
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("~)N", (-1.0), (-1.0), false, 1447.133);
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals((-1.0), transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(1447.133, double0, 0.01);
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, 1.0, 1.0, false, 1.0);
      transportadoras0.getNome();
      assertEquals(1.0, transportadoras0.getImposto(), 0.01);
      assertEquals(1.0, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("~)N", (-1.0), (-1.0), false, 1447.133);
      transportadoras0.setNome("");
      transportadoras0.getNome();
      assertEquals(1447.133, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals((-1.0), transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(transportadoras0.isPremium());
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, (-1543.7984296201753), 0.0, false, (-1543.7984296201753));
      double double0 = transportadoras0.getLucro();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1543.7984296201753), transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1543.7984296201753), transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("~)N", (-1.0), (-1.0), false, 1447.133);
      double double0 = transportadoras0.getLucro();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(1447.133, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(transportadoras0.isPremium());
      assertEquals((-1.0), transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Lucro: ", (-1369.8047545926058), (-1369.8047545926058), false, 0.0);
      Double double0 = new Double((-1369.8047545926058));
      Double double1 = new Double(0.0);
      transportadoras0.altera(double0, double1, 0);
      double double2 = transportadoras0.getImposto();
      assertEquals(0, transportadoras0.getFormula());
      assertEquals(0.0, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("M[/}eT~", (-1431.3665828617761), (-1431.3665828617761), false, 0.0);
      double double0 = transportadoras0.getImposto();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals((-1431.3665828617761), transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1431.3665828617761), double0, 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, (-291));
      int int0 = transportadoras0.getFormula();
      assertEquals((-291), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Lucro: ", (-1369.8047545926058), (-1369.8047545926058), false, 0.0);
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertFalse(transportadoras1.isPremium());
      assertTrue(transportadoras1.equals((Object)transportadoras0));
      assertEquals((-1369.8047545926058), transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras1.getFormula());
      assertEquals((-1369.8047545926058), transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("I", 146.415312941, 146.415312941, false, 146.415312941);
      assertEquals(1, transportadoras0.getFormula());
      
      transportadoras0.setFormula(0);
      transportadoras0.clone();
      assertEquals(0, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras(" Rqe\"T_n9", 0.0, 0.0, true, (-1408.64179));
      transportadoras0.setFormula((-1024));
      transportadoras0.clone();
      assertEquals((-1024), transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setNome((String) null);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      // Undeclared exception!
      try { 
        transportadoras0.equals(transportadoras1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 97.87191086915, 97.87191086915, true, 97.87191086915);
      // Undeclared exception!
      try { 
        transportadoras0.calculaPrecoExpedicao((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("k,yR]#E^h", 1623.9653502, 1623.9653502, false, 1623.9653502);
      // Undeclared exception!
      try { 
        transportadoras0.altera((Double) null, (Double) null, 1541);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadoras transportadoras0 = null;
      try {
        transportadoras0 = new Transportadoras((Transportadoras) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, false, 0.0);
      boolean boolean0 = transportadoras0.isPremium();
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(boolean0);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.1, 0.1, true, (-2693.844775));
      double double0 = transportadoras0.getLucro();
      assertEquals(0.1, double0, 0.01);
      assertEquals((-2693.844775), transportadoras0.getVolFaturacao(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(0.1, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", 2250.25, (-1.0), true, (-2283.0));
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
      assertEquals(2250.25, transportadoras0.getImposto(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-2283.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Lucro: ", (-1369.8047545926058), (-1369.8047545926058), false, 0.0);
      transportadoras0.getNome();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1369.8047545926058), transportadoras0.getLucro(), 0.01);
      assertEquals((-1369.8047545926058), transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      double double0 = transportadoras0.getImposto();
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      int int0 = transportadoras0.getFormula();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Double double0 = new Double((-937.635296172243));
      transportadoras0.altera(double0, double0, 3);
      Long long0 = new Long(248L);
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(3, transportadoras0.getFormula());
      assertEquals((-47818.40010478439), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(3316L);
      transportadoras0.setFormula(2);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(2, transportadoras0.getFormula());
      assertEquals(25.015, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("7}; [[mB", 0.0, (-955.43222), false, (-955.43222));
      Long long0 = new Long(4L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals((-26752.10216), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals((-25796.66994), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 97.87191086915, 97.87191086915, true, 97.87191086915);
      Long long0 = new Long(782L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(435553.10007302876, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(435455.2281621596, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(1L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(1.1700000000000002, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1.1700000000000002, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras1.setFormula(2146036565);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(2146036565, transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      assertEquals(0.0, transportadoras1.getVolFaturacao(), 0.01);
      
      transportadoras1.setVolFaturacao((-1.0));
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras0.setPremium(true);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertTrue(transportadoras0.isPremium());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Xf`iH^%i}F=#1\"-~/s", 0.0, 0.0, false, 0.0);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setLucro(5.0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(5.0, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setImposto(46.36285042);
      Transportadoras transportadoras1 = new Transportadoras();
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(46.36285042, transportadoras0.getImposto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertFalse(transportadoras1.isPremium());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertTrue(boolean0);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Xf`iH^%i}F=#1\"-~/s", 0.0, 0.0, false, 0.0);
      boolean boolean0 = transportadoras0.equals("Nome: Xf`iH^%i}F=#1\"-~/s\nImposto: 0.0\nLucro: 0.0\nPremium: false\n# Formula: 1\n");
      assertFalse(boolean0);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("nC", 2075.954, 2075.954, false, (-813.0));
      boolean boolean0 = transportadoras0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(2075.954, transportadoras0.getImposto(), 0.01);
      assertEquals(2075.954, transportadoras0.getLucro(), 0.01);
      assertEquals((-813.0), transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals(transportadoras0);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(boolean0);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertTrue(transportadoras1.equals((Object)transportadoras0));
      
      transportadoras1.setNome("+1|,VlTkyu5.j2");
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      String string0 = transportadoras0.toString();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals("Nome: \nImposto: 0.3\nLucro: 0.1\nPremium: false\n# Formula: 1\n", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.addVolFaturacao((-343.31672068103));
      assertEquals((-343.31672068103), transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      
      Double double0 = new Double((-343.31672068103));
      transportadoras0.altera(double0, double0, 0);
      int int0 = transportadoras0.getFormula();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula(2146036565);
      Long long0 = new Long(1L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(2146036565, transportadoras0.getFormula());
      assertEquals(0.0, double0, 0.01);
  }
}
