/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 18:52:25 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Artigo;
import Model.Malas;
import Model.Sapatilhas;
import Model.TShirt;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertNotNull(sapatilhas1);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setCorrecaoPreco((-2396.69566967));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals((-2396.69566967), sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(1, sapatilhas1.getId());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals((-2396.69566967), sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(1, sapatilhas1.getId());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(1, sapatilhas1.getId());
      assertFalse(sapatilhas1.getAtilhos());
      assertNotNull(sapatilhas1);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas0.setPrecoBase(1.5);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(1.5, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(1.5, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(1, sapatilhas1.getId());
      assertFalse(sapatilhas1.getAtilhos());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals("", sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertNotNull(sapatilhas1);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setNumeroDonos((-228));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals("", sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals((-228), sapatilhas1.getNumeroDonos());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals("", sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals((-228), sapatilhas1.getNumeroDonos());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = new Sapatilhas();
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertNotNull(sapatilhas1);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      Period period0 = Period.of(4213, 1459, 45);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "*^yC63XThy{m,B-", artigo_Estado0, 0, artigo_Avaliacao0, "^1-NH:F>bgYZ@'M ", "^1-NH:F>bgYZ@'M ", "*^yC63XThy{m,B-", 1840.10056151996, 0, "^1-NH:F>bgYZ@'M ");
      assertEquals("^1-NH:F>bgYZ@'M ", tShirt0.getMarca());
      assertEquals("^1-NH:F>bgYZ@'M ", tShirt0.getDescricao());
      assertEquals("*^yC63XThy{m,B-", tShirt0.getTipo());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("^1-NH:F>bgYZ@'M ", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals("*^yC63XThy{m,B-", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1840.10056151996, tShirt0.getPrecoBase(), 0.01);
      assertEquals(1, tShirt0.getId());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.toString(localDate0);
      assertEquals("^1-NH:F>bgYZ@'M ", tShirt0.getMarca());
      assertEquals("^1-NH:F>bgYZ@'M ", tShirt0.getDescricao());
      assertEquals("*^yC63XThy{m,B-", tShirt0.getTipo());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("^1-NH:F>bgYZ@'M ", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals("*^yC63XThy{m,B-", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1840.10056151996, tShirt0.getPrecoBase(), 0.01);
      assertEquals(1, tShirt0.getId());
      assertNotNull(string0);
      assertEquals("ID: 1\nTipo: *^yC63XThy{m,B-\nEstado: NOVO\nN\u00FAmero de Donos: 0\nAvaliacao: null\nDescri\u00E7\u00E3o: ^1-NH:F>bgYZ@'M \nMarca: ^1-NH:F>bgYZ@'M \nC\u00F3digo: *^yC63XThy{m,B-\nPre\u00E7o Base: 1840.10056151996\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: ^1-NH:F>bgYZ@'M \nTamanho: XL\nPadrao: LISO\nPre\u00E7o Final: 1840.10056151996\n", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNotNull(tShirt0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      double double0 = tShirt0.precoFinal(localDate0);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertNotNull(malas0);
      
      malas0.setPrecoBase(1767.98196229116);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(1767.98196229116, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      
      Period period0 = Period.ofWeeks(2675);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      double double0 = malas0.precoFinal(localDate0);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(1767.98196229116, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(1767.98196229116, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, (String) null, (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "x;*AP", artigo_Estado0, (-1896), artigo_Avaliacao0, (String) null, "x;*AP", (String) null, (-1896), (-1230.299), "");
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals((-1896.0), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals((-1230.299), sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("x;*AP", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getCor());
      assertEquals("x;*AP", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNotNull(sapatilhas0);
      
      double double0 = sapatilhas0.precoFinal((LocalDate) null);
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals((-1896.0), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals((-1230.299), sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("x;*AP", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getCor());
      assertEquals("x;*AP", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals((-1896.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "b.gj", artigo_Estado0, 0, artigo_Avaliacao0, "b.gj", "b.gj", "b.gj", 0, 0, "b.gj");
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1, tShirt0.getId());
      assertEquals("b.gj", tShirt0.getTipo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("b.gj", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("b.gj", tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("b.gj", tShirt0.getMarca());
      assertEquals("b.gj", tShirt0.getDescricao());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getTransportadora();
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1, tShirt0.getId());
      assertEquals("b.gj", tShirt0.getTipo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("b.gj", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("b.gj", tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("b.gj", tShirt0.getMarca());
      assertEquals("b.gj", tShirt0.getDescricao());
      assertNotNull(string0);
      assertEquals("b.gj", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNotNull(tShirt0);
      
      tShirt0.setTransportadora("");
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getTransportadora());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      String string0 = tShirt0.getTransportadora();
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getTransportadora());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertNotNull(tShirt0);
      
      tShirt0.setTipo((String) null);
      assertNull(tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      
      String string0 = tShirt0.getTipo();
      assertNull(tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(1547, true, "S", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "S", artigo_Estado0, 1547, artigo_Avaliacao0, "", "S", "S", 1547, 1547, "");
      assertEquals(1, sapatilhas0.getId());
      assertEquals("S", sapatilhas0.getCodigo());
      assertEquals(1547.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(1547.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1547, sapatilhas0.getTamanhoNumerico());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals("S", sapatilhas0.getMarca());
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals("S", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("S", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.getTipo();
      assertEquals(1, sapatilhas0.getId());
      assertEquals("S", sapatilhas0.getCodigo());
      assertEquals(1547.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(1547.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1547, sapatilhas0.getTamanhoNumerico());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals("S", sapatilhas0.getMarca());
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals("S", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("S", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNotNull(string0);
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getAvaliacao());
      assertNotNull(sapatilhas0);
      
      sapatilhas0.setPrecoBase(265.92);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(265.92, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getAvaliacao());
      
      double double0 = sapatilhas0.getPrecoBase();
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(265.92, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(265.92, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "}a.r\"5?):O .1d-", artigo_Estado0, 3, artigo_Avaliacao0, "}a.r\"5?):O .1d-", "}a.r\"5?):O .1d-", "}a.r\"5?):O .1d-", (-312.85122869), 0.0, "Model.Artigo$Avaliacao");
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getTipo());
      assertEquals((-312.85122869), tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals(Artigo.Avaliacao.BOM, tShirt0.getAvaliacao());
      assertEquals(3, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getDescricao());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertEquals("Model.Artigo$Avaliacao", tShirt0.getTransportadora());
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getMarca());
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getCodigo());
      assertEquals(1, tShirt0.getId());
      assertNotNull(tShirt0);
      
      double double0 = tShirt0.getPrecoBase();
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getTipo());
      assertEquals((-312.85122869), tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals(Artigo.Avaliacao.BOM, tShirt0.getAvaliacao());
      assertEquals(3, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getDescricao());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertEquals("Model.Artigo$Avaliacao", tShirt0.getTransportadora());
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getMarca());
      assertEquals("}a.r\"5?):O .1d-", tShirt0.getCodigo());
      assertEquals(1, tShirt0.getId());
      assertEquals((-312.85122869), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "Corre\u00E7\u00E3o do Pre\u00E7o: ", artigo_Estado0, 2, artigo_Avaliacao0, "Corre\u00E7\u00E3o do Pre\u00E7o: ", "Corre\u00E7\u00E3o do Pre\u00E7o: ", (String) null, 2, (-2392.212), (String) null);
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(1, tShirt0.getId());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getDescricao());
      assertEquals((-2392.212), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(2.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals(Artigo.Avaliacao.IMPECAVEL, tShirt0.getAvaliacao());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getMarca());
      assertEquals(2, tShirt0.getNumeroDonos());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getTipo());
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertNotNull(tShirt0);
      
      int int0 = tShirt0.getNumeroDonos();
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(1, tShirt0.getId());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getDescricao());
      assertEquals((-2392.212), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(2.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals(Artigo.Avaliacao.IMPECAVEL, tShirt0.getAvaliacao());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getMarca());
      assertEquals(2, tShirt0.getNumeroDonos());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getTipo());
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNotNull(tShirt0);
      
      tShirt0.setNumeroDonos((-317));
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertEquals((-317), tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      
      int int0 = tShirt0.getNumeroDonos();
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertEquals((-317), tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertEquals((-317), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "[;C[xoC41[|7;`eE5x\"", artigo_Estado0, 0, artigo_Avaliacao0, "A6FaRPC[!VN", "[;C[xoC41[|7;`eE5x\"", "A6FaRPC[!VN", 1861.9, 1861.9, "Data de Lancamento: ");
      assertEquals("A6FaRPC[!VN", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(1861.9, tShirt0.getPrecoBase(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(Artigo.Avaliacao.BOM, tShirt0.getAvaliacao());
      assertEquals("Data de Lancamento: ", tShirt0.getTransportadora());
      assertEquals(1861.9, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(1, tShirt0.getId());
      assertEquals("[;C[xoC41[|7;`eE5x\"", tShirt0.getMarca());
      assertEquals("[;C[xoC41[|7;`eE5x\"", tShirt0.getTipo());
      assertEquals("A6FaRPC[!VN", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getMarca();
      assertEquals("A6FaRPC[!VN", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(1861.9, tShirt0.getPrecoBase(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(Artigo.Avaliacao.BOM, tShirt0.getAvaliacao());
      assertEquals("Data de Lancamento: ", tShirt0.getTransportadora());
      assertEquals(1861.9, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(1, tShirt0.getId());
      assertEquals("[;C[xoC41[|7;`eE5x\"", tShirt0.getMarca());
      assertEquals("[;C[xoC41[|7;`eE5x\"", tShirt0.getTipo());
      assertEquals("A6FaRPC[!VN", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNotNull(string0);
      assertEquals("[;C[xoC41[|7;`eE5x\"", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertNotNull(malas0);
      
      String string0 = malas0.getMarca();
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertNotNull(tShirt0);
      
      tShirt0.setId((-1031));
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals((-1031), tShirt0.getId());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      
      int int0 = tShirt0.getId();
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals((-1031), tShirt0.getId());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertEquals((-1031), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 321, "", artigo_Estado0, 321, artigo_Avaliacao0, "", "", "Avaliacao: ", (-686.8892524553), 0.0F, "blZ]{?9g.PY?V");
      assertEquals(321, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals((-686.8892524553), malas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("blZ]{?9g.PY?V", malas0.getTransportadora());
      assertEquals("Avaliacao: ", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNotNull(malas0);
      
      Artigo.Estado artigo_Estado1 = malas0.getEstado();
      assertSame(artigo_Estado0, artigo_Estado1);
      assertSame(artigo_Estado1, artigo_Estado0);
      assertEquals(321, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals((-686.8892524553), malas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("blZ]{?9g.PY?V", malas0.getTransportadora());
      assertEquals("Avaliacao: ", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(Artigo.Estado.NOVO, artigo_Estado1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, (String) null, 0, (String) null, artigo_Estado0, 0, artigo_Avaliacao0, (String) null, "\n", "\n", 1.5, 3825.0, (String) null);
      assertEquals(3825.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(1.5, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(1, malas0.getId());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("\n", malas0.getCodigo());
      assertNull(malas0.getMaterial());
      assertEquals(Artigo.Avaliacao.BOM, malas0.getAvaliacao());
      assertEquals("\n", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getTipo());
      assertNull(malas0.getDescricao());
      assertNotNull(malas0);
      
      String string0 = malas0.getDescricao();
      assertEquals(3825.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(1.5, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(1, malas0.getId());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("\n", malas0.getCodigo());
      assertNull(malas0.getMaterial());
      assertEquals(Artigo.Avaliacao.BOM, malas0.getAvaliacao());
      assertEquals("\n", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getTipo());
      assertNull(malas0.getDescricao());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "Corre\u00E7\u00E3o do Pre\u00E7o: ", artigo_Estado0, 2, artigo_Avaliacao0, "Corre\u00E7\u00E3o do Pre\u00E7o: ", "Corre\u00E7\u00E3o do Pre\u00E7o: ", (String) null, 2, (-2392.212), (String) null);
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getTipo());
      assertNull(tShirt0.getCodigo());
      assertEquals(2, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals((-2392.212), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(2.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getMarca());
      assertEquals(Artigo.Avaliacao.IMPECAVEL, tShirt0.getAvaliacao());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getDescricao());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getDescricao();
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getTipo());
      assertNull(tShirt0.getCodigo());
      assertEquals(2, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals((-2392.212), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(2.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getMarca());
      assertEquals(Artigo.Avaliacao.IMPECAVEL, tShirt0.getAvaliacao());
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", tShirt0.getDescricao());
      assertNotNull(string0);
      assertEquals("Corre\u00E7\u00E3o do Pre\u00E7o: ", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNotNull(tShirt0);
      
      tShirt0.setCorrecaoPreco(2728.0);
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(2728.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      
      double double0 = tShirt0.getCorrecaoPreco();
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(2728.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(2728.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNotNull(malas0);
      
      malas0.setCorrecaoPreco((-649.6319309438525));
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals((-649.6319309438525), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      
      double double0 = malas0.getCorrecaoPreco();
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals((-649.6319309438525), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals((-649.6319309438525), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "\n", artigo_Estado0, 0, artigo_Avaliacao0, (String) null, "", (String) null, 0, 0, "");
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getDescricao());
      assertEquals(Artigo.Avaliacao.IMPECAVEL, tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals("\n", tShirt0.getTipo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getCodigo();
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getDescricao());
      assertEquals(Artigo.Avaliacao.IMPECAVEL, tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals("\n", tShirt0.getTipo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertNotNull(malas0);
      
      String string0 = malas0.getCodigo();
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNotNull(tShirt0);
      
      tShirt0.getAvaliacao();
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNotNull(tShirt0);
      
      boolean boolean0 = tShirt0.equals(tShirt0);
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 1802, "", artigo_Estado0, 1802, artigo_Avaliacao0, "4fbGYnNW>)Q&~bF>", "", "4fbGYnNW>)Q&~bF>", 2502.58321442873, 0.0, "MswzzltP");
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(1802, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("4fbGYnNW>)Q&~bF>", malas0.getDescricao());
      assertEquals("MswzzltP", malas0.getTransportadora());
      assertEquals("4fbGYnNW>)Q&~bF>", malas0.getCodigo());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals(2502.58321442873, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNotNull(malas0);
      
      Malas malas1 = (Malas)malas0.clone();
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(1802, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("4fbGYnNW>)Q&~bF>", malas0.getDescricao());
      assertEquals("MswzzltP", malas0.getTransportadora());
      assertEquals("4fbGYnNW>)Q&~bF>", malas0.getCodigo());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals(2502.58321442873, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, malas1.getEstado());
      assertEquals(1802, malas1.getAno_da_colecao());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals("4fbGYnNW>)Q&~bF>", malas1.getDescricao());
      assertEquals("MswzzltP", malas1.getTransportadora());
      assertEquals("4fbGYnNW>)Q&~bF>", malas1.getCodigo());
      assertNull(malas1.getAvaliacao());
      assertEquals("", malas1.getTipo());
      assertEquals("", malas1.getMarca());
      assertEquals(2502.58321442873, malas1.getPrecoBase(), 0.01);
      assertEquals(1, malas1.getId());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas1.getTipo_mala());
      assertEquals("", malas1.getMaterial());
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertNotNull(malas0);
      
      malas0.setNumeroDonos(1459);
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getCodigo());
      assertEquals(1459, malas0.getNumeroDonos());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      Malas malas1 = (Malas)malas0.clone();
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getCodigo());
      assertEquals(1459, malas0.getNumeroDonos());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas1.getMaterial());
      assertEquals(1, malas1.getId());
      assertEquals(1459, malas1.getNumeroDonos());
      assertEquals("", malas1.getMarca());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals("", malas1.getCodigo());
      assertEquals(0, malas1.getAno_da_colecao());
      assertEquals("", malas1.getDescricao());
      assertNull(malas1.getAvaliacao());
      assertEquals("", malas1.getTipo());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getEstado());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertNull(malas1.getTransportadora());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTipo_mala());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getTransportadora());
      assertNotNull(malas0);
      
      malas0.setId(0);
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getId());
      
      Malas malas1 = (Malas)malas0.clone();
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getId());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals("", malas1.getTipo());
      assertEquals(0, malas1.getAno_da_colecao());
      assertEquals(0, malas1.getNumeroDonos());
      assertNull(malas1.getEstado());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals("", malas1.getMaterial());
      assertEquals("", malas1.getDescricao());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertNull(malas1.getAvaliacao());
      assertNull(malas1.getTransportadora());
      assertEquals("", malas1.getCodigo());
      assertEquals("", malas1.getMarca());
      assertNull(malas1.getTipo_mala());
      assertEquals(0, malas1.getId());
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNotNull(malas0);
      
      malas0.setId((-1172));
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals((-1172), malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      
      Malas malas1 = (Malas)malas0.clone();
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals((-1172), malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas1.getEstado());
      assertNull(malas1.getTipo_mala());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals("", malas1.getCodigo());
      assertEquals("", malas1.getMarca());
      assertNull(malas1.getTransportadora());
      assertEquals("", malas1.getMaterial());
      assertEquals("", malas1.getDescricao());
      assertNull(malas1.getAvaliacao());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals((-1172), malas1.getId());
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(0, malas1.getAno_da_colecao());
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "ypzAx^Q#vXxCjxo9;h,", artigo_Estado0, (-25), artigo_Avaliacao0, "ypzAx^Q#vXxCjxo9;h,", "SATISFATORIO", "", (-173.2434), 1.5, "x");
      assertEquals(1, tShirt0.getId());
      assertEquals("ypzAx^Q#vXxCjxo9;h,", tShirt0.getTipo());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("x", tShirt0.getTransportadora());
      assertEquals(1.5, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATORIO, tShirt0.getAvaliacao());
      assertEquals("ypzAx^Q#vXxCjxo9;h,", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals("", tShirt0.getCodigo());
      assertEquals((-25), tShirt0.getNumeroDonos());
      assertEquals((-173.2434), tShirt0.getPrecoBase(), 0.01);
      assertEquals("SATISFATORIO", tShirt0.getMarca());
      assertNotNull(tShirt0);
      
      TShirt tShirt1 = (TShirt)tShirt0.clone();
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(1, tShirt0.getId());
      assertEquals("ypzAx^Q#vXxCjxo9;h,", tShirt0.getTipo());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("x", tShirt0.getTransportadora());
      assertEquals(1.5, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATORIO, tShirt0.getAvaliacao());
      assertEquals("ypzAx^Q#vXxCjxo9;h,", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals("", tShirt0.getCodigo());
      assertEquals((-25), tShirt0.getNumeroDonos());
      assertEquals((-173.2434), tShirt0.getPrecoBase(), 0.01);
      assertEquals("SATISFATORIO", tShirt0.getMarca());
      assertEquals("x", tShirt1.getTransportadora());
      assertEquals(Artigo.Avaliacao.SATISFATORIO, tShirt1.getAvaliacao());
      assertEquals("SATISFATORIO", tShirt1.getMarca());
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      assertEquals((-25), tShirt1.getNumeroDonos());
      assertEquals((-173.2434), tShirt1.getPrecoBase(), 0.01);
      assertEquals("ypzAx^Q#vXxCjxo9;h,", tShirt1.getTipo());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(1, tShirt1.getId());
      assertEquals("ypzAx^Q#vXxCjxo9;h,", tShirt1.getDescricao());
      assertEquals(1.5, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.RISCAS, tShirt1.getPadrao());
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-1.0F), "Model.Sapatilhas$Tipos_Sapatilhas", (-1041), "Model.Sapatilhas$Tipos_Sapatilhas", artigo_Estado0, (-871), artigo_Avaliacao0, "Model.Malas$Tipos_Malas", "7W\"Z.1Zc=_q", "Model.Malas$Tipos_Malas", (-1.0F), (-1.0F), "Model.Sapatilhas$Tipos_Sapatilhas");
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas0.getMaterial());
      assertEquals("Model.Malas$Tipos_Malas", malas0.getCodigo());
      assertEquals("Model.Malas$Tipos_Malas", malas0.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATORIO, malas0.getAvaliacao());
      assertEquals((-1.0F), malas0.getDim(), 0.01F);
      assertEquals((-1041), malas0.getAno_da_colecao());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas0.getTransportadora());
      assertEquals("7W\"Z.1Zc=_q", malas0.getMarca());
      assertEquals((-1.0), malas0.getPrecoBase(), 0.01);
      assertEquals((-871), malas0.getNumeroDonos());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, malas0.getId());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas0.getTipo());
      assertNotNull(malas0);
      
      Malas malas1 = (Malas)malas0.clone();
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas0.getMaterial());
      assertEquals("Model.Malas$Tipos_Malas", malas0.getCodigo());
      assertEquals("Model.Malas$Tipos_Malas", malas0.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATORIO, malas0.getAvaliacao());
      assertEquals((-1.0F), malas0.getDim(), 0.01F);
      assertEquals((-1041), malas0.getAno_da_colecao());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas0.getTransportadora());
      assertEquals("7W\"Z.1Zc=_q", malas0.getMarca());
      assertEquals((-1.0), malas0.getPrecoBase(), 0.01);
      assertEquals((-871), malas0.getNumeroDonos());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, malas0.getId());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas0.getTipo());
      assertEquals("Model.Malas$Tipos_Malas", malas1.getCodigo());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas1.getTipo());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas1.getMaterial());
      assertEquals(Artigo.Avaliacao.SATISFATORIO, malas1.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas1.getTipo_mala());
      assertEquals(Artigo.Estado.USADO, malas1.getEstado());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", malas1.getTransportadora());
      assertEquals((-871), malas1.getNumeroDonos());
      assertEquals((-1.0), malas1.getCorrecaoPreco(), 0.01);
      assertEquals(1, malas1.getId());
      assertEquals("Model.Malas$Tipos_Malas", malas1.getDescricao());
      assertEquals((-1.0F), malas1.getDim(), 0.01F);
      assertEquals((-1.0), malas1.getPrecoBase(), 0.01);
      assertEquals((-1041), malas1.getAno_da_colecao());
      assertEquals("7W\"Z.1Zc=_q", malas1.getMarca());
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(1, false, "lA:)Ng", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "lA:)Ng", artigo_Estado0, 1, artigo_Avaliacao0, "lA:)Ng", "", "lA:)Ng", 307.12350612, (-363.2907779463), "");
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("lA:)Ng", sapatilhas0.getCor());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("lA:)Ng", sapatilhas0.getTipo());
      assertEquals(307.12350612, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("lA:)Ng", sapatilhas0.getDescricao());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getTamanhoNumerico());
      assertEquals("lA:)Ng", sapatilhas0.getCodigo());
      assertEquals((-363.2907779463), sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNotNull(sapatilhas0);
      
      // Undeclared exception!
      try { 
        sapatilhas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.Period", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertNotNull(malas0);
      
      String string0 = malas0.getTransportadora();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNotNull(sapatilhas0);
      
      double double0 = sapatilhas0.getPrecoBase();
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.getTipo();
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNotNull(tShirt0);
      
      int int0 = tShirt0.getId();
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertNotNull(malas0);
      
      String string0 = malas0.getDescricao();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATORIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "x8^>@V^\n<szl8'Ft", (-3978), "7~=6Q;1:l,tDAl]gC", artigo_Estado0, (-836), artigo_Avaliacao0, "x8^>@V^\n<szl8'Ft", "$VALUES", "x8^>@V^\n<szl8'Ft", (-3978), (-1.0), "Model.Sapatilhas");
      assertEquals((-3978.0), malas0.getPrecoBase(), 0.01);
      assertEquals((-3978), malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("Model.Sapatilhas", malas0.getTransportadora());
      assertEquals("7~=6Q;1:l,tDAl]gC", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("x8^>@V^\n<szl8'Ft", malas0.getMaterial());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("$VALUES", malas0.getMarca());
      assertEquals("x8^>@V^\n<szl8'Ft", malas0.getDescricao());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("x8^>@V^\n<szl8'Ft", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertNotNull(malas0);
      
      int int0 = malas0.getNumeroDonos();
      assertEquals((-3978.0), malas0.getPrecoBase(), 0.01);
      assertEquals((-3978), malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("Model.Sapatilhas", malas0.getTransportadora());
      assertEquals("7~=6Q;1:l,tDAl]gC", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("x8^>@V^\n<szl8'Ft", malas0.getMaterial());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("$VALUES", malas0.getMarca());
      assertEquals("x8^>@V^\n<szl8'Ft", malas0.getDescricao());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("x8^>@V^\n<szl8'Ft", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertNotNull(malas0);
      
      malas0.getEstado();
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 375, "", artigo_Estado0, 0, artigo_Avaliacao0, "LISO", "LISO", "", 375, 593.9262959581336, "");
      assertEquals("", malas0.getMaterial());
      assertEquals("LISO", malas0.getMarca());
      assertEquals(Artigo.Avaliacao.BOM, malas0.getAvaliacao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(593.9262959581336, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(375, malas0.getAno_da_colecao());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals(375.0, malas0.getPrecoBase(), 0.01);
      assertEquals("LISO", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertNotNull(malas0);
      
      Artigo.Avaliacao artigo_Avaliacao1 = malas0.getAvaliacao();
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertSame(artigo_Avaliacao1, artigo_Avaliacao0);
      assertEquals("", malas0.getMaterial());
      assertEquals("LISO", malas0.getMarca());
      assertEquals(Artigo.Avaliacao.BOM, malas0.getAvaliacao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(593.9262959581336, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(375, malas0.getAno_da_colecao());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals(375.0, malas0.getPrecoBase(), 0.01);
      assertEquals("LISO", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Artigo.Avaliacao.BOM, artigo_Avaliacao1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTransportadora());
      assertNotNull(malas0);
      
      double double0 = malas0.getCorrecaoPreco();
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      assertNotNull(localDate0);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(3528, true, "3q:9|>i4i", localDate0, sapatilhas_Tipos_Sapatilhas0, "3q:9|>i4i", artigo_Estado0, 45, artigo_Avaliacao0, "3q:9|>i4i", "3q:9|>i4i", ",Ko`|?", 1L, 3528, "Model.Sapatilhas$Tipos_Sapatilhas");
      assertEquals(3528.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("3q:9|>i4i", sapatilhas0.getDescricao());
      assertEquals(",Ko`|?", sapatilhas0.getCodigo());
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals("3q:9|>i4i", sapatilhas0.getMarca());
      assertEquals("3q:9|>i4i", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(3528, sapatilhas0.getTamanhoNumerico());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", sapatilhas0.getTransportadora());
      assertEquals("3q:9|>i4i", sapatilhas0.getTipo());
      assertEquals(1.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.getCodigo();
      assertEquals(3528.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("3q:9|>i4i", sapatilhas0.getDescricao());
      assertEquals(",Ko`|?", sapatilhas0.getCodigo());
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals("3q:9|>i4i", sapatilhas0.getMarca());
      assertEquals("3q:9|>i4i", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(3528, sapatilhas0.getTamanhoNumerico());
      assertEquals("Model.Sapatilhas$Tipos_Sapatilhas", sapatilhas0.getTransportadora());
      assertEquals("3q:9|>i4i", sapatilhas0.getTipo());
      assertEquals(1.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertNotNull(string0);
      assertEquals(",Ko`|?", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECAVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "Q[m<6D@@rGI2z n1U%$", artigo_Estado0, (-168), artigo_Avaliacao0, "9\"7h-G2$L^cM0w}f?6{", (String) null, "Q[<6D@@rGI2z n1U%$", 0.0, (-1.0), "QR6XU,@0YhUT");
      assertEquals(1, tShirt0.getId());
      assertEquals("QR6XU,@0YhUT", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals("9\"7h-G2$L^cM0w}f?6{", tShirt0.getDescricao());
      assertEquals("Q[m<6D@@rGI2z n1U%$", tShirt0.getTipo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("Q[<6D@@rGI2z n1U%$", tShirt0.getCodigo());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals((-1.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getMarca());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getMarca();
      assertEquals(1, tShirt0.getId());
      assertEquals("QR6XU,@0YhUT", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals("9\"7h-G2$L^cM0w}f?6{", tShirt0.getDescricao());
      assertEquals("Q[m<6D@@rGI2z n1U%$", tShirt0.getTipo());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("Q[<6D@@rGI2z n1U%$", tShirt0.getCodigo());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals((-1.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getMarca());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas0.setTransportadora("9e7h-G2/M^c0W}f,6g");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      sapatilhas0.setCorrecaoPreco((-269.4159824338));
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals((-269.4159824338), sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      sapatilhas1.setPrecoBase((-227));
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals((-227.0), sapatilhas1.getPrecoBase(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setMarca("M");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setDescricao("\n");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      sapatilhas0.setNumeroDonos((-187));
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals((-187), sapatilhas0.getNumeroDonos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      sapatilhas1.setEstado(artigo_Estado0);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setTipo("Pre\u00E7o Final: ");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertFalse(boolean0);
      assertEquals(2, sapatilhas1.getId());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas((-2778), false, "Estado: ", localDate0, sapatilhas_Tipos_Sapatilhas0, "Model.Malas$Tipos_Malas", artigo_Estado0, (-2778), artigo_Avaliacao0, "Estado: ", "u0U", "kSED#}`/%0Ka!?z|", 0.0, 0.0F, "R5l-OT^u{r7T=5/");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals("R5l-OT^u{r7T=5/", sapatilhas1.getTransportadora());
      assertEquals("Estado: ", sapatilhas1.getDescricao());
      assertEquals("kSED#}`/%0Ka!?z|", sapatilhas1.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("Model.Malas$Tipos_Malas", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("u0U", sapatilhas1.getMarca());
      assertEquals((-2778), sapatilhas0.getNumeroDonos());
      assertTrue(boolean0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setCodigo("@u1?YnTfa$rWCY<");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Malas malas0 = new Malas();
      // Undeclared exception!
      try { 
        malas0.toString((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Malas malas0 = new Malas();
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      malas0.setAvaliacao(artigo_Avaliacao0);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
  }
}
