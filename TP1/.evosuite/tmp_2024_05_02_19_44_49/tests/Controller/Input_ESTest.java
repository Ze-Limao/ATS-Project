/*
 * This file was automatically generated by EvoSuite
 * Thu May 02 18:54:55 GMT 2024
 */

package Controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Controller.Input;
import View.Apresentacao;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("Dcv5/#ebO:");
      Apresentacao apresentacao0 = new Apresentacao();
      int int0 = input0.lerInt(apresentacao0, "Dcv5/#ebO:", (-2013355012), 3);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("l7LF8 b49WP='[nRMf&");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      double double0 = input0.lerDouble(apresentacao0, "l7LF8 b49WP='[nRMf&", (-1), (-1));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("68Z9X?X9");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      double double0 = input0.lerDouble(apresentacao0, "9Ko802~u$kUdjRH':9#", (-1), 817);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("8");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerInt(apresentacao0, "x\f:m+LD-ybtr;ND0", (-3), 3);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("6");
      // Undeclared exception!
      try { 
        input0.lerDouble(apresentacao0, "~9bepZ+XR", (-2), (-2));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("Mr Ot/");
      String string0 = input0.lerString(apresentacao0, "");
      assertEquals("Mr Ot/", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("");
      String string0 = input0.lerString(apresentacao0, ";mh");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SystemInUtil.addInputLine("8");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      float float0 = input0.lerFloat(apresentacao0, "vw!LLY}q;Af*.3Zn/", (-620.6388F), 1690.699F);
      assertEquals(8.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerString((Apresentacao) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerSN((Apresentacao) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerInt((Apresentacao) null, "", (-1), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerFloat((Apresentacao) null, "", 2531.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerDouble((Apresentacao) null, "", 3, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerData((Apresentacao) null, "W)6$:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SystemInUtil.addInputLine("u]4$^o@eF");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerData(apresentacao0, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("[;wy$W7c\u0003r>.-D-nG3");
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerData(apresentacao0, "SNJL)!P");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SystemInUtil.addInputLine("8");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerFloat(apresentacao0, "+_)QDE/\"e#Ftht6Y", 0.0F, 0.0F);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("zAPdIchl!dFc");
      Apresentacao apresentacao0 = new Apresentacao();
      float float0 = input0.lerFloat(apresentacao0, "+-----------------------------+\n|          Encomendas         |\n+-----------------------------+", 5868.93F, (-1209.9515F));
      assertEquals(Float.NaN, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("zAPdIchl!dFc");
      Apresentacao apresentacao0 = new Apresentacao();
      int int0 = input0.lerInt(apresentacao0, "zAPdIchl!dFc", (-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("SNjL)!P");
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerInt(apresentacao0, "|y_D'", 2146215199, 421);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("{8<hXp");
      // Undeclared exception!
      try { 
        input0.lerDouble(apresentacao0, "B>XV7{*-UdkG^g!Lt,", 0, (-27));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("j");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerSN(apresentacao0, "-");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("S");
      Input input0 = new Input();
      boolean boolean0 = input0.lerSN(apresentacao0, "VENDEDOR QUE MAIS FACTUROU NUM PER\u00CDODO OU DESDE SEMPRE");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerString(apresentacao0, "S");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("N");
      boolean boolean0 = input0.lerSN(apresentacao0, "CK*i/2/@Z<cAOW8");
      assertFalse(boolean0);
  }
}
